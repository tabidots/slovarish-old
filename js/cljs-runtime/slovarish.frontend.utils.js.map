{"version":3,"sources":["slovarish/frontend/utils.cljs"],"mappings":"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","names":["slovarish.frontend.utils/re-pos","re","s","cljs.core.not_EQ_","js/RegExp","res","temp__5751__auto__","m","cljs.core.assoc","cljs.core/first","slovarish.frontend.utils/ordered-matches","s1","s2","enumerate","coll","cljs.core.map_indexed","cljs.core/vector","floor","x","js/Math","window-span","x__4336__auto__","y__4337__auto__","cljs.core/count","cljs.core.remove","cljs.core/nil?","iter__4652__auto__","s__1025784","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","b__1025786","cljs.core/chunk-buffer","i__1025785","vec__1025794","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__1025783","cljs.core/chunk-rest","vec__1025850","cljs.core/cons","cljs.core/rest","i","top","s__1025812","b__1025814","i__1025813","vec__1025828","iter__1025811","vec__1025839","s__1025857","b__1025859","i__1025858","vec__1025867","iter__1025856","vec__1025874","j","bottom","cljs.core._EQ_","slovarish.frontend.utils/jaro-similarity","m1","m2","cljs.core/empty?","non-matches","cljs.core.map","cljs.core/=","cljs.core.filter","cljs.core/false?","t","cljs.core/chunk-first"],"sourcesContent":["(ns slovarish.frontend.utils)\n\n(defn re-pos\n  \"Returns a map of all regex matches in s in the form {index match}, or an\n  empty map if no matches.\"\n  ;; https://stackoverflow.com/a/18737013\n  [re s]\n  (when (not= re #\"\")\n    (let [re (js/RegExp. (.-source re) \"g\")]\n      (loop [res {}]\n        (if-let [m (.exec re s)]\n          (recur (assoc res (.-index m) (first m)))\n          res)))))\n\n(defn- ordered-matches\n  [s1 s2]\n  (let [enumerate   (fn [coll] (map-indexed vector coll))\n        floor       (fn [x] (.floor js/Math x))\n        window-span (-> (max (count s1) (count s2))\n                        (/ 2) floor dec)]\n    (remove nil?\n      (for [[i top] (enumerate s1)]\n        (first\n          (for [[j bottom] (enumerate s2)\n                :when (and (= top bottom)\n                           (<= (- i window-span) j (inc (+ i window-span))))]\n             top))))))\n\n(defn jaro-similarity\n  \"Returns the Jaro similarity of two strings (1 = exact match).\"\n  [s1 s2]\n  (let [m1 (ordered-matches s1 s2)\n        m2 (ordered-matches s2 s1)]\n    (if (empty? m1) 0\n      (let [m           (count m1)\n            non-matches (->> (map = m1 m2) (filter false?) count)\n            t           (/ non-matches 2)]\n        (/ (+ (/ m (count s1)) (/ m (count s2)) (/ (- m t) m)) 3)))))\n"]}