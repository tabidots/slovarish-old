{"version":3,"sources":["slovarish/frontend/verbs/siblings.cljs"],"mappings":"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","names":["slovarish.frontend.verbs.siblings/prefixes","slovarish.frontend.verbs.siblings/get-prefix","verb","cljs.core/re-pattern","cljs.core/re-find","cljs.core/first","cljs.core/not-empty","slovarish.frontend.verbs.siblings/unprefix","temp__5751__auto__","prefix","G__1025890","clojure.string/replace-first","cljs.core.not_EQ_","clojure.string/ends-with?","v","slovarish.frontend.verbs.siblings/s-roots","slovarish.frontend.verbs.siblings/get-root","pool","cljs.core.remove","cljs.core/deref","cljs.core/keys","slovarish.frontend.data/all-verbs","other-prefix?","possible-root","excluded-prefixes","patt","clojure.string/replace","p1__1025891#","cljs.core/some","and__4251__auto__","cljs.core/not","G__1025906","fexpr__1025905","cljs.core.conj","s-root","p1__1025892#","cljs.core.filter","clojure.string/includes?","cljs.core.subs","fexpr__1025928","fexpr__1025930","fexpr__1025931","slovarish.frontend.verbs.siblings/get-siblings","match","cljs.core.sort_by","cljs.core/<","iter__4652__auto__","s__1025935","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__1025937","cljs.core/chunk-buffer","i__1025936","cljs.core/-nth","vec__1025940","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__1025934","cljs.core/chunk-rest","vec__1025949","cljs.core/cons","cljs.core/rest","verb-2","sibling","or__4253__auto__","fexpr__1025944","fexpr__1025953","cljs.core/chunk-first"],"sourcesContent":["(ns slovarish.frontend.verbs.siblings\n  (:require [clojure.string :as s]\n            [cljs.reader :as reader]\n            [slovarish.frontend.data :refer [all-verbs]]))\n\n(def prefixes ; Wade's grammar, section 254\n  (str \"^(\u0432\u0441|\u0432\u043e\u0437|\u0432\u043e\u0441|\u0432\u044b|\"\n       \"(?:\u0432\u0437|\u0438\u0437|\u043d\u0430\u0434|\u043e\u0442|\u043e\u0431?|\u043f\u043e\u0434|\u043f\u0440\u0435\u0434|\u0440\u0430\u0437|\u043e?\u0441)(?![\u0435\u044f])[\u043e\u044b\u044a]?|\"\n       \"\u0432(?![\u0435\u044f])[\u043e\u044b\u044a]?|\u0437\u0430|\u043d\u0430|\u043d\u0435\u0434\u043e|\u0434\u043e|\u043e\u0431\u0435\u0437|\u043e\u0431\u0435\u0441|\u043f\u0435\u0440\u0435|\u043e?\u043f\u043e|\u043f\u0440\u0435|\u043f\u0440\u0438(\u043e\u0442|\u043e)?|\"\n       \"\u043f\u0440\u043e(\u0438\u0437\u043e?)?|\u0440\u0430\u0441\u0441?|\u0441\u043e\u043e\u0442|\u0443)?\"))\n\n;; TODO: \u043f\u0440\u0435\u0432\u0437\u043e\u0439\u0442\u0438, \u043f\u0440\u0435\u0432\u043e\u0437\u043d\u0435\u0441\u0442\u0438, \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u0438\u0442\u044c, \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0442\u044c, \u0441\u043e\u0432\u043c\u0435\u0449\u0430\u0442\u044c\n\n(defn get-prefix\n  [verb]\n  (-> (re-pattern prefixes)\n      (re-find verb)\n      first not-empty))\n\n(defn unprefix\n  [verb]\n  (if-let [prefix (get-prefix verb)]\n    (cond-> verb\n      :always                          (s/replace-first prefix \"\")\n      (and (not= prefix \"\u0432\u044b\")\n           (s/ends-with? prefix \"\u044b\"))  (as-> v (str \"\u0438\" v))\n      (re-find #\"\u0439\u0442\u0438(\u0441\u044c)?$\" verb)      (s/replace-first #\"\u0439\" \"\u0438\u0434\"))\n    verb))\n\n(def s-roots\n  [\"\u0441\u043f\u0430\u0442\u044c\" \"\u0441\u043a\u0430\u0437\u0430\u0442\u044c\" \"\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c\" \"\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c\" \"\u0441\u043b\u0443\u0448\u0430\u0442\u044c\" \"\u0441\u0442\u0430\u0432\u0438\u0442\u044c\"\n   \"\u0447\u0438\u0442\u0430\u0442\u044c\" \"\u043f\u0440\u043e\u0441\u0438\u0442\u044c\" \"\u0441\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0442\u044c\" \"\u043d\u043e\u0441\u0438\u0442\u044c\" \"\u043d\u0435\u0441\u0442\u0438\" \"\u0441\u043b\u044b\u0445\u0430\u0442\u044c\"])\n\n(defn get-root\n  [verb]\n  (let [pool          (remove #{verb} (keys @all-verbs))\n        prefix        (get-prefix verb)\n        other-prefix? (fn [possible-root excluded-prefixes]\n                        (let [patt (->> (s/replace possible-root #\"\u0441[\u044c\u044f]$\" \"(\u0441[\u044c\u044f])?$\")\n                                        (str prefixes)\n                                        re-pattern)]\n                          (some #(and (re-find patt %)\n                                      (not ((conj excluded-prefixes prefix)\n                                            (get-prefix %))))\n                                pool)))\n        s-root        (first (filter #(s/includes? verb %) s-roots))]\n    (-> (cond\n          (re-find #\"^.\u0442\u044c(\u0441\u044f)?\" verb)  verb\n          (s/includes? verb \"\u0441\u0447\u0438\u0442\u0430\u0442\u044c\") \"\u0441\u0447\u0438\u0442\u0430\u0442\u044c\" ; \u0441\u0447\u0438\u0442\u0430\u0442\u044c must precede \u0447\u0438\u0442\u0430\u0442\u044c\n          s-root s-root\n          (re-find #\"^(\u0432\u0432|\u0441\u0441)\" verb)                         (subs verb 1)\n          (and (#{\"\u043e\u0431\u043e\"} prefix) ; \u043e\u0431\u043e vs. \u043e (\u043e\u0431\u043e\u0439\u0442\u0438\u0441\u044c)\n               (other-prefix? (subs verb 3) #{}))            (subs verb 3)\n          (and (#{\"\u043f\u043e\u0434\" \"\u043d\u0430\u0434\"} prefix) ; \u043f\u043e\u0434 vs. \u043f\u043e, \u043d\u0430\u0434 vs. \u043d\u0430\n               (other-prefix? (subs verb 2) #{\"\u043f\u043e\u0434\" \"\u043d\u0430\u0434\"})) (subs verb 2)\n          (and (#{\"\u0432\u0441\" \"\u043e\" \"\u0441\"} prefix)\n               (other-prefix? (subs verb 1) #{}))            (subs verb 1)\n          (other-prefix? (unprefix verb) #{})                (unprefix verb)\n          :else                                              verb)\n        (s/replace #\"\u0441[\u044c\u044f]$\" \"\")\n        (str \"(\u0441[\u044c\u044f])?$\") ; CLJ needs \\\\$, CLJS needs $\n        (s/replace #\"^\u0438\u0434\u0442\u0438\" \"(\u0438\u0434|\u0439)\u0442\u0438\")\n        (s/replace #\"^\u0438(?!\u0434\u0442\u0438)\" \"[\u0438\u044b]\"))))\n\n(defn get-siblings\n  [verb]\n  (let [match (re-pattern (str prefixes (get-root verb)))]\n    (sort-by :rank <\n      (for [verb-2 (keys @all-verbs)\n            :let [[sibling prefix] (re-find match verb-2)]\n            :when (some? sibling)]\n        {:sibling sibling\n         :prefix  prefix\n         :rank    (or (:rank (first (@all-verbs sibling)))\n                      15000)}))))\n"]}