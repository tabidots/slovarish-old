{"version":3,"sources":["slovarish/frontend/data.cljs"],"mappings":"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","names":["js/slovarish","js/slovarish.frontend","js/slovarish.frontend.data","js/slovarish.frontend.data.num-batches","slovarish.frontend.data/num-batches","slovarish.frontend.data/batches-loaded","reagent.core.atom","js/slovarish.frontend.data.all-nouns","slovarish.frontend.data/all-nouns","cljs.core.atom","js/slovarish.frontend.data.top-2k-words","slovarish.frontend.data/top-2k-words","js/slovarish.frontend.data.nouns-for-adj","slovarish.frontend.data/nouns-for-adj","js/slovarish.frontend.data.all-verbs","slovarish.frontend.data/all-verbs","js/slovarish.frontend.data.all-adjectives","slovarish.frontend.data/all-adjectives","slovarish.frontend.data/load-mask","cljs.core/deref","cljs.core/re-find","js/navigator","cljs.core.apply","cljs.core/+","cljs.core/vals","slovarish.frontend.data/load-edn","pos","batch","G__1026689","cljs.core.keyword","cljs.core._EQ_","cljs.core/reset!","cljs.core.filter","p__1026690","vec__1026691","cljs.core.nth","_","entries","p1__1026681#","cljs.core/some","cljs.core.conj","cljs.core/vec","iter__4652__auto__","s__1026695","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__1026697","cljs.core/chunk-buffer","i__1026696","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__1026694","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","gender","p1__1026682#","cljs.core/val","p1__1026683#","cljs.core.map","p1__1026684#","clojure.string/lower-case","p1__1026685#","cljs.core.keep","cljs.core.remove","clojure.string/blank?","p1__1026686#","batch-no","js/fetch","p1__1026687#","p1__1026688#","cljs.core.swap_BANG_","G__1026698","cljs.core/merge","cljs.reader.read_string","cljs.core/inc","G__1026699","G__1026700","cljs.core/chunk-first"],"sourcesContent":["(ns slovarish.frontend.data\n  \"Namespace for loading and storing EDN resources.\"\n  (:require [reagent.core :as r]\n            [cljs.reader :as reader]\n            [clojure.string :as s]))\n\n(defonce num-batches {:nouns 15 :verbs 10 :adjectives 8})\n(def batches-loaded (r/atom 0))\n\n(defonce all-nouns (atom {}))\n(defonce top-2k-words (atom []))\n(defonce nouns-for-adj (atom []))\n\n(defonce all-verbs (atom {}))\n(defonce all-adjectives (atom {}))\n\n(defn load-mask []\n  (when (< @batches-loaded 33)\n    [:div#mask\n     [:div\n      [:p.italic.sans \"Your comrade-in-words as a learner of the Russian language\"]\n      [:h1 \"slovarish / \u0441\u043b\u043e\u0432\u0430\u0440\u0438\u0449\"]\n      [:p.italic.sans \"\u0421\u043b\u043e\u0432\u0430\u0440\u044c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0442\u0430\u043a\u0436\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u0430\u0448\u0438\u043c \u0442\u043e\u0432\u0430\u0440\u0438\u0449\u0435\u043c \u0432 \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u0438 \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430\"]]\n     [:div\n      [:p.italic \"Loading...\"]\n      (when-not (re-find #\"Chrome|OPR|Yandex\" (.-userAgent js/navigator))\n       [:p.italic \"For faster loading, please use Chrome, Opera, or Yandex Browser.\"])\n      [:progress {:max   (apply + (vals num-batches))\n                  :value @batches-loaded}]]]))\n\n(defn load-edn\n  [pos batch]\n  (if (> batch (num-batches (keyword pos)))\n    ;; Done loading\n    (when (= pos \"nouns\")\n      (reset! top-2k-words\n              (filter (fn [[_ entries]]\n                       (some #(<= (:rank %) 2000) entries))\n                     @all-nouns))\n      (reset! nouns-for-adj\n              (conj\n                (vec (for [gender [:masculine :feminine :neuter]]\n                       (->> @top-2k-words\n                            (filter #(= (:gender (first (val %))) gender))\n                            (map #(:stressed (first (val %))))\n                            (filter #(= % (s/lower-case %))))))\n                (->> @top-2k-words\n                     (keep #(:plural (first (val %))))\n                     (remove s/blank?)\n                     (filter #(= % (s/lower-case %)))))))\n    ;; Keep loading until complete\n    (let [batch-no (if (< batch 10) (str \"0\" batch)\n                     (str batch))]\n      (-> (js/fetch (str \"edn/\" pos batch-no \".edn\"))\n          (.then #(.text %))\n          (.then #(do\n                    (swap! (case pos\n                             \"nouns\" all-nouns\n                             \"verbs\" all-verbs\n                             \"adjectives\" all-adjectives\n                             nil)\n                           merge (reader/read-string %))\n                    (swap! batches-loaded inc)\n                    (load-edn pos (inc batch))))))))\n"]}