{
"version":3,
"file":"module$node_modules$russian_nouns_js$RussianNouns.js",
"lineCount":91,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyB7G,SAAS,CAACC,IAAD,CAAOC,OAAP,CAAgB,CACA,UAAtB,GAAI,MAAOC,OAAX,EAAoCA,MAAOC,CAAAA,GAA3C,CAEID,MAAA,CAAO,EAAP,CAAWD,OAAX,CAFJ,CAG6B,QAAtB,GAAI,MAAOH,OAAX,EAAkCA,MAAOC,CAAAA,OAAzC,CAEHD,MAAOC,CAAAA,OAFJ,CAEcE,OAAA,EAFd,CAIHD,IAAKI,CAAAA,YAJF,CAIiBH,OAAA,EARF,CAAzB,CAAA,CAUiB,WAAhB,GAAA,MAAOI,KAAP,CAA8BA,IAA9B,CAAqC,IAVtC,CAU4C,QAAS,EAAG,CA2CrDC,QAASA,oBAAmB,CAACC,CAAD,CAAI,CAC5B,GAAI,IAAJ,EAAYA,CAAZ,CACI,MAAO,0BAGX,KAAK,IAAIC,SAAT,GAAsB,0EAAA,CAAA,KAAA,CAAA,GAAA,CAAtB,CAIG,CAEW,IAAA;AAAAD,CAAA,CAAEC,SAAF,CAAV,IADoB,IACpB,EAD4BC,CAC5B,EAD+C,SAC/C,EADmC,MAAOA,EAC1C,CACI,MAAO,EAAP,CAAYD,SAAZ,CAAwB,mBAH7B,CAUH,GAAc,IAAd,EAAID,CAAEG,CAAAA,IAAN,CACI,MAAO,2BAGX,IAP4BC,CAAFJ,CAAEI,CAAAA,aAO5B,EAPqDC,CAAFL,CAAEK,CAAAA,cAOrD,CAAoB,CAChB,GAAgB,IAAhB,EAAIL,CAAEM,CAAAA,MAAN,CACI,MAAO,gCAGX,IAAI,CAACC,MAAOC,CAAAA,MAAP,CAAcC,MAAd,CAAsBC,CAAAA,QAAtB,CAA+BV,CAAEM,CAAAA,MAAjC,CAAL,CACI,MAAO,yBANK,CAUpB,MAAO,KAjCqB,CAoKhCK,QAASA,mBAAkB,CAACX,CAAD,CAAI,CAC3B,IAAIY,MAEAZ,EAAJ,WAAiBa,MAAjB,CACID,MADJ,CACa,CAACZ,CAAD,CAAI,IAAJ,CADb,EAGIY,MACA,CADS,CAAC,IAAD,CAAOb,mBAAA,CAAoBC,CAApB,CAAP,CACT,CAAI,IAAJ,GAAaY,MAAA,CAAO,CAAP,CAAb,GACIA,MAAA,CAAO,CAAP,CADJ,CACgBL,MAAOO,CAAAA,MAAP,CAAc,IAAID,KAAJ,CAAUb,CAAV,CAAd,CADhB,CAJJ,CASA,OAAOO,OAAOO,CAAAA,MAAP,CAAcF,MAAd,CAZoB;AAe/BG,QAASA,YAAW,CAACf,CAAD,CAAI,CACdgB,CAAAA,CAAIL,kBAAA,CAAmBX,CAAnB,CAEV,IAAIgB,CAAA,CAAE,CAAF,CAAJ,CACI,MAAOA,EAAA,CAAE,CAAF,CAEP,MAAM,KAAIC,cAAJ,CAAmBD,CAAA,CAAE,CAAF,CAAnB,CAAN,CANgB,CA23BxBE,QAASA,aAAY,CAACC,IAAD,CAAO,CACxB,MAAMC,WAAaC,IAAA,CAAKF,IAAL,CAAWG,CAAAA,WAAX,EAEnB,OAAA,CAAK,GAAL,GAAaF,UAAb,EAl3BWG,YAEqBb,CAAAA,QAAP,CAg3BUU,UAh3BgBE,CAAAA,WAAV,EAAhB,CAg3BzB,GAl3BWC,YAEqBb,CAAAA,QAAP,CAg3BkCW,IAAAG,CAAUL,IA91BrDM,CAAAA,SAAF,CAAY,CAAZ,CA81BuDN,IA91BtCO,CAAAA,MAAjB,CAA0B,CAA1B,CA81B6CF,CAh3BRF,CAAAA,WAAV,EAAhB,CAg3BzB,CACiBH,IA71BKM,CAAAA,SAAF,CAAY,CAAZ,CA61BHN,IA71BoBO,CAAAA,MAAjB,CA61BGC,CA71BH,CA41BpB,CAl3BWJ,YAEqBb,CAAAA,QAAP,CAo3BbU,UAp3BuCE,CAAAA,WAAV,EAAhB,CAo3BzB,CACgBH,IAn2BAM,CAAAA,SAAF,CAAY,CAAZ,CAm2BEN,IAn2BeO,CAAAA,MAAjB,CAA0B,CAA1B,CAk2Bd,CAGOP,IAViB,CAa5BS,QAASA,YAAW,CAACC,KAAD,CAAQ,CACxB,IAAMV,KAAOU,KAAM1B,CAAAA,IAAN,EACb,OAAM2B,OAASD,KAAME,CAAAA,KAAN,EAAf;AACMzB,OAASuB,KAAMG,CAAAA,SAAN,EADf,CAEMZ,WAAaC,IAAA,CAAKS,MAAL,CAEnB,OAAI,uPAAA,CAAA,KAAA,CAAA,GAAA,CAQEpB,CAAAA,QARF,CAQWoB,MARX,CAAJ,EASOG,WAAA,CAAYH,MAAZ,CAAoB,CAAC,MAAD,CAAS,OAAT,CAAkB,KAAlB,CAAyB,MAAzB,CAAiC,KAAjC,CAApB,CATP,EAUQD,KAAMK,CAAAA,SAAN,EAVR,EAU6BD,WAAA,CAAYH,MAAZ,CAAoB,CAAC,OAAD,CAApB,CAV7B,EAYUK,IACC,CADmB,GAAhB,GAACf,UAAD,CAA4BD,IA13B1BM,CAAAA,SAAF,CAAY,CAAZ,CA03B4BN,IA13BXO,CAAAA,MAAjB,CAA0B,CAA1B,CA03BA,CAAoCP,IACvC,CAAMgB,IAz3BKV,CAAAA,SAAF,CAAY,CAAZ;AAy3BHU,IAz3BoBT,CAAAA,MAAjB,CAy3BAC,CAz3BA,CAy3BT,CAAcN,IAAA,CAAKc,IAAL,CAbzB,EAgBI,CAAC,KAAD,CAAQ,KAAR,CAAezB,CAAAA,QAAf,CAAwBoB,MAAxB,CAAJ,EAAyC,KAAzC,GAAmDA,MAAnD,EAA8DD,KAAMK,CAAAA,SAAN,EAA9D,CACiBf,IA73BKM,CAAAA,SAAF,CAAY,CAAZ,CA63BHN,IA73BoBO,CAAAA,MAAjB,CA63BGC,CA73BH,CA43BpB,CAC4BS,SAAA,CAAU,GAAV,CAAef,IAAA,CAAUF,IA/3BrCM,CAAAA,SAAF,CAAY,CAAZ,CA+3BuCN,IA/3BtBO,CAAAA,MAAjB,CAA0B,CAA1B,CA+3B6B,CAAf,CAD5B,CAC+DL,IAAA,CAAKF,IAAL,CAD/D,CAIIW,MAAOO,CAAAA,QAAP,CAAgB,KAAhB,CAAJ,EAAkD,CAAlD,EAAyClB,IA94BnBmB,CAAAA,KAAFZ,CAAQA,EAARA,CAAYa,CAAAA,MAAZb,CAAmBc,OAAnBd,CAA4BA,CAAAA,MA84BhD,CACiBP,IAj4BKM,CAAAA,SAAF,CAAY,CAAZ,CAi4BHN,IAj4BoBO,CAAAA,MAAjB,CAi4BGC,CAj4BH,CAg4BpB,CAC4B,IAD5B,CAEWG,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CAAJ,EAx5BId,YAEqBb,CAAAA,QAAP,CAsBMW,IAAAG,CAg4B4BL,IAl4BrCM,CAAAA,SAAF,CAAY,CAAZ,CAk4BuCN,IAl4BtBO,CAAAA,MAAjB,CAk4B6CC,CAl4B7C,CAEWH,CAtBoBF,CAAAA,WAAV,EAAhB,CAs5BlB,CACUH,IAn4BKM,CAAAA,SAAF,CAAY,CAAZ,CAm4BHN,IAn4BoBO,CAAAA,MAAjB,CAm4BGC,CAn4BH,CAk4Bb,CACqB,IADrB,CA15Bec,sBA85BA/B,CAAAA,QAAlB,CAA2BW,IAAA,CAAKS,MAAL,CAA3B,CAAJ,CACWX,IADX,CAII,GAAJ,GAAYE,IAAA,CAAKS,MAAL,CAAZ,EAEUY,KAMN;AANe,sDAAA,CAAA,KAAA,CAAA,GAAA,CAMf,CAAIZ,MAAOO,CAAAA,QAAP,CAAgB,KAAhB,CAAJ,EAA+B/B,MAA/B,GAA0CG,MAAOkC,CAAAA,SAAjD,EAA+D,CAACV,WAAA,CAAYH,MAAZ,CAAoBY,KAApB,CAAhE,CACiBvB,IAn5BCM,CAAAA,SAAF,CAAY,CAAZ,CAm5BCN,IAn5BgBO,CAAAA,MAAjB,CAm5BOC,CAn5BP,CAk5BhB,CAC4B,GAD5B,CAGgBR,IAv5BJM,CAAAA,SAAF,CAAY,CAAZ,CAu5BMN,IAv5BWO,CAAAA,MAAjB,CAA0B,CAA1B,CA44Bd,EAeI,GAIJ,GAJYL,IAAA,CAAUS,MA35BNL,CAAAA,SAAF,CAAY,CAAZ,CA25BQK,MA35BSJ,CAAAA,MAAjB,CAA0B,CAA1B,CA25BF,CAIZ,EAAI,GAAJ,GAAYL,IAAA,CAAKS,MAAL,CAAZ,EAA4B,SAAUpB,CAAAA,QAAV,CAAmBW,IAAA,CAAUS,MA/5BzCL,CAAAA,SAAF,CAAY,CAAZ,CA+5B2CK,MA/5B1BJ,CAAAA,MAAjB,CAA0B,CAA1B,CA+5BiC,CAAnB,CAA5B,CACgBP,IAh6BAM,CAAAA,SAAF,CAAY,CAAZ,CAg6BEN,IAh6BeO,CAAAA,MAAjB,CAA0B,CAA1B,CA+5Bd,CAIOR,YAAA,CAAaC,IAAb,CA3DiB,CA8D5ByB,QAASA,cAAa,CAACf,KAAD,CAAQ,CAC1B,MAAMC,OAASD,KAAME,CAAAA,KAAN,EAAf,CACMzB,OAASuB,KAAMG,CAAAA,SAAN,EAEf,IAAI,CAAAH,KAAMgB,CAAAA,eAAN,EAAJ,CAAA,CAIA,GAAIhB,KAAMiB,CAAAA,cAAN,EAAJ,CACI,MAAO,CAAC,CAGNC;KAAAA,CAAI1B,IAAA,CAAKS,MAAL,CACV,QAAQxB,MAAR,EACI,KAAKG,MAAOuC,CAAAA,QAAZ,CACI,MAAa,GAAN,GAAAD,KAAA,EAAmB,GAAnB,GAAaA,KAAb,CAAyB,CAAzB,CA18BAE,uBA28BQvC,CAAAA,QAAX,CAAoBqC,KAApB,CAAA,CAAyB,CAAC,CAA1B,CAA8B,CACtC,MAAKtC,MAAOkC,CAAAA,SAAZ,CACI,MAAa,GAAN,GAAAI,KAAA,EAAmB,GAAnB,GAAaA,KAAb,CAAyB,CAAzB,CACQ,MAAX,GAAAjB,MAAA,CAAoB,CAApB,CAAwB,CAChC,MAAKrB,MAAOyC,CAAAA,MAAZ,CACI,MAAO,CAAC,MAAD,CAAS,UAAT,CAAqBxC,CAAAA,QAArB,CAA8BoB,MAA9B,CAAA,CAAwC,CAAxC,CACkB,IAArB,GAAMA,MA97BQL,CAAAA,SAAJ,CA87BJK,MA97BsBJ,CAAAA,MAAlB,CA87BIC,CA97BJ,CA87BV,CAA4B,CAA5B,CAAgC,CACxC,MAAKlB,MAAO0C,CAAAA,MAAZ,CACI,MAAU,GAAV,GAAIJ,KAAJ,EAAuB,GAAvB,GAAiBA,KAAjB,CACW,CADX,CAEiB,GAAV,GAAIA,KAAJ,CACI,CAAC,CADL,CAGI,CAEf,SACI,KAAUK,MAAJ,CAAU,kBAAV,CAAN,CAnBR,CATA,CAJ0B,CAsC9BC,QAASA,OAAM,CAAClC,IAAD,CAAOU,KAAP,CAAc,CACzB,MAAMyB,KAAYnC,IA78BFM,CAAAA,SAAF,CAAY,CAAZ,CA68BIN,IA78BaO,CAAAA,MAAjB,CAA0B,CAA1B,CA68Bd,CACM6B;AAASC,IAAA,CAAK3B,KAAME,CAAAA,KAAN,EAAL,CAGR,OAFH,GAEG,GAFKV,IAAA,CAAKkC,MAAL,CAEL,EAAItB,WAAA,CAAYsB,MAAZ,CAAoB,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAsB,KAAtB,CAA6B,OAA7B,CAApB,CAAJ,EACAE,KAAA,CAAWF,MAl9BF9B,CAAAA,SAAF,CAAY,CAAZ,CAk9BI8B,MAl9Ba7B,CAAAA,MAAjB,CAA0B,CAA1B,CAk9BP,CAAoB,CAApB,CAAuBY,CAAAA,KAAvB,CAA6B,EAA7B,CACEoB,CAAAA,KADF,CACQC,CAAA,EAz+BOlB,sBAy+BgB/B,CAAAA,QAAlB,CAA2BiD,CAA3B,CADb,CADA,EAGA9B,KAAM+B,CAAAA,OAAN,EAHA,CAKIN,IALJ,CAMyB,IAAzB,GAAUC,MAz9BS9B,CAAAA,SAAJ,CAy9BL8B,MAz9BuB7B,CAAAA,MAAlB,CAy9BGC,CAz9BH,CAy9Bf,EACGkC,IACN,CAr9B2BxC,IAAA,CAo9BKkC,MAt9Bd9B,CAAAA,SAAF,CAAY,CAAZ,CAs9BgB8B,MAt9BC7B,CAAAA,MAAjB,CAs9BwBC,CAt9BxB,CAEW,CAq9B3B,CA7+BOJ,YAEqBb,CAAAA,QAAP,CA2+BTmD,IA3+BmCvC,CAAAA,WAAV,EAAhB,CA2+BrB,EAA0B,GAA1B,GAAkCuC,IAAlC,CACgBP,IA19BJ7B,CAAAA,SAAF,CAAY,CAAZ,CA09BM6B,IA19BW5B,CAAAA,MAAjB,CAA0B,CAA1B,CAy9BV,CACwB,GADxB,CAGW4B,IALR,EA3+BI/B,YAEqBb,CAAAA,QAAP,CAg/BNW,IAAAG,CAAK+B,MAAL/B,CAh/BgCF,CAAAA,WAAV,EAAhB,CAg/BlB,EAA+C,GAA/C,GAA8BD,IAAA,CAAKkC,MAAL,CAA9B,CAl/BIhC,YAEqBb,CAAAA,QAAP,CAi/BTW,IAAAG,CAAU+B,MA/9BV9B,CAAAA,SAAF,CAAY,CAAZ;AA+9BY8B,MA/9BK7B,CAAAA,MAAjB,CAA0B,CAA1B,CA+9BEF,CAj/BmCF,CAAAA,WAAV,EAAhB,CAi/BrB,CACiBH,IA99BCM,CAAAA,SAAF,CAAY,CAAZ,CA89BCN,IA99BgBO,CAAAA,MAAjB,CA89BOC,CA99BP,CA69BhB,CAC4B,GAD5B,CAEWM,WAAA,CAAYJ,KAAME,CAAAA,KAAN,EAAZ,CAA2B,CAAC,OAAD,CAA3B,CAAJ,CACIuB,IADJ,CAGUnC,IAl+BCM,CAAAA,SAAF,CAAY,CAAZ,CAk+BCN,IAl+BgBO,CAAAA,MAAjB,CAk+BOC,CAl+BP,CA49Bb,CASI2B,IA3Bc,CA+B7BQ,QAASA,OAAM,CAAC3B,CAAD,CAAI,CACf,MAAM4B,IAAM,CACR,SADQ,CACG,QADH,CAAZ,CAGMC,KAAO,oFAAA,CAAA,KAAA,CAAA,GAAA,CAHb,CAQMC,YAAc,2CAAA,CAAA,KAAA,CAAA,GAAA,CAIpB,OAAQhC,YAAA,CAAYE,CAAZ,CAAe,CAAC,KAAD,CAAQ,KAAR,CAAf,CAAR,EAAuD,CAAvD,EAA2CA,CAAET,CAAAA,MAA7C,EACOO,WAAA,CAAYE,CAAZ,CAAe4B,GAAf,CADP,EAGQ5B,CAAEE,CAAAA,QAAF,CAAW,IAAX,CAHR,EAG4B,CAACF,CAAEE,CAAAA,QAAF,CAAW,KAAX,CAH7B,EAGkD,CAAC4B,WAAYvD,CAAAA,QAAZ,CAAqByB,CAArB,CAHnD,EAIW,CAACF,WAAA,CAAYE,CAAZ;AAAe6B,IAAf,CAJZ,EAKW,CAjhCAzC,YAEqBb,CAAAA,QAAP,CAsBMW,IAAAG,CAy/BIW,CA3/BbV,CAAAA,SAAF,CAAY,CAAZ,CA2/BeU,CA3/BET,CAAAA,MAAjB,CA2/BkBC,CA3/BlB,CAEWH,CAtBoBF,CAAAA,WAAV,EAAhB,CA0gCzB,GA5gCWC,YAEqBb,CAAAA,QAAP,CAsBMW,IAAAG,CA0/BIW,CA5/BbV,CAAAA,SAAF,CAAY,CAAZ,CA4/BeU,CA5/BET,CAAAA,MAAjB,CA4/BkBC,CA5/BlB,CAEWH,CAtBoBF,CAAAA,WAAV,EAAhB,CA0gCzB,EAM6CW,WAAA,CAAkBE,CA5/BzCV,CAAAA,SAAF,CAAY,CAAZ,CA4/B2CU,CA5/B1BT,CAAAA,MAAjB,CA4/B8CC,CA5/B9C,CA4/ByB,CAAyB,CAAC,IAAD,CAAO,IAAP,CAAzB,CAN7C,GAOuB,CAPvB,EAOWQ,CAAET,CAAAA,MApBE,CA2BnBwC,QAASA,cAAa,CAAC/C,IAAD,CAAO,CACzB,GAAIA,IAAKgD,CAAAA,UAAL,CAAgB,KAAhB,CAAJ,EACO,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,GAAhB,CAAqB,GAArB,CAA0BzD,CAAAA,QAA1B,CAAmCW,IAAA,CAAKF,IAAL,CAAnC,CADP,EAE4B,CAF5B,EAEmBA,IArhCGmB,CAAAA,KAAFZ,CAAQA,EAARA,CAAYa,CAAAA,MAAZb,CAAmBc,OAAnBd,CAA4BA,CAAAA,MAmhChD,CAEgC,CAExB0C,IAAAA,CAAUjD,IAAKM,CAAAA,SAAL,CAAe,CAAf,CAGd,KAAI4C,OAASD,IAAQE,CAAAA,MAAR,CAAe,YAAf,CAKb,OAAkB,EAAlB,EAAQD,MAAR,EAxiCWpB,uBAwiCwBvC,CAAAA,QAAX,CAAoB0D,IAAA,CAAQC,MAAR,CAAgB/C,CAAAA,WAAhB,EAApB,CAVI,CAa5B,MAAO,CAAA,CAhBc;AAoB7BiD,QAASA,SAAQ,CAACC,MAAD,CAAS3C,KAAT,CAAgB4C,MAAhB,CAAwB,CACrC,MAAMtD,KAAOU,KAAM1B,CAAAA,IAAN,EAAb,CACM2B,OAASD,KAAME,CAAAA,KAAN,EACf,IAAID,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CAAJ,CACI,MAAIoC,OAAJ,GAAeC,IAAKC,CAAAA,YAApB,CACgBxD,IA/hCJM,CAAAA,SAAF,CAAY,CAAZ,CA+hCMN,IA/hCWO,CAAAA,MAAjB,CAA0B,CAA1B,CA8hCV,CACwB,IADxB,CAGWkD,QAAA,CAASJ,MAAT,CAAiB3C,KAAjB,CAAwB4C,MAAxB,CAER,IAAI3C,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CAAJ,CACH,OAAQoC,MAAR,EACI,KAAKC,IAAKG,CAAAA,UAAV,CACA,KAAKH,IAAKI,CAAAA,UAAV,CACI,MAAO3D,KACX,MAAKuD,IAAKK,CAAAA,QAAV,CACA,KAAKL,IAAKM,CAAAA,MAAV,CACA,KAAKN,IAAKO,CAAAA,aAAV,CACA,KAAKP,IAAKQ,CAAAA,QAAV,CACI,MAAO/D,KAAP,CAAc,IAClB,MAAKuD,IAAKC,CAAAA,YAAV,CACI,MAAO,CAACxD,IAAD,CAAQ,KAAR,CAAeA,IAAf,CAAsB,KAAtB,CAVf,CADG,IAcH,MAAUiC,MAAJ,CAAU,aAAV,CAAN,CAvBiC,CAiCzC+B,QAASA,SAAQ,CAACX,MAAD;AAAS3C,KAAT,CAAgB4C,MAAhB,CAAwB,CACrC,MAAMtD,KAAOU,KAAM1B,CAAAA,IAAN,EAAb,CACM2B,OAASD,KAAME,CAAAA,KAAN,EACf,KAAMzB,OAASuB,KAAMG,CAAAA,SAAN,EAAf,CAEMoD,KAAOlB,aAAA,CAAcpC,MAAd,CAEb,IAAIsD,IAAJ,EAAYnD,WAAA,CAAYH,MAAZ,CAAoB,CAAC,GAAD,CAAM,GAAN,CAApB,CAAZ,CAA6C,CAEzC,GAAI,CAAC4C,IAAKG,CAAAA,UAAN,CAAkBH,IAAKI,CAAAA,UAAvB,CAAmCpE,CAAAA,QAAnC,CAA4C+D,MAA5C,CAAJ,CACI,MAAOtD,KAGP,OAAMkE,EAAIrF,CAAAqF,EAAO,CAAC,WAAD,CAAc3E,CAAAA,QAAd,CAAuBV,CAAE+B,CAAAA,KAAF,EAAvB,CAAF,CAC0B/B,CAAEG,CAAAA,IAAF,EAD1B,CACR,MADQ,CACCH,CAAEG,CAAAA,IAAF,EAASsB,CAAAA,SAAT,CAAmB,CAAnB,CAEhB,IAAI,SAAJ,GAAkBK,MAAlB,CAA0B,CACtB,GAAI,CAAC4C,IAAKO,CAAAA,aAAN,CAAqBP,IAAKQ,CAAAA,QAA1B,CAAoCxE,CAAAA,QAApC,CAA6C+D,MAA7C,CAAJ,CACI,MAAOtD,KAEHmE,KAAAA,CAAYzD,KAAM0D,CAAAA,OAAN,CAAcvF,CAAA,EAAK,CAAK,CAAA,CAAAqF,CAAA,CAAErF,CAAF,CAAL,OA/kCrCwF,EAAE/D,CAAAA,SAAF,CAAY,CAAZ,CAAe+D,CAAE9D,CAAAA,MAAjB,CAA0B,CAA1B,CA+kCqC,CAAa,GAAb,CAAnB,CAChB,OAAO6C,SAAA,CAASC,MAAT,CAAiBc,IAAjB,CAA4Bb,MAA5B,CALW,CAOnB,GAAI3C,MAAOO,CAAAA,QAAP,CAAgB,KAAhB,CAAJ,CAEH,MADIiD,KACG;AADSzD,KAAM0D,CAAAA,OAAN,CAAcvF,CAAA,EAAK,CAAK,CAAA,CAAAqF,CAAA,CAAErF,CAAF,CAAL,OAnlCjCwF,EAAE/D,CAAAA,SAAF,CAAY,CAAZ,CAAe+D,CAAE9D,CAAAA,MAAjB,CAA0B,CAA1B,CAmlCiC,CAAa,GAAb,CAAnB,CACT,CAAAkD,QAAA,CAASJ,MAAT,CAAiBc,IAAjB,CAA4Bb,MAA5B,CAEHa,KAAAA,CAAYzD,KAAM0D,CAAAA,OAAN,CAAcvF,CAAA,EAAK,CAAK,IAAA,EAAAqF,CAAA,CAAErF,CAAF,CAAL,OAtlCjCwF,EAAE/D,CAAAA,SAAF,CAAY,CAAZ,CAAe+D,CAAE9D,CAAAA,MAAjB,CAA0B,CAA1B,CAslCiC,EACT,GAArB,GAACL,IAAA,CAAKrB,CAAE+B,CAAAA,KAAF,EAAL,CAAD,CAA4B,GAA5B,CAAkC,GADJ,CAAA,CAAnB,CAEhB,OAAO0D,SAAA,CAASjB,MAAT,CAAiBc,IAAjB,CAA4Bb,MAA5B,CAtB0B,CA2B7C,IAAIiB,KAAO9D,WAAA,CAAYC,KAAZ,CAAX,CACIyB,KAAYnC,IA9lCAM,CAAAA,SAAF,CAAY,CAAZ,CA8lCEN,IA9lCeO,CAAAA,MAAjB,CAA0B,CAA1B,CAgmCd,OAAMiE,KAAQP,IAARO,EAAgB7D,MAAOO,CAAAA,QAAP,CAAgB,GAAhB,CAAhBsD,EAAyCC,MAAA,CAAO9D,MAAP,CAE3CsD,KAAJ,GACIM,IACA,CADO,MACP,CADgBA,IAAKjE,CAAAA,SAAL,CAAe,CAAf,CAChB,CAAA6B,IAAA,CAAO,MAAP,CAAgBA,IAAK7B,CAAAA,SAAL,CAAe,CAAf,CAFpB,CAKA,KAAIoE,OAASH,IAAKpE,CAAAA,WAAL,EAEb,OAAMwE,MAAQ,CAACN,CAAD,CAAIO,CAAJ,CAAAD,EAAU,CACpB,MAAME,eAAiBxB,MAAOyB,CAAAA,EAAGC,CAAAA,yBAAV,CAAoCrE,KAApC;AAA2C4C,MAA3C,CAClBuB,eAAetE,CAAAA,MAApB,EACIsE,cAAeG,CAAAA,IAAf,CAAoB,CAAA,CAApB,CAEJ,OAAOH,eAAeI,CAAAA,GAAf,CAAmBC,CAAA,EAAKA,CAAA,CAAIN,CAAA,CAAEO,IAAA,CAAKd,CAAL,CAAF,CAAWa,CAAX,CAAJ,CAAoBN,CAAA,CAAEP,CAAF,CAAKa,CAAL,CAA5C,CALa,CAAxB,CAQME,OAAS,EAAAA,EAAuB,GAAvBA,GAAMlF,IAAA,CAAKS,MAAL,CAANyE,EACR,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB7F,CAAAA,QAAnB,CAAkCoB,MApnCfL,CAAAA,SAAJ,CAonCmBK,MApnCDJ,CAAAA,MAAlB,CAonC2BC,CApnC3B,CAonCf,CATP,CAeM6E,OAAS,EAAAA,EAJMvE,WAAA,CAAYH,MAAZ,CAAoB,CACrC,SADqC,CAC1B,SAD0B,CACf,OADe,CACN,SADM,CACK,MADL,CAApB,CAKjB,CACgBwB,IA1nCJ7B,CAAAA,SAAF,CAAY,CAAZ,CA0nCM6B,IA1nCW5B,CAAAA,MAAjB,CAA0B,CAA1B,CAynCV,CACwBU,SAAA,CAAU,GAAV,CAAef,IAAA,CAAKiC,IAAL,CAAf,CADxB,CAGWA,IAnBf,CA+BMmD,KAAO,EAAAA,EAA4B,IAA5BA,GAAa3E,MA1oCAL,CAAAA,SAAJ,CA0oCIK,MA1oCcJ,CAAAA,MAAlB,CA0oCYC,CA1oCZ,CA0oCT8E,EACLxE,WAAA,CAAYH,MAAZ,CAAoB,CAAC,KAAD,CAAQ,SAAR,CAApB,CADK2E,EAC0D,CAD1DA,EACiDtF,IArpCxCmB,CAAAA,KAAFZ,CAAQA,EAARA,CAAYa,CAAAA,MAAZb,CAAmBc,OAAnBd,CAA4BA,CAAAA,MAupChD,IAAIgD,IAAKG,CAAAA,UAAT,GAAwBJ,MAAxB,CACI,MAAOtD,KAGX;GAAIuD,IAAKK,CAAAA,QAAT,GAAsBN,MAAtB,CAA8B,CAEpBiC,IAAAA,CAAW1F,CAAA0F,EAAK,CACd,CAAC7E,KAAMK,CAAAA,SAAN,EAAL,EAA0B,+PAAA,CAAA,KAAA,CAAA,GAAA,CAYbxB,CAAAA,QAZa,CAYJoB,MAZI,CAA1B,GAcyB,GAArB,GAAIT,IAAA,CAAKS,MAAL,CAAJ,CACId,CAAEmF,CAAAA,IAAF,CAAYhF,IAjqCZM,CAAAA,SAAF,CAAY,CAAZ,CAiqCcN,IAjqCGO,CAAAA,MAAjB,CAA0B,CAA1B,CAiqCE,CAAoBU,SAAA,CAAU,GAAV,CAAef,IAAA,CAAKF,IAAL,CAAf,CAApB,CADJ,CAGIH,CAHJ,CAGQA,CAAE2F,CAAAA,MAAF,CAASb,KAAA,CAAMJ,IAAN,CAAYF,CAAA,EAAKA,CAAL,CAASpD,SAAA,CAAU,GAAV,CAAef,IAAA,CAAKmE,CAAL,CAAf,CAArB,CAAT,CAjBZ,CAqBA,OAAOxE,EAtBW,CAyBtB,IAAKuF,MAAA,EAAL;AAAiB1E,KAAM+E,CAAAA,UAAN,EAAjB,EACOH,IAAA,EADP,EAEOxE,WAAA,CAAYH,MAAZ,CAAoB,CAAC,IAAD,CAAO,OAAP,CAAgB,MAAhB,CAAwB,MAAxB,CAAgC,MAAhC,CAApB,CAFP,CAGI,MAAO4D,KAAP,CAAc,KACX,IAAIzD,WAAA,CAAYH,MAAZ,CAAoB,oCAAA,CAAA,KAAA,CAAA,GAAA,CAApB,CAAJ,CACH,MAAO4D,KAAP,CAAc,KACX,IAAIa,MAAA,EAAJ,CAEH,MADIvF,OACG,CADC,CAACwF,MAAA,EAAD,CAAY,GAAZ,CACD,CAAAE,IAAA,CAAS1F,MAAT,CACJ,IAAI2E,IAAJ,EAAY,CAnDD,IAAKjF,CAAAA,QAAL,CAAcW,IAAA,CAAKwE,MAAL,CAAd,CAmDX,CACH,MAAOH,KAAP,CAAc,GACX,IA3OiB,GA2OjB,GA3OKrE,IAAA,CA2OMS,MA3ON,CA2OL,CACH,MAAOuB,OAAA,CAAOlC,IAAP,CAAaU,KAAb,CAAP,CAA6B,IAC1B,IAAIiC,MAAA,CAAOhC,MAAP,CAAJ,CACH,MAAYwB,KAxrCJ7B,CAAAA,SAAF,CAAY,CAAZ,CAwrCM6B,IAxrCW5B,CAAAA,MAAjB,CAA0B,CAA1B,CAwrCN,CAAoB,IACjB,IAAIO,WAAA,CAAYH,MAAZ,CAAoB,CAAC,KAAD,CAApB,CAAJ,EAAqCrB,MAAOkC,CAAAA,SAA5C,GAA0DrC,MAA1D,CAEH,MAAOgD,KAAP,CAAc,GAEVtC,OAAAA,CAAI,EACJa,MAAM+E,CAAAA,UAAN,EAAJ;AAAmD,CAAC,CAApD,GAA2Bf,MAAOgB,CAAAA,OAAP,CAAe,GAAf,CAA3B,CACI7F,MAAEmF,CAAAA,IAAF,CAAOT,IAAP,CAAc,GAAd,CADJ,CAGI1E,MAHJ,CAGQA,MAAE2F,CAAAA,MAAF,CAASb,KAAA,CAAMJ,IAAN,CAAYF,CAAA,EAAKA,CAAL,CAAS,GAArB,CAAT,CAER,OAAOkB,KAAA,CAAS1F,MAAT,CApDe,CAwD9B,GAAI0D,IAAKM,CAAAA,MAAT,GAAoBP,MAApB,CACI,MAAK8B,OAAA,EAAL,EAAiB1E,KAAM+E,CAAAA,UAAN,EAAjB,EACOH,IAAA,EADP,EAEOxE,WAAA,CAAYH,MAAZ,CAAoB,CAAC,IAAD,CAAO,OAAP,CAAgB,MAAhB,CAAwB,MAAxB,CAAgC,MAAhC,CAApB,CAFP,CAGW4D,IAHX,CAGkB,KAHlB,CAIWzD,WAAA,CAAYH,MAAZ,CAAoB,oCAAA,CAAA,KAAA,CAAA,GAAA,CAApB,CAAJ,CACI4D,IADJ,CACW,KADX,CAEIa,MAAA,EAAJ,CACIC,MAAA,EADJ,CACe,GADf,CAEIb,IAAJ,EAAY,CAhFD,IAAKjF,CAAAA,QAAL,CAAcW,IAAA,CAAKwE,MAAL,CAAd,CAgFX,CACIH,IADJ,CACW,GADX,CAtQiB,GAwQjB,GAxQKrE,IAAA,CAwQMS,MAxQN,CAwQL,CACIuB,MAAA,CAAOlC,IAAP,CAAaU,KAAb,CADJ,CAC0B,IAD1B,CAEIiC,MAAA,CAAOhC,MAAP,CAAJ,CACSwB,IArtCJ7B,CAAAA,SAAF,CAAY,CAAZ,CAqtCM6B,IArtCW5B,CAAAA,MAAjB,CAA0B,CAA1B,CAotCH,CACiB,IADjB,CAEIG,KAAM+E,CAAAA,UAAN,EAAJ;AAAmD,CAAC,CAApD,GAA2Bf,MAAOgB,CAAAA,OAAP,CAAe,GAAf,CAA3B,CACInB,IADJ,CACW,GADX,CAGII,KAAA,CAAMJ,IAAN,CAAYF,CAAA,EAAKA,CAAL,CAAS,GAArB,CAIf,IAAId,IAAKI,CAAAA,UAAT,GAAwBL,MAAxB,CACI,MAAInE,OAAJ,GAAeG,MAAOyC,CAAAA,MAAtB,CACW/B,IADX,CAIc,CAAA,CAAV,GADUU,KAAMK,CAAAA,SAAN4E,EACV,CACW3B,QAAA,CAASX,MAAT,CAAiB3C,KAAjB,CAAwB6C,IAAKK,CAAAA,QAA7B,CADX,CAGW5D,IAKnB,IAAIuD,IAAKC,CAAAA,YAAT,GAA0BF,MAA1B,CACI,MAAK8B,OAAA,EAAL,EAAiB1E,KAAM+E,CAAAA,UAAN,EAAjB,EAAwC3E,WAAA,CAAYH,MAAZ,CAAoB,CAAC,IAAD,CAAO,IAAP,CAAa,OAAb,CAAsB,MAAtB,CAApB,CAAxC,CAEQG,WAAA,CAAYH,MAAZ,CAAoB,yBAAA,CAAA,KAAA,CAAA,GAAA,CAApB,CAAJ,CACW4D,IADX,CACkB,IADlB,CAGWA,IAHX,CAGkB,IALtB,CAQWe,IAAA,EAAJ,EAAcxE,WAAA,CAAYH,MAAZ,CAAoB,CAAC,MAAD,CAAS,MAAT,CAApB,CAAd,CACI4D,IADJ,CACW,IADX,CAEIzD,WAAA,CAAYH,MAAZ,CAAoB,iCAAA,CAAA,KAAA,CAAA,GAAA,CAApB,CAAJ,CACSwB,IAtvCJ7B,CAAAA,SAAF,CAAY,CAAZ;AAsvCM6B,IAtvCW5B,CAAAA,MAAjB,CAA0B,CAA1B,CAqvCH,CACiB,IADjB,CAEI6E,MAAA,EAAJ,CACIC,MAAA,EADJ,CACe,IADf,CAEIb,IAAJ,EAAa,MAAOjF,CAAAA,QAAP,CAAgBW,IAAA,CAAKwE,MAAL,CAAhB,CAAb,CAEIC,KAAA,CAAMJ,IAAN,CAAY,CAACF,CAAD,CAAIQ,cAAJ,CAAA,EAAuBA,cAAA,CACnCR,CADmC,CAC/B,IAD+B,CACtBA,CADsB,CAClB,IADjB,CAFJ,CA/SiB,GAoTjB,GApTKnE,IAAA,CAoTMS,MApTN,CAoTL,CAEIgE,KAAA,CAAM3E,IAAN,CAAY,CAACgB,CAAD,CAAI6D,cAAJ,CAAA,EAAuBA,cAAA,CACnC3C,MAAA,CAAOlB,CAAP,CAAUN,KAAV,CADmC,CAChB,KADgB,CACNwB,MAAA,CAAOlB,CAAP,CAAUN,KAAV,CADM,CACa,KADhD,CAFJ,CAKIC,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CAAJ,CACIlB,IADJ,CACW,GADX,CAEI2C,MAAA,CAAOhC,MAAP,CAAJ,CACSwB,IAtwCJ7B,CAAAA,SAAF,CAAY,CAAZ,CAswCM6B,IAtwCW5B,CAAAA,MAAjB,CAA0B,CAA1B,CAqwCH,CACiB,KADjB,CAnIgBG,KAAM+E,CAAAA,UAAN,EAqIhB,GAnIH9E,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CAmIG,EAnIsBP,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CAmItB,EAlIAP,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CAkIA,EAlIyBP,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CAkIzB,EAlIkDP,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CAkIlD,EACIlB,IADJ,CACW,IADX,CAEIU,KAAM+E,CAAAA,UAAN,EAAJ,EAAmD,CAAC,CAApD;AAA2Bf,MAAOgB,CAAAA,OAAP,CAAe,GAAf,CAA3B,CACInB,IADJ,CACW,IADX,CAGII,KAAA,CAAMJ,IAAN,CAAYF,CAAA,EAAKA,CAAL,CAAS,IAArB,CAIf,IAAId,IAAKO,CAAAA,aAAT,GAA2BR,MAA3B,CACI,MAAK8B,OAAA,EAAL,EAAiB1E,KAAM+E,CAAAA,UAAN,EAAjB,EACOH,IAAA,EADP,EAEOxE,WAAA,CAAYH,MAAZ,CAAoB,CAAC,IAAD,CAAO,OAAP,CAAgB,MAAhB,CAAwB,MAAxB,CAAgC,MAAhC,CAApB,CAFP,CAGW4D,IAHX,CAGkB,IAHlB,CAIWzD,WAAA,CAAYH,MAAZ,CAAoB,oCAAA,CAAA,KAAA,CAAA,GAAA,CAApB,CAAJ,CACI4D,IADJ,CACW,IADX,CAEIzD,WAAA,CAAYH,MAAZ,CAAoB,CAAC,SAAD,CAApB,CAAJ,EACGiF,IACC,CADQzD,IAxxCP7B,CAAAA,SAAF,CAAY,CAAZ,CAwxCS6B,IAxxCQ5B,CAAAA,MAAjB,CAA0B,CAA1B,CAyxCC,CAAAqF,IAAA,CAAI3E,SAAA,CAAU,IAAV,CAAgBf,IAAA,CAAK0F,IAAL,CAAhB,CAFR,EAGI9E,WAAA,CAAYH,MAAZ,CAAoB,kEAAA,CAAA,KAAA,CAAA,GAAA,CAApB,CAAJ,EAID,CAACG,WAAA,CAAYH,MAAZ,CAAoB,CACvB,UADuB;AACX,UADW,CACC,WADD,CAEvB,QAFuB,CAApB,CAJA,CAQIwB,IARJ,CAQW,GARX,CASsB,GAAtB,GAAKjC,IAAA,CAAKS,MAAL,CAAL,EAA+B,IAA/B,GAA8CA,MAryC/BL,CAAAA,SAAJ,CAqyCmCK,MAryCjBJ,CAAAA,MAAlB,CAqyC2CC,CAryC3C,CAqyCX,CACI6E,MAAA,EADJ,CACe,GADf,CAzViB,GA2VjB,GA3VKnF,IAAA,CA2VMS,MA3VN,CA2VL,CACIuB,MAAA,CAAOlC,IAAP,CAAaU,KAAb,CADJ,CAC0B,IAD1B,CAEIiC,MAAA,CAAOhC,MAAP,CAAJ,CACSwB,IAxyCJ7B,CAAAA,SAAF,CAAY,CAAZ,CAwyCM6B,IAxyCW5B,CAAAA,MAAjB,CAA0B,CAA1B,CAuyCH,CACiB,IADjB,CAEIG,KAAM+E,CAAAA,UAAN,EAAJ,EAAmD,CAAC,CAApD,GAA2Bf,MAAOgB,CAAAA,OAAP,CAAe,GAAf,CAA3B,CACInB,IADJ,CACW,GADX,CAGII,KAAA,CAAMJ,IAAN,CAAYF,CAAA,EAAKA,CAAL,CAAS,GAArB,CAIf,IAAId,IAAKQ,CAAAA,QAAT,GAAsBT,MAAtB,CAGI,MAAA,CADMuC,IACN,CADwBC,kBAAmBC,CAAAA,GAAnB,CAAuBrF,KAAvB,CAA8B,CAAA,CAA9B,CACxB,EAC4BsF,MAAAC,CAAOJ,IAAgBZ,CAAAA,GAAhB,CAAoBlG,CAAA,EAAKA,CAAEmH,CAAAA,cAA3B,CAAPD,CACDhB,CAAAA,GAAhB,CAAoBkB,KAAA,EAASC,mBAAA,CAAoB/C,MAApB,CAA4B3C,KAA5B,CAAmCyF,KAAnC,CAA7B,CAFX,CAKOnC,QAAA,CAASX,MAAT,CAAiB3C,KAAjB,CAAwB6C,IAAKO,CAAAA,aAA7B,CA7P0B,CAiQzCQ,QAASA,SAAQ,CAACjB,MAAD;AAAS3C,KAAT,CAAgB4C,MAAhB,CAAwB,CACrC,MAAMtD,KAAOU,KAAM1B,CAAAA,IAAN,EAAb,CACM2B,OAASD,KAAME,CAAAA,KAAN,EADf,CAGM2D,KAAO9D,WAAA,CAAYC,KAAZ,CAHb,CAIMgE,OAASH,IAAKpE,CAAAA,WAAL,EAJf,CAMMgC,KAAYnC,IAn0CFM,CAAAA,SAAF,CAAY,CAAZ,CAm0CIN,IAn0CaO,CAAAA,MAAjB,CAA0B,CAA1B,CA6zCd,CAOM6B,OAAczB,MAp0CJL,CAAAA,SAAF,CAAY,CAAZ,CAo0CMK,MAp0CWJ,CAAAA,MAAjB,CAA0B,CAA1B,CA6zCd,CAYM8F,QAAU,EAAAA,EACL1F,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CADKmF,EACoB,EAAwB,CAAxB,GAAcrG,IAt1C5BmB,CAAAA,KAAFZ,CAAQA,EAARA,CAAYa,CAAAA,MAAZb,CAAmBc,OAAnBd,CAA4BA,CAAAA,MAs1CZ,EA91CzBH,YAEqBb,CAAAA,QAAP,CA41CiDW,IAAAG,CAAKkE,IAALlE,CA51CvBF,CAAAA,WAAV,EAAhB,CA41CW,CAbpC,CAeMmG,SAAW,EAAAA,EACN3F,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CADMoF,EACmB,EAAwB,CAAxB,GAActG,IAz1C5BmB,CAAAA,KAAFZ,CAAQA,EAARA,CAAYa,CAAAA,MAAZb,CAAmBc,OAAnBd,CAA4BA,CAAAA,MAy1CZ,EAj2CzBH,YAEqBb,CAAAA,QAAP,CA+1CiDW,IAAAG,CAAKkE,IAALlE,CA/1CvBF,CAAAA,WAAV,EAAhB,CA+1CW,CAhBpC,CAkBMoG,cAAgB,CAClB,KADkB,CACX,KADW,CAGtB,QAAQjD,MAAR,EACI,KAAKC,IAAKG,CAAAA,UAAV,CACI,MAAO1D,KACX;KAAKuD,IAAKK,CAAAA,QAAV,CACI,MAAI0C,SAAA,EAAJ,EAAkBxF,WAAA,CAAYH,MAAZ,CAAoB4F,aAApB,CAAlB,CACWhC,IADX,CACkB,IADlB,CAEW8B,OAAA,EAAJ,CACI9B,IADJ,CACW,IADX,CAEI7D,KAAM+E,CAAAA,UAAN,EAAJ,CACItD,IADJ,CACW,IADX,CAEIxB,MAAOO,CAAAA,QAAP,CAAgB,OAAhB,CAAJ,CACIiB,IADJ,CACW,IADX,CArBa,GAuBb,GAvBJjC,IAAA,CAAKS,MAAL,CAuBI,EACO,SAAUpB,CAAAA,QAAV,CAAmBW,IAAA,CAAKwE,MAAL,CAAnB,CADP,CAGIvC,IAHJ,CAGW,GAHX,CAKIA,IALJ,CAKW,GAEtB,MAAKoB,IAAKM,CAAAA,MAAV,CACI,MAAIyC,SAAA,EAAJ,EAAkBxF,WAAA,CAAYH,MAAZ,CAAoB4F,aAApB,CAAlB,CACWhC,IADX,CACkB,IADlB,CAEW8B,OAAA,EAAJ,CACI9B,IADJ,CACW,IADX,CAEI7D,KAAM+E,CAAAA,UAAN,EAAJ,CACItD,IADJ,CACW,IADX,CAEyB,IAAzB,GAAUxB,MA92CCL,CAAAA,SAAJ,CA82CGK,MA92CeJ,CAAAA,MAAlB,CA82CWC,CA92CX,CA82CP,CACI2B,IADJ,CACW,GADX,CAEIxB,MAAOO,CAAAA,QAAP,CAAgB,OAAhB,CAAJ,CACIiB,IADJ,CACW,IADX,CAGIA,IAHJ,CAGW,GAEtB,MAAKoB,IAAKI,CAAAA,UAAV,CACI,MAAI0C,QAAA,EAAJ,CACW9B,IADX;AACkB,IADlB,CAEW+B,QAAA,EAAJ,CACI/B,IADJ,CACW,IADX,CA/Ca,GAiDb,GAjDJrE,IAAA,CAAKS,MAAL,CAiDI,CACIwB,IADJ,CACW,GADX,CAGIA,IAHJ,CAGW,GAEtB,MAAKoB,IAAKC,CAAAA,YAAV,CACI,MAAI8C,SAAA,EAAJ,EAAkBxF,WAAA,CAAYH,MAAZ,CAAoB4F,aAApB,CAAlB,CACWhC,IADX,CACkB,IADlB,CAEW8B,OAAA,EAAJ,CACI9B,IADJ,CACW,IADX,CAzDa,GA2Db,GA3DJrE,IAAA,CAAKS,MAAL,CA2DI,EAAe,OAAQpB,CAAAA,QAAR,CAAiBW,IAAA,CAAKwE,MAAL,CAAjB,CAAf,EAAiD,CAAC/D,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CAAlD,CACC,GAAJ,GAAYhB,IAAA,CAAKkC,MAAL,CAAZ,CACWD,IADX,CACkB,IADlB,CAGW,CAACA,IAAD,CAAQ,IAAR,CAAcA,IAAd,CAAqB,IAArB,CAJR,CAOI,CAACA,IAAD,CAAQ,IAAR,CAAcA,IAAd,CAAqB,IAArB,CAEf,MAAKoB,IAAKO,CAAAA,aAAV,CACI,MAAIwC,SAAA,EAAJ,EAAkBxF,WAAA,CAAYH,MAAZ,CAAoB4F,aAApB,CAAlB,CACWhC,IADX,CACkB,IADlB,CAEW8B,OAAA,EAAJ,CACI9B,IADJ,CACW,IADX,CAEI7D,KAAM+E,CAAAA,UAAN,EAAJ,CACItD,IADJ,CACW,IADX,CAEyB,IAAzB,GAAUxB,MAp5CCL,CAAAA,SAAJ,CAo5CGK,MAp5CeJ,CAAAA,MAAlB,CAo5CWC,CAp5CX,CAo5CP,CACI2B,IADJ;AACW,GADX,CAEIxB,MAAOO,CAAAA,QAAP,CAAgB,OAAhB,CAAJ,CACIiB,IADJ,CACW,IADX,CAGIA,IAHJ,CAGW,GAEtB,MAAKoB,IAAKQ,CAAAA,QAAV,CACI,MAAOO,SAAA,CAASjB,MAAT,CAAiB3C,KAAjB,CAAwB6C,IAAKO,CAAAA,aAA7B,CAxEf,CAtBqC,CAuGzCL,QAASA,SAAQ,CAACJ,MAAD,CAAS3C,KAAT,CAAgB4C,MAAhB,CAAwB,CACrC,MAAMtD,KAAOU,KAAM1B,CAAAA,IAAN,EAAb,CACM2B,OAASD,KAAME,CAAAA,KAAN,EAEf,IAAI,CAAC,CAAC2C,IAAKG,CAAAA,UAAN,CAAkBH,IAAKI,CAAAA,UAAvB,CAAmCpE,CAAAA,QAAnC,CAA4C+D,MAA5C,CAAL,EACQlE,MAAOoH,CAAAA,IAAP,CAAYC,SAAZ,CAAuBlH,CAAAA,QAAvB,CAAgCoB,MAAhC,CADR,CAGQ,MADMwD,MACC,CADWzD,KAAM0D,CAAAA,OAAN,CAAc,EAAA,EAAMqC,SAAA,CAAU9F,MAAV,CAApB,CACX,CAAA8C,QAAA,CAASJ,MAAT,CAAiBc,KAAjB,CAA4Bb,MAA5B,CAIf,OAAMiB,KAAO9D,WAAA,CAAYC,KAAZ,CAEb,IAAyB,IAAzB,GAAUC,MAl7CgBL,CAAAA,SAAJ,CAk7CZK,MAl7C8BJ,CAAAA,MAAlB,CAk7CJC,CAl7CI,CAk7CtB,CACI,OAAQ8C,MAAR,EACI,KAAKC,IAAKG,CAAAA,UAAV,CACI,MAAO1D,KACX,MAAKuD,IAAKK,CAAAA,QAAV,CACI,MAAOW,KAAP;AAAc,KAClB,MAAKhB,IAAKM,CAAAA,MAAV,CACI,MAAOU,KAAP,CAAc,KAClB,MAAKhB,IAAKI,CAAAA,UAAV,CACI,MAAO3D,KACX,MAAKuD,IAAKC,CAAAA,YAAV,CACI,MAAOe,KAAP,CAAc,MAClB,MAAKhB,IAAKO,CAAAA,aAAV,CACI,MAAOS,KAAP,CAAc,KAClB,MAAKhB,IAAKQ,CAAAA,QAAV,CACI,MAAON,SAAA,CAASJ,MAAT,CAAiB3C,KAAjB,CAAwB6C,IAAKO,CAAAA,aAA7B,CAdf,CADJ,IAkBI,QAAQR,MAAR,EACI,KAAKC,IAAKG,CAAAA,UAAV,CACI,MAAO1D,KACX,MAAKuD,IAAKK,CAAAA,QAAV,CACI,MAAOW,KAAP,CAAc,GAClB,MAAKhB,IAAKM,CAAAA,MAAV,CACI,MAAOU,KAAP,CAAc,GAClB,MAAKhB,IAAKI,CAAAA,UAAV,CACI,MAAO3D,KACX,MAAKuD,IAAKC,CAAAA,YAAV,CACI,MAAI1C,YAAA,CAAYH,MAAZ,CAAoB,CAAC,MAAD,CAAS,MAAT,CAAiB,SAAjB,CAApB,CAAJ,CACWX,IADX,CACkB,GADlB,CAGWuE,IAHX,CAGkB,IAEtB,MAAKhB,IAAKO,CAAAA,aAAV,CACI,MAAOS,KAAP;AAAc,GAClB,MAAKhB,IAAKQ,CAAAA,QAAV,CACI,MAAON,SAAA,CAASJ,MAAT,CAAiB3C,KAAjB,CAAwB6C,IAAKO,CAAAA,aAA7B,CAlBf,CA/BiC,CA8DzC4C,QAASA,QAAO,CAACrD,MAAD,CAAS3C,KAAT,CAAgB4C,MAAhB,CAAwBqD,UAAxB,CAAoC,CAChD,MAAM3G,KAAOU,KAAM1B,CAAAA,IAAN,EAEb,IAAI0B,KAAMiB,CAAAA,cAAN,EAAJ,CACI,MAAO3B,KAGX,IAAIU,KAAMgB,CAAAA,eAAN,EAAJ,CACI,MAAOkF,cAAA,CAAcvD,MAAd,CAAsB3C,KAAtB,CAA6B4C,MAA7B,CAAqCtD,IAArC,CACJ,IAAI2G,UAAJ,CACH,MAAOC,cAAA,CAAcvD,MAAd,CAAsB3C,KAAtB,CAA6B4C,MAA7B,CAAqCqD,UAArC,CAKX,QAFmBlF,aAAAoF,CAAcnG,KAAdmG,CAEnB,EACI,KAAK,CAAC,CAAN,CACI,MAAO7G,KACX,MAAK,CAAL,CACI,MAAOoD,SAAA,CAASC,MAAT,CAAiB3C,KAAjB,CAAwB4C,MAAxB,CACX,MAAK,CAAL,CACI,MAAOU,SAAA,CAASX,MAAT,CAAiB3C,KAAjB,CAAwB4C,MAAxB,CACX,MAAK,CAAL,CACI,MAAOgB,SAAA,CAASjB,MAAT,CAAiB3C,KAAjB,CAAwB4C,MAAxB,CACX;KAAK,CAAL,CACI,MAAOG,SAAA,CAASJ,MAAT,CAAiB3C,KAAjB,CAAwB4C,MAAxB,CAVf,CAfgD,CA6BpD8C,QAASA,oBAAmB,CAAC/C,MAAD,CAAS3C,KAAT,CAAgBwF,cAAhB,CAAgC,CACxD,GAAIY,sBAAuBC,CAAAA,QAA3B,GAAwCb,cAAxC,CAAwD,CAC9ClG,cAAAA,CAAOU,KAAM1B,CAAAA,IAAN,EACP2B,OAAAA,CAASD,KAAME,CAAAA,KAAN,EACX2D,MAAAA,CAAO9D,WAAA,CAAYC,KAAZ,CACPyB,eAAAA,CAAYnC,cAngDJM,CAAAA,SAAF,CAAY,CAAZ,CAmgDMN,cAngDWO,CAAAA,MAAjB,CAA0B,CAA1B,CAsgDV,OAAMiE,KADOzB,aAAAkB,CAActD,MAAdsD,CACPO,EAAgB7D,MAAOO,CAAAA,QAAP,CAAgB,GAAhB,CAAhBsD,EAAyCC,MAAA,CAAO9D,MAAP,CAE/C,OAAqB,GAArB,GAAIT,IAAA,CAAKS,MAAL,CAAJ,CACWwE,IAAA,CAAKhD,cAAL,CADX,CACwB,GADxB,CAEWqC,IAAJ,CACIW,IAAA,CAAKZ,KAAL,CADJ,CACiB,GADjB,CAEI5B,MAAA,CAAOhC,MAAP,CAAJ,CACIwE,IAAA,CAAUhD,cA7gDT7B,CAAAA,SAAF,CAAY,CAAZ,CA6gDW6B,cA7gDM5B,CAAAA,MAAjB;AAA0B,CAA1B,CA6gDC,CADJ,CACuB,IADvB,CAGI4E,IAAA,CAAKZ,KAAL,CAHJ,CAGiB,GAhB4B,CAkBjD,GAAIuC,sBAAuBhD,CAAAA,aAA3B,GAA6CoC,cAA7C,CACH,MAAOlC,SAAA,CAASX,MAAT,CAAiB3C,KAAjB,CAAwB6C,IAAKO,CAAAA,aAA7B,CApB6C,CAoC5DkD,QAASA,UAAS,CAAC3D,MAAD,CAAS3C,KAAT,CAAgB,CAqD9BuG,QAASA,oBAAmB,EAAG,CAC3B,MAAMC,KAAOC,eAAb,CACMC,MAAQF,IAAK/G,CAAAA,WAAL,EAAmBuF,CAAAA,OAAnB,CAA2B,IAA3B,CACW2B,KAAAA,EAAAH,IAAAG,CAAKD,KAALC,CAAnBxH,EAAAA,CA1mDOwE,CAEqB,GAFfA,CAAEiD,CAAAA,WAAF,EAEe,CAAmB,GAAnB,CAwmDdC,GACpB,OAAOL,KAAK5G,CAAAA,SAAL,CAAe,CAAf,CAAkB8G,KAAlB,CAAP,CAAkCvH,CAAlC,CAAsCqH,IAAK5G,CAAAA,SAAL,CAAe8G,KAAf,CAAuB,CAAvB,CAJX,CAO/BI,QAASA,QAAO,CAACC,SAAD,CAAY,CACpB,SAAUlI,CAAAA,QAAV,CAAmBW,IAAA,CAAKwE,MAAL,CAAnB,CAAJ,EACO,KAAMnF,CAAAA,QAAN,CAAeW,IAAA,CAAKS,MAAL,CAAf,CADP,EAEOG,WAAA,CAAYH,MAAZ,CAAoB,CAAC,OAAD,CAApB,CAFP,EAIQ+G,cAAA,EAEA;AADAjI,MAAOuF,CAAAA,IAAP,CAAYiC,mBAAA,EAAZ,CAAoC,GAApC,CACA,CAAAxH,MAAOuF,CAAAA,IAAP,CAAYmC,eAAZ,CAA8B,GAA9B,CANR,EArpBwB,GAgqBjB,GAhqBKjH,IAAA,CAgqBMS,MAhqBN,CAgqBL,CACHlB,MAAOuF,CAAAA,IAAP,CAAY9C,MAAA,CAAOlC,IAAP,CAAaU,KAAb,CAAZ,CAAkC,IAAlC,CADG,CAKCgH,cAAA,EAAJ,EACIjI,MAAOuF,CAAAA,IAAP,CAAYiC,mBAAA,EAAZ,CAAoC,GAApC,CACA,CAAAxH,MAAOuF,CAAAA,IAAP,CAAYmC,eAAZ,CAA8B,GAA9B,CAFJ,EAGWM,SAAJ,CACHhI,MAAOuF,CAAAA,IAAP,CAAYmC,eAAZ,CAA8B,GAA9B,CADG,CAGHQ,KAAMC,CAAAA,SAAU5C,CAAAA,IAAK6C,CAAAA,KAArB,CAA2BpI,MAA3B,CACIkF,KAAA,CAAMwC,eAAN,CAAuB9C,CAAA,EAAKA,CAAL,CAAS,GAAhC,CADJ,CAvBgB,CA3D5B,MAAM5E,OAAS,EAAf,CAEMO,KAAOU,KAAM1B,CAAAA,IAAN,EAFb,CAGM2B,OAASD,KAAME,CAAAA,KAAN,EAHf,CAKM2D,KAAO9D,WAAA,CAAYC,KAAZ,CALb,CAMMgE,OAASH,IAAKpE,CAAAA,WAAL,EAEf,IAAIQ,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CAAJ,CAEI,MADAzB,OAAOuF,CAAAA,IAAP,CAAkBhF,IA1iDAM,CAAAA,SAAF,CAAY,CAAZ,CA0iDEN,IA1iDeO,CAAAA,MAAjB;AA0iDQC,CA1iDR,CA0iDhB,CAA6B,IAA7B,CACO,CAAAwF,MAAA,CAAOvG,MAAP,CAGX,OAAMoF,eAAiBxB,MAAOyB,CAAAA,EACzBgD,CAAAA,uBADkB,CACMpH,KADN,CACa6C,IAAKG,CAAAA,UADlB,CAGvBtE,OAAOO,CAAAA,MAAP,CAAckF,cAAd,CAEA,KAAMkD,OAAUnD,CAADmD,EAAO,CAClB,MAAMC,aAAe3E,MAAOyB,CAAAA,EACvBgD,CAAAA,uBADgB,CACQpH,KADR,CACe6C,IAAKG,CAAAA,UADpB,CACgCuB,CAAAA,GADhC,CACoClG,CAAA,EAAK,CAACA,CAD1C,CAGrB,OAAKiJ,aAAazH,CAAAA,MAAlB,CAIOyH,YAAa/C,CAAAA,GAAb,CAAiBC,CAAA,EAAK,CAAA,GAAAA,CAAA,CACtB,GAruB4C,CAquB5C,GAAAb,MAruBW4D,CAAAA,OAAF,CAAU,QAAV,CAAoB,EAApB,CAAwB1H,CAAAA,MAquBjC,CAAA,CA7uBL6G,CAAAA,CAAQc,IAAKC,CAAAA,GAAL,CA6uBH9D,IA5uBLlE,CAAAA,WAAF,EAAgBiI,CAAAA,WAAhB,CAA4B,GAA5B,CADU,CA6uBH/D,IA3uBLlE,CAAAA,WAAF,EAAgBiI,CAAAA,WAAhB,CAA4B,GAA5B,CAFU,CAId,OAAMvI,EAAIoB,SAAA,CAAU,GAAV,CAyuBCoD,IAzuBc,CAAE+C,CAAF,CAAf,CACV,EAAA,CAwuBW/C,IAxuBF/D,CAAAA,SAAF,CAAY,CAAZ,CAAe8G,CAAf,CAAP,CAA+BvH,CAA/B,CAwuBWwE,IAxuB0B/D,CAAAA,SAAF,CAAY8G,CAAZ,CAAoB,CAApB,CAwuBxB,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA;AAAA,CAAA,CAAA,IAAA,CADsB,KAEvB,EAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAFuB,OAAA,EAAA,CAAtB,CAJP,CACW,CAACxC,CAAA,CAAEL,IAAF,CAAD,CALO,CActB,OAAMI,MAAQ,CAACN,CAAD,CAAIO,CAAJ,CAAAD,EAAU,CACpB,MAAM0D,mBAAqBxD,cAAeyD,CAAAA,KAAf,EAEtBD,mBAAmB9H,CAAAA,MAAxB,EACI8H,kBAAmBrD,CAAAA,IAAnB,CAAwB,CAAA,CAAxB,CAGJ,OAAOqD,mBAAmBpD,CAAAA,GAAnB,CAAuBC,CAAA,EAAKA,CAAA,CAAIN,CAAA,CAAEO,IAAA,CAAKd,CAAL,CAAF,CAAJ,CAAiBO,CAAA,CAAEP,CAAF,CAA7C,CAPa,CAUxB,KAAMlF,OAASuB,KAAMG,CAAAA,SAAN,EAAf,CACMgG,WAAapF,aAAA,CAAcf,KAAd,CAEnB,OAAMyG,gBAAkB,CAAE,GAAF,GAAUjH,IAAA,CAAKS,MAAL,CAAV,EApmDbP,YAEqBb,CAAAA,QAAP,CAkmDiCW,IAAAG,CAAKL,IAALK,CAlmDPF,CAAAA,WAAV,EAAhB,CAkmDD,GApmDbC,YAEqBb,CAAAA,QAAP,CAkmDyDW,IAAAG,CAAUL,IAhlD5EM,CAAAA,SAAF,CAAY,CAAZ,CAglD8EN,IAhlD7DO,CAAAA,MAAjB,CAA0B,CAA1B,CAglDoEF,CAlmD/BF,CAAAA,WAAV,EAAhB,CAkmDD,CACbH,IAjlDKM,CAAAA,SAAF,CAAY,CAAZ,CAilDHN,IAjlDoBO,CAAAA,MAAjB,CAA0B,CAA1B,CAglDU,CAElBgE,IAFN,CAIMmD;AAAiB,EAAAA,GAAO/G,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CAAPwG,EAAkC/G,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CAAlCwG,GACS,CADTA,EACf/G,MAAO+E,CAAAA,OAAP,CAAe,IAAf,CA0CR,KAAM6C,uBAAyB,CAC3B,CACI,CACIjJ,MAAOkC,CAAAA,SADX,CAEIgH,IAAAA,EAFJ,CADJ,CAKI,CACI,WAAY,CAAC,SAAD,CADhB,CAEI,WAAY,CAAC,SAAD,CAFhB,CAGI,OAAQ,CAAC,MAAD,CAAS,OAAT,CAHZ,CAII,MAAO,CAAC,MAAD,CAAS,OAAT,CAJX,CAKI,OAAQ,CAAC,QAAD,CAAW,OAAX,CALZ,CAMI,QAAS,CAAC,OAAD,CAAU,QAAV,CANb,CAOI,MAAO,CAAC,MAAD,CAAS,OAAT,CAPX,CAQI,QAAS,CAAC,QAAD,CARb,CASI,UAAW,CAAC,QAAD,CATf,CAUI,SAAU,CAAC,SAAD,CAVd,CAWI,SAAU,CAAC,QAAD,CAAW,OAAX,CAXd,CALJ,CAD2B,CAoB3B,CACI,CACIlJ,MAAOkC,CAAAA,SADX,CAEI,CAAA,CAFJ,CADJ,CAKI,CACI,YAAa,CAAC,YAAD,CAAe,YAAf,CADjB,CAEI,MAAO,CAAC,SAAD,CAFX,CAGI,MAAO,CAAC,OAAD,CAAU,MAAV,CAHX,CALJ,CApB2B;AA+B3B,CACI,CACIlC,MAAOuC,CAAAA,QADX,CAEI2G,IAAAA,EAFJ,CADJ,CAKI,CACI,SAAU,CAAC,QAAD,CAAW,SAAX,CADd,CAEI,SAAU,CAAC,QAAD,CAAW,MAAX,CAFd,CAGI,OAAQ,CAAC,MAAD,CAHZ,CAOI,OAAQ,CAAC,MAAD,CAPZ,CAQI,UAAW,CAAC,SAAD,CARf,CASI,SAAU,CAAC,QAAD,CATd,CAUI,QAAS,CAAC,OAAD,CAVb,CAWI,OAAQ,CAAC,MAAD,CAXZ,CAYI,SAAU,CAAC,QAAD,CAZd,CAaI,aAAc,CAAC,YAAD,CAblB,CAcI,YAAa,CAAC,WAAD,CAdjB,CAeI,QAAS,CAAC,OAAD,CAfb,CAgBI,QAAS,CAAC,OAAD,CAhBb,CAiBI,SAAU,CAAC,QAAD,CAjBd,CAkBI,QAAS,CAAC,OAAD,CAlBb,CALJ,CA/B2B,CAyD3B,CACI,CACIlJ,MAAOyC,CAAAA,MADX,CAEIyG,IAAAA,EAFJ,CADJ,CAKI,CACI,QAAS,CAAC,OAAD,CADb,CAEI,SAAU,CAAC,QAAD,CAAW,QAAX,CAAqB,SAArB,CAFd,CAGI,QAAS,CAAC,OAAD,CAAU,SAAV,CAHb,CAII,MAAO,CAAC,KAAD,CAJX,CAKI,MAAO,CAAC,KAAD,CALX,CAMI,MAAO,CAAC,OAAD,CANX,CAOI,OAAQ,CAAC,QAAD;AAAW,MAAX,CAPZ,CAQI,OAAQ,CAAC,QAAD,CARZ,CAUI,SAAU,CAAC,QAAD,CAVd,CAWI,QAAS,CAAC,OAAD,CAXb,CAYI,WAAY,CAAC,UAAD,CAZhB,CAaI,QAAS,CAAC,OAAD,CAbb,CAcI,SAAU,CAAC,QAAD,CAdd,CAeI,QAAS,CAAC,OAAD,CAfb,CAgBI,QAAS,CAAC,SAAD,CAhBb,CAiBI,SAAU,CAAC,QAAD,CAjBd,CAkBI,UAAW,CAAC,SAAD,CAlBf,CAmBI,QAAS,CAAC,OAAD,CAnBb,CAoBI,QAAS,CAAC,OAAD,CApBb,CAqBI,UAAW,CAAC,SAAD,CArBf,CAsBI,QAAS,CAAC,OAAD,CAtBb,CAuBI,OAAQ,CAAC,MAAD,CAvBZ,CALJ,CAzD2B,CA0F/B,KAAK,MAAM,CAACC,GAAD,CAAMC,gBAAN,CAAX,EAAsCH,uBAAtC,CAKI,GAFMI,sBAEF,CAFeF,GAAA,CAAI,CAAJ,CAEf,CAACtJ,MAAD,GAHcsJ,GAAAG,CAAI,CAAJA,CAGd,GACmB,IADnB,EACKD,sBADL,EAC6BA,sBAD7B,GAC4CjI,KAAMK,CAAAA,SAAN,EAD5C,GAEG2H,gBAAiBG,CAAAA,cAAjB,CAAgClI,MAAhC,CAFP,CAEgD,CAEtCmI,MAAAA;AAAIJ,gBAAA,CAAiB/H,MAAjB,CAEV,KAAK,IAAI5B,UAAT,GAAc+J,OAAd,CACIrJ,MAAOuF,CAAAA,IAAP,CAAYjG,UAAZ,CAGJ,OAAOiH,OAAA,CAAOvG,MAAP,CARqC,CAY9CsJ,sBAAAA,CAAO,0FAAA,CAAA,KAAA,CAAA,GAAA,CAePC,WAAAA,CAA+B,GAAlB,GAAC9I,IAAA,CAAKwE,MAAL,CAAD,CACbH,IADa,CAGO,GAAlB,GAACrE,IAAA,CAAKwE,MAAL,CAAD,CAA+BH,IA9vDvBjE,CAAAA,SAAF,CAAY,CAAZ,CA8vDyBiE,IA9vDRhE,CAAAA,MAAjB,CAA0B,CAA1B,CA8vDN,CAAuC,IAAvC,CACsB,GAAlB,GAACL,IAAA,CAAKwE,MAAL,CAAD,CAA+BH,IA/vD3BjE,CAAAA,SAAF,CAAY,CAAZ,CA+vD6BiE,IA/vDZhE,CAAAA,MAAjB,CAA0B,CAA1B,CA+vDF,CAAuC,IAAvC,CACsB,GAAlB,GAACL,IAAA,CAAKS,MAAL,CAAD,CAA8BX,IAhwD9BM,CAAAA,SAAF,CAAY,CAAZ,CAgwDgCN,IAhwDfO,CAAAA,MAAjB,CAA0B,CAA1B,CAgwDE,CACKO,WAAA,CAAYH,MAAZ,CAAoB,CAAC,IAAD,CAAO,IAAP,CAApB,CAAD,CAAsC4D,IAAtC,CAA8CA,IAA9C,CAAqD,GAMzE,QAAQsC,UAAR,EACI,KAAK,CAAC,CAAN,CACIpH,MAAOuF,CAAAA,IAAP,CAAYhF,IAAZ,CACA;KACJ,MAAK,CAAL,CACI,GAAe,MAAf,GAAIW,MAAJ,CACIlB,MAAOuF,CAAAA,IAAP,CAAY,MAAZ,CADJ,KAEO,IAAIrE,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CAAJ,CACHzB,MAAOuF,CAAAA,IAAP,CAAkBhF,IA7wDRM,CAAAA,SAAF,CAAY,CAAZ,CA6wDUN,IA7wDOO,CAAAA,MAAjB,CA6wDgBC,CA7wDhB,CA6wDR,CAA6B,KAA7B,CADG,KAGH,MAAUyB,MAAJ,CAAU,aAAV,CAAN,CAEJ,KACJ,MAAK,CAAL,CACI,GAAI8G,sBAAKxJ,CAAAA,QAAL,CAAcoB,MAAd,CAAJ,CAEIlB,MAAOuF,CAAAA,IAAP,CAAYgE,UAAZ,CAAyB,GAAzB,CAFJ,KAIO,IAAI1J,MAAOkC,CAAAA,SAAX,GAAyBrC,MAAzB,CAAiC,CAK9B8J,MAAAA,CAAW,8NAAA,CAAA,KAAA,CAAA,GAAA,CAmBXC;UAAAA,CAAY,sEAAA,CAAA,KAAA,CAAA,GAAA,CAQZC,uBAAAA,CAAY,iLAAA,CAAA,KAAA,CAAA,GAAA,CAsBlB,OAAMC,UAAY,yDAAA,CAAA,KAAA,CAAA,GAAA,CAAlB,CAUMC,IAAM,+CAAA,CAAA,KAAA,CAAA,GAAA,CAVZ,CAoBMC,IAAM,CACR,MADQ,CACA,OADA,CACS,KADT,CACgB,MADhB,CAIR,MAAJ,GAAc3I,MAAd;CAEIlB,MAAOuF,CAAAA,IAAP,CAAY,SAAZ,CACA,CAAAwC,OAAA,EAHJ,EAKW,SAAJ,GAAkB7G,MAAlB,EAEHlB,MAAOuF,CAAAA,IAAP,CAAY,MAAZ,CACA,CAAAwC,OAAA,EAHG,EAKI6B,GAAI9J,CAAAA,QAAJ,CAAaoB,MAAb,CAAJ,EAEH6G,OAAA,EACA,CAAA/H,MAAOuF,CAAAA,IAAP,CAAYgE,UAAZ,CAAyB,GAAzB,CAHG,EAKIM,GAAI/J,CAAAA,QAAJ,CAAaoB,MAAb,CAAJ,CAEHlB,MAAOuF,CAAAA,IAAP,CAAYgE,UAAZ,CAAyB,GAAzB,CAFG,CAIIC,MAAS1J,CAAAA,QAAT,CAAkBoB,MAAlB,CAAJ,EAAiCG,WAAA,CAAYH,MAAZ,CAAoBuI,UAApB,CAAjC,EACAC,sBAAU5J,CAAAA,QAAV,CAAmBoB,MAAnB,CADA,EAC8ByI,SAAU7J,CAAAA,QAAV,CAAmBoB,MAAnB,CAD9B,EAGCyI,SAAU7J,CAAAA,QAAV,CAAmBoB,MAAnB,CAYJ,EAXI6G,OAAA,EAWJ,CARI/C,MAAA,CAAO9D,MAAP,CAAJ,CACIgH,KAAMC,CAAAA,SAAU5C,CAAAA,IAAK6C,CAAAA,KAArB,CAA2BpI,MAA3B,CAAmCsI,MAAA,CAAO1D,CAAA,EAAKA,CAAL,CAAS,GAAhB,CAAnC,CADJ,CAEWQ,cAAetF,CAAAA,QAAf,CAAwB,CAAA,CAAxB,CAAJ,CACHE,MAAOuF,CAAAA,IAAP,CAAYG,IAAA,CAAKZ,IAAL,CAAZ,CAAyB,GAAzB,CADG,CAGH9E,MAAOuF,CAAAA,IAAP,CAAYT,IAAZ,CAAmB,GAAnB,CAGJ;AAAI4E,sBAAU5J,CAAAA,QAAV,CAAmBoB,MAAnB,CAAJ,EACI6G,OAAA,EAhBD,EAmBA,CACD7G,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CADC,EAC0BP,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CAD1B,GACsD,CAACR,KAAM+B,CAAAA,OAAN,EADvD,EAEA,CAAC,OAAD,CAAU,QAAV,CAAoBlD,CAAAA,QAApB,CAA6BoB,MAA7B,CAFA,EAIHlB,MAAOuF,CAAAA,IAAP,CAAkBhF,IA/4DZM,CAAAA,SAAF,CAAY,CAAZ,CA+4DcN,IA/4DGO,CAAAA,MAAjB,CA+4DoBC,CA/4DpB,CA+4DJ,CAA6B,GAA7B,CAGA,CAAI,OAAJ,GAAgBG,MAAhB,EACIlB,MAAOuF,CAAAA,IAAP,CAAkBhF,IAn5DhBM,CAAAA,SAAF,CAAY,CAAZ,CAm5DkBN,IAn5DDO,CAAAA,MAAjB,CAm5DwBC,CAn5DxB,CAm5DA,CAA6B,GAA7B,CARD,EAWI,CAAC,OAAD,CAAUjB,CAAAA,QAAV,CAAmBoB,MAAnB,CAAJ,CACHlB,MAAOuF,CAAAA,IAAP,CAAYhF,IAAZ,CAAmB,GAAnB,CADG,CAEI,OAAJ,GAAgBW,MAAhB,EACHlB,MAAOuF,CAAAA,IAAP,CAAkBhF,IAz5DZM,CAAAA,SAAF,CAAY,CAAZ,CAy5DcN,IAz5DGO,CAAAA,MAAjB,CAy5DoBC,CAz5DpB,CAy5DJ,CAA6B,IAA7B,CACA,CAAAf,MAAOuF,CAAAA,IAAP,CAAkBhF,IA15DZM,CAAAA,SAAF,CAAY,CAAZ,CA05DcN,IA15DGO,CAAAA,MAAjB,CA05DoBC,CA15DpB,CA05DJ,CAA6B,KAA7B,CAFG,EAGK,CAAAG,MAAOO,CAAAA,QAAP,CAAgB,SAAhB,CAAL,EAAmC,CAAAP,MAAOO,CAAAA,QAAP,CAAgB,SAAhB,CAAnC;AACEP,MAAOO,CAAAA,QAAP,CAAgB,WAAhB,CADF,EACkCP,MAAOO,CAAAA,QAAP,CAAgB,WAAhB,CADlC,EAEEP,MAAOO,CAAAA,QAAP,CAAgB,YAAhB,CAFF,EAEmCP,MAAOO,CAAAA,QAAP,CAAgB,YAAhB,CAFnC,CAIA,CAAKP,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CAAL,EAAgCP,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CAAhC,GACAR,KAAMK,CAAAA,SAAN,EADA,CAEHtB,MAAOuF,CAAAA,IAAP,CAAkBhF,IAj6DZM,CAAAA,SAAF,CAAY,CAAZ,CAi6DcN,IAj6DGO,CAAAA,MAAjB,CAi6DoBC,CAj6DpB,CAi6DJ,CAA6B,KAA7B,CAFG,CAGIG,MAAOO,CAAAA,QAAP,CAAgB,QAAhB,CAAJ,EACAR,KAAMK,CAAAA,SAAN,EADA,CAEHtB,MAAOuF,CAAAA,IAAP,CAAkBhF,IAp6DZM,CAAAA,SAAF,CAAY,CAAZ,CAo6DcN,IAp6DGO,CAAAA,MAAjB,CAo6DoBC,CAp6DpB,CAo6DJ,CAA6B,MAA7B,CAFG,CAGIG,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CAAJ,EACA,KAAM3B,CAAAA,QAAN,CAp6DYW,IAAA,CAo6DkBS,MAt6D3BL,CAAAA,SAAF,CAAY,CAAZ,CAs6D6BK,MAt6DZJ,CAAAA,MAAjB,CAs6DqCC,CAt6DrC,CAEW,CAo6DZ,CADA,EAEAE,KAAMK,CAAAA,SAAN,EAFA,CAGHtB,MAAOuF,CAAAA,IAAP,CAAkBhF,IAx6DZM,CAAAA,SAAF,CAAY,CAAZ,CAw6DcN,IAx6DGO,CAAAA,MAAjB,CAw6DoBC,CAx6DpB,CAw6DJ,CAA6B,KAA7B,CAHG,CAIImC,MAAA,CAAOhC,MAAP,CAAJ;AACHlB,MAAOuF,CAAAA,IAAP,CAAkBhF,IA16DZM,CAAAA,SAAF,CAAY,CAAZ,CA06DcN,IA16DGO,CAAAA,MAAjB,CA06DoBC,CA16DpB,CA06DJ,CAA6B,IAA7B,CADG,CAEIG,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CAAJ,EAA6BJ,WAAA,CAAYH,MAAZ,CAAoB,CAAC,KAAD,CAAQ,KAAR,CAAe,MAAf,CAAuB,MAAvB,CAA+B,MAA/B,CAApB,CAA7B,CACHlB,MAAOuF,CAAAA,IAAP,CAAiBhF,IA96DjBM,CAAAA,SAAF,CAAY,CAAZ,CA86DmBN,IA96DFO,CAAAA,MAAjB,CAA0B,CAA1B,CA86DE,CAAyB,GAAzB,CADG,CAEKI,MAAOO,CAAAA,QAAP,CAAgB,KAAhB,CAAL,EAA6D,CAA7D,EAAgDlB,IA76D7CM,CAAAA,SAAF+D,CAAY,CAAZA,CA66D+CrE,IA76D9BO,CAAAA,MAAjB8D,CA66DqD7D,CA76DrD6D,CAdElD,CAAAA,KAAFZ,CAAQA,EAARA,CAAYa,CAAAA,MAAZb,CAAmBc,OAAnBd,CAA4BA,CAAAA,MA27D7B,EACCO,WAAA,CAAYH,MAAZ,CAAoB,CAAC,KAAD,CAAQ,KAAR,CAApB,CADD,EACuD,CADvD,EACwCX,IAAKO,CAAAA,MAD7C,CAEHd,MAAOuF,CAAAA,IAAP,CAAkBhF,IA/6DZM,CAAAA,SAAF,CAAY,CAAZ,CA+6DcN,IA/6DGO,CAAAA,MAAjB,CA+6DoBC,CA/6DpB,CA+6DJ,CAA6B,IAA7B,CAFG,CAGIM,WAAA,CAAYH,MAAZ,CAAoB,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAApB,CAAJ,CACHlB,MAAOuF,CAAAA,IAAP,CAAkBhF,IAj7DZM,CAAAA,SAAF,CAAY,CAAZ,CAi7DcN,IAj7DGO,CAAAA,MAAjB,CAi7DoBC,CAj7DpB,CAi7DJ,CAA6B,IAA7B,CADG,CAEIG,MAAOO,CAAAA,QAAP,CAAgB,KAAhB,CAAJ,CACHzB,MAAOuF,CAAAA,IAAP,CAAkBhF,IAn7DZM,CAAAA,SAAF,CAAY,CAAZ;AAm7DcN,IAn7DGO,CAAAA,MAAjB,CAm7DoBC,CAn7DpB,CAm7DJ,CAA6B,IAA7B,CADG,CAEI,6DAAA,CAAA,KAAA,CAAA,GAAA,CAKTjB,CAAAA,QALS,CAKAoB,MALA,CAAJ,CAMHlB,MAAOuF,CAAAA,IAAP,CAAkBhF,IA17DZM,CAAAA,SAAF,CAAY,CAAZ,CA07DcN,IA17DGO,CAAAA,MAAjB,CA07DoBC,CA17DpB,CA07DJ,CAA6B,IAA7B,CANG,CAQHgH,OAAA,EAjCG,CAGH/H,MAAOuF,CAAAA,IAAP,CAAkBhF,IA95DZM,CAAAA,SAAF,CAAY,CAAZ,CA85DcN,IA95DGO,CAAAA,MAAjB,CA85DoBC,CA95DpB,CA85DJ,CAA6B,MAA7B,CAvIgC,CAAjC,IAwKIlB,OAAOyC,CAAAA,MAAX,GAAsB5C,MAAtB,CAEC2B,WAAA,CAAYH,MAAZ,CAAoB,CAAC,IAAD,CAAO,IAAP,CAApB,CAAJ,EACO,CAACG,WAAA,CAAYH,MAAZ,CAAoB,CAAC,QAAD,CAAW,QAAX,CAApB,CADR,CAGIlB,MAAOuF,CAAAA,IAAP,CAAiBhF,IAt8DjBM,CAAAA,SAAF,CAAY,CAAZ,CAs8DmBN,IAt8DFO,CAAAA,MAAjB,CAA0B,CAA1B,CAs8DE,CAAyB,GAAzB,CAHJ,CAIWI,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CAAJ,CACHzB,MAAOuF,CAAAA,IAAP,CAAYT,IAAZ,CAAmB,IAAnB,CADG,CAGI5D,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CAAJ,CACHzB,MAAOuF,CAAAA,IAAP,CAAYT,IAAZ,CAAmB,IAAnB,CADG,CAGI5D,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CAAJ,CAECJ,WAAA,CAAY4D,MAAZ;AAAoB,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,GAAhB,CAApB,CAAJ,CACIjF,MAAOuF,CAAAA,IAAP,CAAYT,IAAZ,CAAmB,IAAnB,CADJ,CAGI9E,MAAOuF,CAAAA,IAAP,CAAYT,IAAZ,CAAmB,IAAnB,CALD,CAQIzD,WAAA,CAAYH,MAAZ,CAAoB,CAAC,IAAD,CAAO,IAAP,CAApB,CAAJ,CACHlB,MAAOuF,CAAAA,IAAP,CAAkBhF,IAp9DZM,CAAAA,SAAF,CAAY,CAAZ,CAo9DcN,IAp9DGO,CAAAA,MAAjB,CAo9DoBC,CAp9DpB,CAo9DJ,CAA6B,IAA7B,CADG,CAGIM,WAAA,CAAYH,MAAZ,CAAoB,CAAC,IAAD,CAAO,IAAP,CAApB,CAAJ,EAEGK,MAmBN,CAnBgBhB,IAx9DVM,CAAAA,SAAF,CAAY,CAAZ,CAw9DYN,IAx9DKO,CAAAA,MAAjB,CAw9DkBC,CAx9DlB,CA2+DJ,CAjBM+I,UAiBN,CAjBqB,sPAAA,CAAA,KAAA,CAAA,GAAA,CAWnBhK,CAAAA,QAXmB,CAWVoB,MAXU,CAiBrB;AAJsB,GAItB,GAJKT,IAAA,CAAKS,MAAL,CAIL,EAJ+B4I,UAI/B,EAHI9J,MAAOuF,CAAAA,IAAP,CAAYhE,MAAZ,CAAgB,IAAhB,CAGJ,CAAAvB,MAAOuF,CAAAA,IAAP,CAAYhE,MAAZ,CAAgB,IAAhB,CArBG,EAuBIF,WAAA,CAAYH,MAAZ,CAAoB,CAC3B,QAD2B,CACjB,OADiB,CACR,OADQ,CAApB,CAAJ,CAGHlB,MAAOuF,CAAAA,IAAP,CAAYT,IAAZ,CAAmB,IAAnB,CAHG,CAIIzD,WAAA,CAAYH,MAAZ,CAAoB,CAAC,IAAD,CAAO,IAAP,CAApB,CAAJ,CACHlB,MAAOuF,CAAAA,IAAP,CAAYT,IAAZ,CAAmB,GAAnB,CADG,CAEI5D,MAAOO,CAAAA,QAAP,CAAgB,OAAhB,CAAJ,EAAgCR,KAAM8I,CAAAA,YAAN,EAAhC,CACH/J,MAAOuF,CAAAA,IAAP,CAAkBhF,IAp/DZM,CAAAA,SAAF,CAAY,CAAZ,CAo/DcN,IAp/DGO,CAAAA,MAAjB,CAo/DoBC,CAp/DpB,CAo/DJ,CAA6B,GAA7B,CADG,EAGHmH,KAAMC,CAAAA,SAAU5C,CAAAA,IAAK6C,CAAAA,KAArB,CAA2BpI,MAA3B,CAAmCsI,MAAA,CAAO1D,CAAA,EAAKA,CAAL,CAAS,GAAhB,CAAnC,CAEA,CAAIvD,WAAA,CAAYH,MAAZ,CAAoB,CACpB,UADoB,CAApB,CAAJ,EAGI6G,OAAA,EARD,CApDJ,CAiEH/H,MAAOuF,CAAAA,IAAP,CAAYT,IAAZ,CAAmB,GAAnB,CAEJ,MACJ,MAAK,CAAL,CACQ,MAAJ,GAAe5D,MAAf,CACIlB,MAAOuF,CAAAA,IAAP,CAAY,MAAZ,CADJ,CAGWrE,MAAOO,CAAAA,QAAP,CAAgB,IAAhB,CAAJ,EAA6B,CAACP,MAAOO,CAAAA,QAAP,CAAgB,MAAhB,CAA9B;AACC,IAAK3B,CAAAA,QAAL,CAAcW,IAAA,CAAKwE,MAAL,CAAd,CAAJ,EAAmC5D,WAAA,CAAY4D,MAAZ,CAAoB,CAAC,IAAD,CAAO,IAAP,CAApB,CAAnC,CACIjF,MAAOuF,CAAAA,IAAP,CAAYT,IAAZ,CAAmB,IAAnB,CADJ,CAGI9E,MAAOuF,CAAAA,IAAP,CAAYT,IAAZ,CAAmB,IAAnB,CAJD,CAOHiD,OAAA,EAEJ,MACJ,MAAK,CAAL,CAC6B,IAAzB,GAAU7G,MAthEQL,CAAAA,SAAJ,CAshEJK,MAthEsBJ,CAAAA,MAAlB,CAshEIC,CAthEJ,CAshEd,CACIf,MAAOuF,CAAAA,IAAP,CAAYT,IAAZ,CAAmB,KAAnB,CADJ,CAEWnF,MAAOoH,CAAAA,IAAP,CAAYC,SAAZ,CAAuBlH,CAAAA,QAAvB,CAAgCoB,MAAhC,CAAJ,CACHlB,MAAOuF,CAAAA,IAAP,CAAY3C,IAAA,CAAKoE,SAAA,CAAU9F,MAAV,CAAL,CAAZ,CAAsC,GAAtC,CADG,CAEIrB,MAAOuC,CAAAA,QAAX,GAAwB1C,MAAxB,CACHM,MAAOuF,CAAAA,IAAP,CAAYmC,eAAZ,CAA8B,GAA9B,CADG,CAG2B,GAA9B,GAAIjH,IAAA,CAAKiH,eAAL,CAAJ,CACI1H,MAAOuF,CAAAA,IAAP,CAAYmC,eAAZ,CAA8B,GAA9B,CADJ,CAGI1H,MAAOuF,CAAAA,IAAP,CAAYmC,eAAZ,CAA8B,GAA9B,CAvRhB,CA6RA,MAAOnB,OAAA,CAAOvG,MAAP,CAlgBuB,CAqgBlCmH,QAASA,cAAa,CAACvD,MAAD,CAAS3C,KAAT,CAAgB4C,MAAhB,CAAwBmG,MAAxB,CAAgC,CAClD,MAAMC;AAAWD,MAAOtJ,CAAAA,WAAP,EAAjB,CACMhB,OAASuB,KAAMG,CAAAA,SAAN,EADf,CAGM0D,KAAOmF,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CAAA,CAA+BuI,MA3iE5BnJ,CAAAA,SAAF,CAAY,CAAZ,CA2iE8BmJ,MA3iEblJ,CAAAA,MAAjB,CAA0B,CAA1B,CA2iED,CAAyCR,YAAA,CAAa0J,MAAb,CACtD,KAAME,YAAc,oDAAA,CAAA,KAAA,CAAA,GAAA,CAKpB,KAAK,IAAIC,CAAT,GArkEWxJ,YAqkEX,CACIuJ,WAAY3E,CAAAA,IAAZ,CAAiB4E,CAAjB,CAAqB,GAArB,CAOEC,EAAAA,CAAiB7K,IAAA6K,EACnBxG,MAAOyB,CAAAA,EAAGgD,CAAAA,uBAAV,CAAkCpH,KAAlC,CAAyC4C,MAAzC,CAAiD/D,CAAAA,QAAjD,CAA0D,CAAA,CAA1D,CAAA,CACM4F,IAAA,CAAKnG,IAAL,CADN,CACmBA,IAEvB,OAAM8K,0CAA4C,kLAAA,CAAA,KAAA,CAAA,GAAA,CAYlD;IAAMC,cAAgB,EAAAA,EAJKjJ,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAsB,KAAtB,CAA6B,KAA7B,CAAtB,CAILK,EAHf,CAACjJ,WAAA,CAAY4I,QAAZ,CAAsBI,yCAAtB,CAGcC,GAFdrJ,KAAM+E,CAAAA,UAAN,EAEcsE,EAFS5K,MAET4K,GAFoBzK,MAAO0C,CAAAA,MAE3B+H,GAAwBL,QAASxI,CAAAA,QAAT,CAAkB,OAAlB,CAE9C,IAAIqC,IAAKM,CAAAA,MAAT,GAAoBP,MAApB,CAEI,MAAIyG,cAAA,EAAJ,CACWN,MADX,CACoB,GADpB,CAvB4BC,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CAyBrB,CACUuI,MA9kECnJ,CAAAA,SAAF,CAAY,CAAZ,CA8kECmJ,MA9kEgBlJ,CAAAA,MAAjB,CA8kESC,CA9kET,CA6kET,CACuB,IADvB,CAxBqBkJ,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CA0BrB,CACUuI,MAhlECnJ,CAAAA,SAAF,CAAY,CAAZ,CAglECmJ,MAhlEgBlJ,CAAAA,MAAjB,CAglESC,CAhlET,CA+kET,CACuB,IADvB,CAEIM,WAAA,CAAY4I,QAAZ,CAAsBC,WAAtB,CAAJ,CACSF,MAplEJnJ,CAAAA,SAAF,CAAY,CAAZ,CAolEMmJ,MAplEWlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAmlEH,CACmB,IADnB,CAGIsJ,CAAA,CAAetF,IAAf,CAHJ,CAG2B,IAG/B,IAAIhB,IAAKC,CAAAA,YAAT;AAA0BF,MAA1B,CAEH,MAAIyG,cAAA,EAAJ,CACWN,MADX,CACoB,IADpB,CArC4BC,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CAuCrB,CACUuI,MA5lECnJ,CAAAA,SAAF,CAAY,CAAZ,CA4lECmJ,MA5lEgBlJ,CAAAA,MAAjB,CA4lESC,CA5lET,CA2lET,CACuB,KADvB,CAtCqBkJ,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CAwCrB,CACUuI,MA9lECnJ,CAAAA,SAAF,CAAY,CAAZ,CA8lECmJ,MA9lEgBlJ,CAAAA,MAAjB,CA8lESC,CA9lET,CA6lET,CACuB,KADvB,CAEIM,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,MAAD,CAAS,MAAT,CAAtB,CAAJ,EACA,CAAC5I,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,QAAD,CAAtB,CADD,CAESD,MAnmEJnJ,CAAAA,SAAF,CAAY,CAAZ,CAmmEMmJ,MAnmEWlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAimEH,CAEmB,KAFnB,CAGIO,WAAA,CAAY4I,QAAZ,CAAsBC,WAAtB,CAAJ,CACSF,MArmEJnJ,CAAAA,SAAF,CAAY,CAAZ,CAqmEMmJ,MArmEWlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAomEH,CACmB,KADnB,CAGIsJ,CAAA,CAAetF,IAAf,CAHJ,CAG2B,KAG/B,IAAI,CAAChB,IAAKO,CAAAA,aAAN,CAAqBP,IAAKQ,CAAAA,QAA1B,CAAoCxE,CAAAA,QAApC,CAA6C+D,MAA7C,CAAJ,CAEH,MAAIyG,cAAA,EAAJ,CACWN,MADX,CACoB,GADpB,CAtD4BC,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CAwDrB,CACUuI,MA7mECnJ,CAAAA,SAAF,CAAY,CAAZ;AA6mECmJ,MA7mEgBlJ,CAAAA,MAAjB,CA6mESC,CA7mET,CA4mET,CACuB,IADvB,CAvDqBkJ,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CAyDrB,CACUuI,MA/mECnJ,CAAAA,SAAF,CAAY,CAAZ,CA+mECmJ,MA/mEgBlJ,CAAAA,MAAjB,CA+mESC,CA/mET,CA8mET,CACuB,IADvB,CAEIM,WAAA,CAAY4I,QAAZ,CAAsBC,WAAtB,CAAJ,CACSF,MAnnEJnJ,CAAAA,SAAF,CAAY,CAAZ,CAmnEMmJ,MAnnEWlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAknEH,CACmB,IADnB,CAGIsJ,CAAA,CAAetF,IAAf,CAHJ,CAG2B,IAKtC,IAAI,CAAChB,IAAKK,CAAAA,QAAN,CAAgBL,IAAKI,CAAAA,UAArB,CAAiCpE,CAAAA,QAAjC,CAA0C+D,MAA1C,CAAJ,CAAuD,CAEnD,GAAIxC,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,OAAD,CAAU,OAAV,CAAtB,CAAJ,CACI,MAAYD,OA7nEJnJ,CAAAA,SAAF,CAAY,CAAZ,CA6nEMmJ,MA7nEWlJ,CAAAA,MAAjB,CAA0B,CAA1B,CA6nEN,CAAsB,IAG1B,IAAImJ,QAASxI,CAAAA,QAAT,CAAkB,KAAlB,CAAJ,EAA8C,MAA9C,GAAiCwI,QAAjC,CACI,MAAaD,OA/nECnJ,CAAAA,SAAF,CAAY,CAAZ,CA+nECmJ,MA/nEgBlJ,CAAAA,MAAjB,CA+nESC,CA/nET,CA+nEZ,CAA0B,IAPqB,CAYvD,GAAK+C,IAAKK,CAAAA,QAAV,GAAuBN,MAAvB,EAAoCC,IAAKI,CAAAA,UAAzC,GAAwDL,MAAxD,EAAmE5C,KAAMK,CAAAA,SAAN,EAAnE,CAAuF,CAEnF,GAAIgJ,aAAA,EAAJ,CACI,MAAON,OAAP;AAAgB,GACb,IApFqBC,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CAoFrB,CACH,MAAauI,OAzoECnJ,CAAAA,SAAF,CAAY,CAAZ,CAyoECmJ,MAzoEgBlJ,CAAAA,MAAjB,CAyoESC,CAzoET,CAyoEZ,CAA0B,IACvB,IArFqBkJ,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CAqFrB,CACH,MAAauI,OA3oECnJ,CAAAA,SAAF,CAAY,CAAZ,CA2oECmJ,MA3oEgBlJ,CAAAA,MAAjB,CA2oESC,CA3oET,CA2oEZ,CAA0B,IAGxBqG,cAAAA,CAAapF,aAAA,CAAcf,KAAd,CAEbsJ,EAAAA,CAAe,EAAAA,EAAM,CACvB,IAAMtF,OAASH,IAAKpE,CAAAA,WAAL,EACf,OAAM8J,gBAAkB,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAsB,OAAtB,CACxB,OACInJ,YAAA,CAAY4D,MAAZ,CAAoB,+BAAA,CAAA,KAAA,CAAA,GAAA,CAApB,CADJ,EAEO,CAAC5D,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,SAAD,CAAtB,CAFR,EAIe,IAJf,GAIIhF,MAJJ,EAMI5D,WAAA,CAAY4I,QAAZ,CAAsBO,eAAtB,CANJ,EAOO5G,MAAOyB,CAAAA,EAAGgD,CAAAA,uBAAV,CAAkCpH,KAAlC,CAAyC4C,MAAzC,CAAiD/D,CAAAA,QAAjD,CAA0D,CAAA,CAA1D,CAPP,EASU2K,MACC;AADKhK,IAAA,CAAKqE,IAAL,CACL,CAAKA,IA/pERjE,CAAAA,SAAF,CAAY,CAAZ,CA+pEUiE,IA/pEOhE,CAAAA,MAAjB,CAA0B,CAA1B,CA+pEK,EAA4B2J,MA7qET,GA6qESA,MA/qEtB5C,CAAAA,WAAF,EAEe,CAAmB,GAAnB,CA6qEIC,GAAvB,EAAmC2C,MAV9C,EAYIpJ,WAAA,CAAY4I,QAAZ,CAAsB,sFAAA,CAAA,KAAA,CAAA,GAAA,CAAtB,CADG,EAQA,CAAC5I,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,OAAD,CAAtB,CARD,EAUH5I,WAAA,CAAY4I,QAAZ,CAAsBO,eAAtB,CAVG,EAYGC,MACC,CAzqEYhK,IAAA,CAwqEQuJ,MA1qEjBnJ,CAAAA,SAAF,CAAY,CAAZ,CA0qEmBmJ,MA1qEFlJ,CAAAA,MAAjB,CA0qE2BC,CA1qE3B,CAEW,CAyqEZ,CAAMiJ,MA3qEHnJ,CAAAA,SAAF,CAAY,CAAZ,CA2qEKmJ,MA3qEYlJ,CAAAA,MAAjB,CA2qEaC,CA3qEb,CA2qED,EAAkC0J,MA3rEf,GA2rEeA,MA7rE5B5C,CAAAA,WAAF,EAEe,CAAmB,GAAnB,CA2rEUC,GAA7B,EAAyC2C,MAb7C,EAeHpJ,WAAA,CAAY4I,QAAZ,CAAsB,CAClB,QADkB,CACR,QADQ,CACE,QADF,CAAtB,CADG,EAKGQ,MAIC,CAnrEYhK,IAAA,CA+qEQuJ,MAjrEjBnJ,CAAAA,SAAF,CAAY,CAAZ;AAirEmBmJ,MAjrEFlJ,CAAAA,MAAjB,CAirE2BC,CAjrE3B,CAEW,CAmrEZ,EAHoC,GAAjC0D,GAhrEShE,IAAA,CAgrEOwJ,QAlrEhBpJ,CAAAA,SAAF,CAAY,CAAZ,CAkrEkBoJ,QAlrEDnJ,CAAAA,MAAjB,CAkrE4BC,CAlrE5B,CAEW,CAgrET0D,CACJiB,IAAA,CAAWsE,MAnrEPnJ,CAAAA,SAAF,CAAY,CAAZ,CAmrESmJ,MAnrEQlJ,CAAAA,MAAjB,CAmrEiBC,CAnrEjB,CAmrEF,CADI0D,CAEJiB,IAAA,CAAWsE,MAprEPnJ,CAAAA,SAAF,CAAY,CAAZ,CAorESmJ,MAprEQlJ,CAAAA,MAAjB,CAorEiBC,CAprEjB,CAorEF,CACC,GAAmB0J,MArsEA,GAqsEAA,MAvsEb5C,CAAAA,WAAF,EAEe,CAAmB,GAAnB,CAqsELC,GAAd,EAA0B2C,MAT9B,EAUIpJ,WAAA,CAAY4D,MAAZ,CAAoB,yBAAA,CAAA,KAAA,CAAA,GAAA,CAApB,CAAJ,EACGwF,MACC,CADKhK,IAAA,CAAKqE,IAAL,CACL,CAAMA,IAxrEHjE,CAAAA,SAAF,CAAY,CAAZ,CAwrEKiE,IAxrEYhE,CAAAA,MAAjB,CAwrEWC,CAxrEX,CAwrED,EAAgC0J,MAxsEb,GAwsEaA,MA1sE1B5C,CAAAA,WAAF,EAEe,CAAmB,GAAnB,CAwsEQC,GAA3B,EAAuC2C,MAF3C,EAGIpJ,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,KAAD,CAAQ,KAAR,CAAtB,CAAJ,CACSnF,IA5rERjE,CAAAA,SAAF,CAAY,CAAZ,CA4rEUiE,IA5rEOhE,CAAAA,MAAjB,CAA0B,CAA1B,CA2rEC,CACiB,IADjB,CAGIgE,IA5CY,CAgD3B,IAAI,CAAC,CAAD,CAAI,CAAJ,CAAOhF,CAAAA,QAAP,CAAgBsH,aAAhB,CAAJ,CAAiC,CAC7B,GAAI6C,QAASxI,CAAAA,QAAT,CAAkB,GAAlB,CAAJ,CACI,MAAYuI,OApsERnJ,CAAAA,SAAF,CAAY,CAAZ;AAosEUmJ,MApsEOlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAosEF,CAAsB,IACnB,IAAI,CAAC,SAAD,CAAYhB,CAAAA,QAAZ,CAAqBmK,QAArB,CAAJ,CACH,MAAYD,OAtsERnJ,CAAAA,SAAF,CAAY,CAAZ,CAssEUmJ,MAtsEOlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAssEF,CAAsB,IAJG,CAQ3B4J,aAAAA,CAtsEqBjK,IAAA,CAssEWwJ,QAxsEpBpJ,CAAAA,SAAF,CAAY,CAAZ,CAwsEsBoJ,QAxsELnJ,CAAAA,MAAjB,CAwsEgCC,CAxsEhC,CAEW,CAwsE3B,OAAM4J,IAAM,oJAAA,CAAA,KAAA,CAAA,GAAA,CA2BZ,IAAI9K,MAAOuC,CAAAA,QAAX,GAAwB1C,MAAxB,CAAgC,CAS5B,MAAMkL,YAAc,oXAAA,CAAA,KAAA,CAAA,GAAA,CAApB;AAgBMC,WAAaD,WAAY7E,CAAAA,MAAZ,CAAmB,6fAAA,CAAA,KAAA,CAAA,GAAA,CAAnB,CAhBnB;AA0CM+E,mBAAqBT,yCAA0CtE,CAAAA,MAA1C,CAAiD,uoBAAA,CAAA,KAAA,CAAA,GAAA,CAAjD,CA1C3B;AA8DMgF,MAAQ,8FAAA,CAAA,KAAA,CAAA,GAAA,CAad,IAAMrL,MAAN,GAAiBG,MAAO0C,CAAAA,MAAxB,EACW,CAAClB,WAAA,CAAY4I,QAAZ,CAAsBU,GAAtB,CADZ,EAEW,CAAE,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB7K,CAAAA,QAAhB,CAAyB4K,aAAzB,CAFb,EAGOI,kBAAmBhL,CAAAA,QAAnB,CAA4BmK,QAA5B,CAHP,EAI0B,OAJ1B,GAIQhJ,KAAME,CAAAA,KAAN,EAJR,CAKI,MAAOoJ,EAAA,EACJ,IAAIM,UAAW/K,CAAAA,QAAX,CAAoBmK,QAApB,CAAJ,CACH,MAAYD,OAl0ERnJ,CAAAA,SAAF,CAAY,CAAZ,CAk0EUmJ,MAl0EOlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAk0EF,CAAsB,IACnB,IAnDyBkK,uHAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAmDGlL,CAAAA,QAAxB,CAAiCmK,QAAjC,CAAJ,CACH,MAAO,CACHM,CAAA,EADG;AAEEP,MAt0ELnJ,CAAAA,SAAF,CAAY,CAAZ,CAs0EOmJ,MAt0EUlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAo0EK,CAEY,IAFZ,CAIJ,IAlDyBmK,CAC5B,SAD4BA,CACjB,QADiBA,CAkDGnL,CAAAA,QAAxB,CAAiCmK,QAAjC,CAAJ,CACH,MAAO,CACED,MA10ELnJ,CAAAA,SAAF,CAAY,CAAZ,CA00EOmJ,MA10EUlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAy0EK,CACY,IADZ,CAEHyJ,CAAA,EAFG,CAIJ,IAAIlJ,WAAA,CAAY4I,QAAZ,CACH,mEAAA,CAAA,KAAA,CAAA,GAAA,CADG,CAAJ,EAKAU,GAAI7K,CAAAA,QAAJ,CAAamK,QAAb,CALA,EAMChJ,KAAME,CAAAA,KAAN,EAAcM,CAAAA,QAAd,CAAuB,GAAvB,CAND,EAMgC,CAACJ,WAAA,CAAYJ,KAAME,CAAAA,KAAN,EAAZ,CAA2B,CAC3D,MAD2D,CACnD,QADmD,CAA3B,CANjC,EASC,IATD,GASU8I,QATV,CAYH,OADS,GAADrF,GAASnE,IAAA,CAAUwJ,QAx1EvBpJ,CAAAA,SAAF,CAAY,CAAZ,CAw1EyBoJ,QAx1ERnJ,CAAAA,MAAjB,CAA0B,CAA1B,CAw1Ee,CAAT8D,CAAuCoF,MAt1ErCnJ,CAAAA,SAAF,CAAY,CAAZ,CAs1EuCmJ,MAt1EtBlJ,CAAAA,MAAjB,CAs1E+CC,CAt1E/C,CAs1EA6D,CAAyDoF,MAx1E7DnJ,CAAAA,SAAF,CAAY,CAAZ,CAw1E+DmJ,MAx1E9ClJ,CAAAA,MAAjB,CAA0B,CAA1B,CAy1EF,EAAW,IAER,IAAIO,WAAA,CAAY4I,QAAZ;AAAsB,yKAAA,CAAA,KAAA,CAAA,GAAA,CAAtB,CAAJ,CAMH,MAAYD,OAj2ERnJ,CAAAA,SAAF,CAAY,CAAZ,CAi2EUmJ,MAj2EOlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAi2EF,CAAsB,IACnB,IAAIO,WAAA,CAAY4I,QAAZ,CAAsB,uCAAA,CAAA,KAAA,CAAA,GAAA,CAAtB,CAAJ,EAGA,CAACiB,EAAA,CAAG,KAAH,CAAD,CAAY,KAAZ,CAAmBpL,CAAAA,QAAnB,CAA4BmK,QAA5B,CAHA,CAIH,MAAYD,OAt2ERnJ,CAAAA,SAAF,CAAY,CAAZ,CAs2EUmJ,MAt2EOlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAs2EF,CAAsB,IACnB,IAAIO,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,QAAD,CAAtB,CAAJ,CACH,MAAYD,OAx2ERnJ,CAAAA,SAAF,CAAY,CAAZ,CAw2EUmJ,MAx2EOlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAw2EF,CAAsB,GACnB,IAAIO,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,IAAD;AAAO,IAAP,CAAtB,CAAJ,CACH,MAAIpK,OAAOkC,CAAAA,SAAX,GAAyBrC,MAAzB,CACiBsK,MAz2EPnJ,CAAAA,SAAF,CAAY,CAAZ,CAy2ESmJ,MAz2EQlJ,CAAAA,MAAjB,CAy2EiBC,CAz2EjB,CAw2ER,CAC8B,IAD9B,CAGiBiJ,MA32EPnJ,CAAAA,SAAF,CAAY,CAAZ,CA22ESmJ,MA32EQlJ,CAAAA,MAAjB,CA22EiBC,CA32EjB,CAw2ER,CAG8B,IAE3B,IAAIM,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,QAAD,CAAW,UAAX,CAAtB,CAAJ,CACH,MAAaD,OA92EHnJ,CAAAA,SAAF,CAAY,CAAZ,CA82EKmJ,MA92EYlJ,CAAAA,MAAjB,CA82EaC,CA92Eb,CA82ER,CAA0B,IACvB,IAAIkJ,QAASxI,CAAAA,QAAT,CAAkB,MAAlB,CAAJ,CACH,MAAauI,OAh3EHnJ,CAAAA,SAAF,CAAY,CAAZ,CAg3EKmJ,MAh3EYlJ,CAAAA,MAAjB,CAg3EaC,CAh3Eb,CAg3ER,CAA0B,IACvB,IAAIE,KAAME,CAAAA,KAAN,EAAcM,CAAAA,QAAd,CAAuB,MAAvB,CAAJ,CACH,MAAOD,UAAA,CAAU,KAAV,CAAsBwI,MAp3EzBnJ,CAAAA,SAAF,CAAY,CAAZ,CAo3E2BmJ,MAp3EVlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAo3EK,CACJ,IAAImJ,QAASxI,CAAAA,QAAT,CAAkB,KAAlB,CAAJ,CACH,MAAO,CAAC8I,CAAA,EAAD,CAAsBP,MAt3EzBnJ,CAAAA,SAAF,CAAY,CAAZ,CAs3E2BmJ,MAt3EVlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAs3EK,CAAgC,IAAhC,CACJ,IAAIO,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,GAAD,CAAM,IAAN;AAAY,KAAZ,CAAtB,CAAJ,EACA,CAAC5I,WAAA,CAAY4I,QAAZ,CAAsBW,WAAtB,CADD,CAGH,MAAOL,EAAA,EACJ,IAAIlJ,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,MAAD,CAAS,MAAT,CAAiB,MAAjB,CAAyB,MAAzB,CAAtB,CAAJ,CACH,MAAYD,OA53ERnJ,CAAAA,SAAF,CAAY,CAAZ,CA43EUmJ,MA53EOlJ,CAAAA,MAAjB,CAA0B,CAA1B,CA63EC,IAAKmJ,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CAAL,EACCwI,QAASxI,CAAAA,QAAT,CAAkB,GAAlB,CADD,EAj5EJd,YAEqBb,CAAAA,QAAP,CAsBMW,IAAAG,CA03EkCqJ,QA53E3CpJ,CAAAA,SAAF,CAAY,CAAZ,CA43E6CoJ,QA53E5BnJ,CAAAA,MAAjB,CA43EuDC,CA53EvD,CAEWH,CAtBoBF,CAAAA,WAAV,EAAhB,CA+4EV,CAGH,MAAYsJ,OAh4ERnJ,CAAAA,SAAF,CAAY,CAAZ,CAg4EUmJ,MAh4EOlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAg4EF,CAAsB,IACnB,IAAI,CAAAO,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAtB,CAAJ,EACEpK,MAAOkC,CAAAA,SADT,GACuBrC,MADvB,EACkC,CAAA2B,WAAA,CAAY4I,QAAZ,CAAsBc,KAAtB,CADlC,EAEE9J,KAAME,CAAAA,KAAN,EAAcM,CAAAA,QAAd,CAAuB,IAAvB,CAFF,CAIA,CAAA,GAAIwI,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CAAJ,CACH,MAAI5B,OAAOkC,CAAAA,SAAX;AAAyBrC,MAAzB,CACgBsK,MAv4EZnJ,CAAAA,SAAF,CAAY,CAAZ,CAu4EcmJ,MAv4EGlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAs4EF,CAC0B,IAD1B,CAGiBkJ,MAv4EPnJ,CAAAA,SAAF,CAAY,CAAZ,CAu4ESmJ,MAv4EQlJ,CAAAA,MAAjB,CAu4EiBC,CAv4EjB,CAo4ER,CAG8B,IAE3B,IAAIM,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAtB,CAAJ,CACH,MAAYD,OA54ERnJ,CAAAA,SAAF,CAAY,CAAZ,CA44EUmJ,MA54EOlJ,CAAAA,MAAjB,CAA0B,CAA1B,CA44EF,CAAsB,IAPnB,CAJA,IAGH,OAAOyJ,EAAA,EA7JiB,CAyKhC,GAAIN,QAASxI,CAAAA,QAAT,CAAkB,KAAlB,CAAJ,CACI,MAAauI,OA/4ECnJ,CAAAA,SAAF,CAAY,CAAZ,CA+4ECmJ,MA/4EgBlJ,CAAAA,MAAjB,CA+4ESC,CA/4ET,CA+4EZ,CAA0B,IACvB,IAAIkJ,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CAAJ,CAA6B,CAChC,GAAuB,GAAvB,GAAIiJ,aAAJ,CAEI,MADMD,YACC,CADKhK,IAAA,CAAUuJ,MAp5ElBnJ,CAAAA,SAAF,CAAY,CAAZ,CAo5EoBmJ,MAp5EHlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAo5EU,CACL,CAAMkJ,MAn5EHnJ,CAAAA,SAAF,CAAY,CAAZ,CAm5EKmJ,MAn5EYlJ,CAAAA,MAAjB,CAm5EaC,CAn5Eb,CAm5ED,EAAkC0J,WAn6Ef,GAm6EeA,WAr6E5B5C,CAAAA,WAAF,EAEe,CAAmB,GAAnB,CAm6EUC,GAA7B,EAAyC2C,WAC7C,IAAI,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB3K,CAAAA,QAAhB,CAAyB4K,aAAzB,CAAJ,CACH,MAAOH,EAAA,EACJ;GA96EO1I,sBA86Ee/B,CAAAA,QAAlB,CAA2B4K,aAA3B,CAAJ,CACH,MAAaV,OAv5EHnJ,CAAAA,SAAF,CAAY,CAAZ,CAu5EKmJ,MAv5EYlJ,CAAAA,MAAjB,CAu5EaC,CAv5Eb,CAu5ER,CAA0B,IAPE,CAWpC,MAAI4J,IAAI7K,CAAAA,QAAJ,CAAamK,QAAb,CAAJ,CACgBD,MA95EJnJ,CAAAA,SAAF,CAAY,CAAZ,CA85EMmJ,MA95EWlJ,CAAAA,MAAjB,CAA0B,CAA1B,CA65EV,CAC0B,IAD1B,CAEWO,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAAtB,CAAJ,CACSD,MAh6EJnJ,CAAAA,SAAF,CAAY,CAAZ,CAg6EMmJ,MAh6EWlJ,CAAAA,MAAjB,CAA0B,CAA1B,CA+5EH,CACmB,GADnB,CAEI,OAAJ,GAAgBmJ,QAAhB,CACI,CAAMD,MAl6ELnJ,CAAAA,SAAF,CAAY,CAAZ,CAk6EOmJ,MAl6EUlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAk6EC,CAAoBkJ,MAl6EnBnJ,CAAAA,SAAF,CAAY,CAAZ,CAk6EqBmJ,MAl6EJlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAk6EC,CAA8B,IAA9B,CADJ,CAEI,WAAJ,GAAoBmJ,QAApB,CACI,CAAMD,MAp6ELnJ,CAAAA,SAAF,CAAY,CAAZ,CAo6EOmJ,MAp6EUlJ,CAAAA,MAAjB,CAA0B,CAA1B,CAo6EC,CAAgB,IAAhB,CAA4BkJ,MAl6ErBnJ,CAAAA,SAAF,CAAY,CAAZ,CAk6EuBmJ,MAl6ENlJ,CAAAA,MAAjB,CAk6E+BC,CAl6E/B,CAk6EL,CAAyC,IAAzC,CADJ,CAEI,QAAJ,GAAiBkJ,QAAjB,CACI,CAAOD,MAp6EAnJ,CAAAA,SAAF,CAAY,CAAZ;AAo6EEmJ,MAp6EelJ,CAAAA,MAAjB,CAo6EUC,CAp6EV,CAo6EL,CAAoB,IAApB,CAA+BiJ,MAt6E9BnJ,CAAAA,SAAF,CAAY,CAAZ,CAs6EgCmJ,MAt6EflJ,CAAAA,MAAjB,CAA0B,CAA1B,CAs6EC,CAAyC,IAAzC,CADJ,CAIHO,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,IAAD,CAAO,IAAP,CAAtB,CAAJ,CACQrG,MAAOyB,CAAAA,EAAGC,CAAAA,yBAAV,CAAoCrE,KAApC,CAA2C4C,MAA3C,CAAmD/D,CAAAA,QAAnD,CAA4D,CAAA,CAA5D,CAAJ,CACiBkK,MAz6EHnJ,CAAAA,SAAF,CAAY,CAAZ,CAy6EKmJ,MAz6EYlJ,CAAAA,MAAjB,CAy6EaC,CAz6Eb,CAw6EZ,CAC8B,IAD9B,CAGiBiJ,MA36EHnJ,CAAAA,SAAF,CAAY,CAAZ,CA26EKmJ,MA36EYlJ,CAAAA,MAAjB,CA26EaC,CA36Eb,CAw6EZ,CAG8B,IAJlC,CAQIkJ,QAASxI,CAAAA,QAAT,CAAkB,IAAlB,CAAJ,EAv8EkBI,sBAu8E+B/B,CAAAA,QAAlB,CA76EJW,IAAA,CA66E8CwJ,QA/6EvDpJ,CAAAA,SAAF,CAAY,CAAZ,CA+6EyDoJ,QA/6ExCnJ,CAAAA,MAAjB,CA+6EmEC,CA/6EnE,CAEW,CA66EI,CAA/B,CACQ,CAAC,SAAD,CAAY,UAAZ,CAAwB,SAAxB,CAAmCjB,CAAAA,QAAnC,CAA4CmK,QAA5C,CAAJ,CACiBD,MAj7EHnJ,CAAAA,SAAF,CAAY,CAAZ,CAi7EKmJ,MAj7EYlJ,CAAAA,MAAjB,CAi7EaC,CAj7Eb,CAg7EZ,CAC8B,KAD9B,CAEWkJ,QAASxI,CAAAA,QAAT,CAAkB,OAAlB,CAAJ,CACUuI,MAn7EHnJ,CAAAA,SAAF,CAAY,CAAZ,CAm7EKmJ,MAn7EYlJ,CAAAA,MAAjB;AAm7EaC,CAn7Eb,CAk7EL,CACuB,KADvB,CAGUiJ,MAr7EHnJ,CAAAA,SAAF,CAAY,CAAZ,CAq7EKmJ,MAr7EYlJ,CAAAA,MAAjB,CAq7EaC,CAr7Eb,CAk7EL,CAGuB,IANlC,CAUI+D,IAAKpE,CAAAA,WAAL,EAAmBe,CAAAA,QAAnB,CAA4B,KAA5B,CAAJ,CACiBqD,IA17ECjE,CAAAA,SAAF,CAAY,CAAZ,CA07ECiE,IA17EgBhE,CAAAA,MAAjB,CA07EOC,CA17EP,CAy7EhB,CAC4B,IAD5B,CAIK+D,IAAKhE,CAAAA,MAAV,GAAqBmJ,QAASnJ,CAAAA,MAA9B,CAAuC,CAAvC,EAA6CO,WAAA,CAAY4I,QAAZ,CAAsBC,WAAtB,CAA7C,CAEQ,CAAC,GAAD,CAAM,GAAN,CAAWpK,CAAAA,QAAX,CA77EmBW,IAAA,CA67EgBqE,IA/7EzBjE,CAAAA,SAAF,CAAY,CAAZ,CA+7E2BiE,IA/7EVhE,CAAAA,MAAjB,CA+7EiCC,CA/7EjC,CAEW,CA67EyBL,CAAAA,WAAxB,EAApB,CAAJ,EAAkE,CAACO,KAAMK,CAAAA,SAAN,EAAnE,EACUmJ,WACC,CADKhK,IAAA,CAAKqE,IAAL,CACL,CAAMA,IAj8EHjE,CAAAA,SAAF,CAAY,CAAZ,CAi8EKiE,IAj8EYhE,CAAAA,MAAjB,CAi8EWC,CAj8EX,CAi8ED,EAAgC0J,WAj9Eb,GAi9EaA,WAn9E1B5C,CAAAA,WAAF,EAEe,CAAmB,GAAnB,CAi9EQC,GAA3B,EAAuC2C,WAFlD,EAGWpJ,WAAA,CAAY4I,QAAZ,CAAsB,CAAC,OAAD,CAAU,OAAV,CAAtB,CAAJ,CACSnF,IAr8ERjE,CAAAA,SAAF,CAAY,CAAZ,CAq8EUiE,IAr8EOhE,CAAAA,MAAjB,CAA0B,CAA1B,CAo8EC,CACiB,KADjB,CAGIgE,IAHJ,CAGW,GARtB,CAYWyF,CAAA,EArUwE,CA0UvF,MAAOP,OAza2C;AA7xEtD,MAAMlG,KAAOnE,MAAOO,CAAAA,MAAP,CAAc,CACvB+D,WAAY,cADW,CAEvBE,SAAU,aAFa,CAGvBC,OAAQ,WAHe,CAIvBF,WAAY,aAJW,CAKvBH,aAAc,cALS,CAMvBM,cAAe,YANQ,CAOvBC,SAAU,SAPa,CAAd,CAAb,CAUMzE,OAASF,MAAOO,CAAAA,MAAP,CAAc,CACzB,SAAY,SADa,CAEzB,UAAa,SAFY,CAGzB,OAAU,SAHe,CAIzB,OAAU,OAJe,CAAd,CAVf,CAiBMiL,MAAQxL,MAAOO,CAAAA,MAAP,CAAc,CACxB4D,IAAKG,CAAAA,UADmB,CAExBH,IAAKK,CAAAA,QAFmB,CAGxBL,IAAKM,CAAAA,MAHmB,CAIxBN,IAAKI,CAAAA,UAJmB,CAKxBJ,IAAKC,CAAAA,YALmB,CAMxBD,IAAKO,CAAAA,aANmB,CAOxBP,IAAKQ,CAAAA,QAPmB,CAAd,CAjBd,CA2BM4G,GAAKtG,CAAAsG,EAAKtG,CAAElD,CAAAA,KAAF,CAAQ,EAAR,CAAY8D,CAAAA,GAAZ,CAAgB4F,EAAA,EAAMC,MAAOC,CAAAA,YAAP,CAAoBF,EAAGG,CAAAA,UAAH,CAAc,CAAd,CAApB,CAAuC,CAAvC,CAAtB,CAAiEC,CAAAA,IAAjE,CAAsE,EAAtE,CA4ChB,MAAMvL,MAAN,CAQIwL,WAAW,CAACrM,CAAD,CAAI,CACPA,CAAJ;AAAiBa,KAAjB,EAEI,IAAKT,CAAAA,aAWL,CAXqBJ,CAAEI,CAAAA,aAWvB,CAVA,IAAKkM,CAAAA,YAUL,CAVoBtM,CAAEsM,CAAAA,YAUtB,CARA,IAAKC,CAAAA,OAQL,CARevM,CAAEuM,CAAAA,OAQjB,CAPA,IAAKC,CAAAA,OAOL,CAPexM,CAAEwM,CAAAA,OAOjB,CANA,IAAKC,CAAAA,IAML,CANYzM,CAAEyM,CAAAA,IAMd,CALA,IAAKC,CAAAA,SAKL,CALiB1M,CAAE0M,CAAAA,SAKnB,CAHA,IAAKC,CAAAA,YAGL,CAHoB3M,CAAE2M,CAAAA,YAGtB,CAFA,IAAKC,CAAAA,aAEL,CAFqB5M,CAAE4M,CAAAA,aAEvB,CAAA,IAAKC,CAAAA,cAAL,CAAsB7M,CAAE6M,CAAAA,cAb5B,GAiBI,IAAKzM,CAAAA,aAWL,CAXsB,CAAC,CAAEJ,CAAEI,CAAAA,aAW3B,EAX+C,CAAC,CAAEJ,CAAEK,CAAAA,cAWpD,CAVA,IAAKiM,CAAAA,YAUL,CAVoB,CAAC,CAAEtM,CAAEsM,CAAAA,YAUzB,CARA,IAAKC,CAAAA,OAQL,CARe,CAAC,CAAEvM,CAAEuM,CAAAA,OAQpB,CAPA,IAAKC,CAAAA,OAOL,CAPe,CAAC,CAAExM,CAAEwM,CAAAA,OAOpB,CANA,IAAKC,CAAAA,IAML,CANY,CAAC,CAAEzM,CAAEyM,CAAAA,IAMjB,CALA,IAAKC,CAAAA,SAKL,CALiB,CAAC,CAAE1M,CAAE0M,CAAAA,SAKtB,CAHA,IAAKC,CAAAA,YAGL,CAHoB3M,CAAEG,CAAAA,IAGtB,CAFA,IAAKyM,CAAAA,aAEL;AAFqB,IAAKD,CAAAA,YAAarL,CAAAA,WAAlB,EAErB,CAAM,IAAKlB,CAAAA,aAAX,GACI,IAAKyM,CAAAA,cADT,CAC0B7M,CAAEM,CAAAA,MAD5B,CA5BJ,CADW,CAoCfiF,OAAO,CAACQ,CAAD,CAAI,CACP,MAAMT,UAAY,IAAIzE,KAAJ,CAAU,IAAV,CAClByE,UAAUqH,CAAAA,YAAV,CAAyB5G,CAAA,CAAET,SAAF,CACzBA,UAAUsH,CAAAA,aAAV,CAA0BtH,SAAUqH,CAAAA,YAAarL,CAAAA,WAAvB,EAC1B,OAAOf,OAAOO,CAAAA,MAAP,CAAcwE,SAAd,CAJA,CAOXwH,SAAS,CAAC/G,CAAD,CAAI,CACT,MAAMT,UAAY,IAAIzE,KAAJ,CAAU,IAAV,CAClByE,UAAUuH,CAAAA,cAAV,CAA2B9G,CAAA,CAAET,SAAF,CAC3B,OAAO/E,OAAOO,CAAAA,MAAP,CAAcwE,SAAd,CAHE,CAMbyH,MAAM,CAAC/M,CAAD,CAAI,CACN,MAAQA,EAAR,WAAqBa,MAArB,EACQ,IAAKkB,CAAAA,KAAL,EADR,GACyB/B,CAAE+B,CAAAA,KAAF,EADzB,EAEQ,IAAKc,CAAAA,eAAL,EAFR,GAEmC7C,CAAE6C,CAAAA,eAAF,EAFnC,GAGQ,IAAKA,CAAAA,eAAL,EAHR;AAGmC,IAAKb,CAAAA,SAAL,EAHnC,GAGwDhC,CAAEgC,CAAAA,SAAF,EAHxD,GAIQ,IAAKc,CAAAA,cAAL,EAJR,GAIkC9C,CAAE8C,CAAAA,cAAF,EAJlC,EAKQ,IAAKZ,CAAAA,SAAL,EALR,GAK6BlC,CAAEkC,CAAAA,SAAF,EAL7B,EAMQ,IAAK0E,CAAAA,UAAL,EANR,GAM8B5G,CAAE4G,CAAAA,UAAF,EAN9B,EAOQ,IAAKhD,CAAAA,OAAL,EAPR,GAO2B5D,CAAE4D,CAAAA,OAAF,EAP3B,EAQQ,IAAK+G,CAAAA,YAAL,EARR,GAQgC3K,CAAE2K,CAAAA,YAAF,EAT1B,CAYVqC,WAAW,CAAChN,CAAD,CAAI,CACX,MAAQA,EAAR,WAAqBa,MAArB,EACQyF,IAAA,CAAK,IAAKvE,CAAAA,KAAL,EAAL,CADR,GAC+BuE,IAAA,CAAKtG,CAAE+B,CAAAA,KAAF,EAAL,CAD/B,EAEQ,IAAKc,CAAAA,eAAL,EAFR,GAEmC7C,CAAE6C,CAAAA,eAAF,EAFnC,GAGQ,IAAKA,CAAAA,eAAL,EAHR,EAGmC,IAAKb,CAAAA,SAAL,EAHnC,GAGwDhC,CAAEgC,CAAAA,SAAF,EAHxD,GAIQ,IAAKc,CAAAA,cAAL,EAJR,GAIkC9C,CAAE8C,CAAAA,cAAF,EALvB,CAQf3C,IAAI,EAAG,CACH,MAAO,KAAKwM,CAAAA,YADT,CAIP5K,KAAK,EAAG,CACJ,MAAO,KAAK6K,CAAAA,aADR,CAIR/J,eAAe,EAAG,CACd,MAAO,KAAKzC,CAAAA,aADE,CAQlB6M,gBAAgB,EAAG,CACf,MAAO,KAAK7M,CAAAA,aADG,CAInB4B,SAAS,EAAG,CACR,MAAO,KAAK6K,CAAAA,cADJ,CAIZ/J,cAAc,EAAG,CACb,MAAO,KAAKwJ,CAAAA,YADC,CAIjBpK,SAAS,EAAG,CACR,MAAO,KAAKqK,CAAAA,OAAZ;AAAuB,IAAKC,CAAAA,OAA5B,EAAuC,IAAKC,CAAAA,IADpC,CAIZ7F,UAAU,EAAG,CACT,MAAO,KAAK4F,CAAAA,OADH,CAIb5I,OAAO,EAAG,CACN,MAAO,KAAK6I,CAAAA,IADN,CAIV9B,YAAY,EAAG,CACX,MAAO,KAAK+B,CAAAA,SADD,CArHnB,CA0HA,KAAMzL,eAAN,QAA6BmC,MAA7B,EAGA,KAAM8J,0BAAN,QAAwC9J,MAAxC,EAgCA,MAAMZ,QAAUhB,SAAAgB,EAFDjB,YAEqBb,CAAAA,QAAP,CAAgBc,SAAUF,CAAAA,WAAV,EAAhB,CAA7B,CAIMc,UAAY,CAACsG,SAAD,CAAYF,OAAZ,CAAApG,EAAgCoG,OAAR,GAAQA,OAFrBC,CAAAA,WAAF,EAEe,CAAmBC,SAAUD,CAAAA,WAAV,EAAnB,CAA6CC,SAJvF,CAQMrH,KAAO8L,GAAA9L,EACL8L,GAAJ,EAAWA,GAAIzL,CAAAA,MAAf,CACWyL,GAAA,CAAIA,GAAIzL,CAAAA,MAAR,CAAiB,CAAjB,CADX,CAGW,EAZf,CAgBM+B,MAAQ,CAAC0J,GAAD,CAAMxL,CAAN,CAAA8B,EAAY0J,GAAI1L,CAAAA,SAAJ,CAAc0L,GAAIzL,CAAAA,MAAlB,CAA2BC,CAA3B,CAhB1B,CAkBM6B,KAAOgC,CAAAhC,EAAKgC,CAAE/D,CAAAA,SAAF,CAAY,CAAZ,CAAe+D,CAAE9D,CAAAA,MAAjB,CAA0B,CAA1B,CAlBlB,CAwBMO;AAAc,CAACE,CAAD,CAAIiL,GAAJ,CAAAnL,EAAoD,CAApDA,CAAYmL,GAAI7K,CAAAA,MAAJ,CAAWuE,CAAA,EAAK3E,CAAEE,CAAAA,QAAF,CAAWyE,CAAX,CAAhB,CAA+BpF,CAAAA,MAxB/D,CA0BMyF,OAASL,CAAAK,EAAKL,CAAEvE,CAAAA,MAAF,CAAS,CAAC8K,IAAD,CAAO9E,KAAP,CAAA,EAAiBzB,CAAED,CAAAA,OAAF,CAAUwG,IAAV,CAAjB,GAAqC9E,KAA9C,CA1BpB,CA4BMjC,KAAOd,CAAAc,EAAKd,CAAE4D,CAAAA,OAAF,CAAU,GAAV,CAAe,GAAf,CAAoBA,CAAAA,OAApB,CAA4B,GAA5B,CAAiC,GAAjC,CAOlB,MAAMkE,WAAN,CACIjB,WAAW,EAAG,CACV,IAAKkB,CAAAA,IAAL,CAAY,EADF,CAIdC,GAAG,CAAC3L,KAAD,CAAQ4L,KAAR,CAAe,CACd,MAAMC,YAAc3M,WAAA,CAAYc,KAAZ,CACpB,KAAM8L,KAAOrH,IAAA,CAAKoH,WAAY3L,CAAAA,KAAZ,EAAL,CAET6L,MAAAA,CAAW,IAAKL,CAAAA,IAAL,CAAUI,IAAV,CAETC,MAAN,WAA0B9E,MAA1B,GACI8E,KACA,CADW,EACX,CAAA,IAAKL,CAAAA,IAAL,CAAUI,IAAV,CAAA,CAAkBC,KAFtB,CAOA,EAFMC,IAEN,CAFcD,KAASE,CAAAA,IAAT,CAAcC,EAAA,EAAML,WAAYX,CAAAA,MAAZ,CAAmBgB,EAAA,CAAG,CAAH,CAAnB,CAApB,CAEd,EACIF,IAAA,CAAM,CAAN,CADJ,CACeJ,KADf,CAGIG,KAASzH,CAAAA,IAAT,CAAc,CAACuH,WAAD,CAAcD,KAAd,CAAd,CAhBU,CAoBlBO,MAAM,CAACC,cAAD,CAAiBR,KAAjB,CAAwBS,cAAxB,CAAwC,CACpCC,cAAAA;AAAOD,cAAe5L,CAAAA,KAAf,CAAqB,GAArB,CACb,KAAK,IAAInB,IAAT,GAAiBgN,eAAjB,CACUtM,cAEN,CAFctB,MAAO6N,CAAAA,MAAP,CAAc,EAAd,CAAkBH,cAAlB,CAEd,CADApM,cAAM1B,CAAAA,IACN,CADagB,IACb,CAAA,IAAKqM,CAAAA,GAAL,CAAS3L,cAAT,CAAgB4L,KAAhB,CALsC,CAc9CvG,GAAG,CAACrF,KAAD,CAAQwM,KAAR,CAAe,CACd,MAAMX,YAAc3M,WAAA,CAAYc,KAAZ,CACd8L,MAAAA,CAAOrH,IAAA,CAAKoH,WAAY3L,CAAAA,KAAZ,EAAL,CAEP6L,MAAAA,CAAW,IAAKL,CAAAA,IAAL,CAAUI,KAAV,CAEjB,IAAIC,KAAJ,WAAwB9E,MAAxB,CAA+B,CAC3B,IAAI+E,MAAQD,KAASE,CAAAA,IAAT,CAAcC,EAAA,EAAML,WAAYX,CAAAA,MAAZ,CAAmBgB,EAAA,CAAG,CAAH,CAAnB,CAApB,CAER,EAACF,KAAL,EAAcQ,KAAd,GACIR,KADJ,CACYD,KAASE,CAAAA,IAAT,CAAcC,EAAA,EAAML,WAAYV,CAAAA,WAAZ,CAAwBe,EAAA,CAAG,CAAH,CAAxB,CAApB,CADZ,CAIA,IAAIF,KAAJ,CACI,MAAOA,MAAA,CAAM,CAAN,CARgB,CANjB,CAmBlBS,MAAM,CAACzM,KAAD,CAAQ,CACV,MAAM6L,YAAc3M,WAAA,CAAYc,KAAZ,CACd8L,MAAAA;AAAOrH,IAAA,CAAKoH,WAAY3L,CAAAA,KAAZ,EAAL,CAEb,OAAM6L,SAAW,IAAKL,CAAAA,IAAL,CAAUI,KAAV,CAEbC,SAAJ,WAAwB9E,MAAxB,GACI,IAAKyE,CAAAA,IAAL,CAAUI,KAAV,CAEA,CAFkBC,QAASrL,CAAAA,MAAT,CAAgBwL,EAAA,EAAM,CAACL,WAAYX,CAAAA,MAAZ,CAAmBgB,EAAA,CAAG,CAAH,CAAnB,CAAvB,CAElB,CAA+B,CAA/B,GAAI,IAAKR,CAAAA,IAAL,CAAUI,KAAV,CAAgBjM,CAAAA,MAApB,EACI,OAAO,IAAK6L,CAAAA,IAAL,CAAUI,KAAV,CAJf,CANU,CAuBdG,IAAI,CAAC3M,IAAD,CAAO,CACDwM,IAAAA,CAAOrH,IAAA,CAAKnF,IAAL,CAAWG,CAAAA,WAAX,EAEPsM,KAAAA,CAAW,IAAKL,CAAAA,IAAL,CAAUI,IAAV,CAEjB,OAAIC,KAAJ,WAAwB9E,MAAxB,CACW8E,IAASxH,CAAAA,GAAT,CAAamI,IAAA,EAAQA,IAAA,CAAK,CAAL,CAArB,CADX,CAGW,EARJ,CAjFf,CA8FA,MAAMC,sBAAwBjO,MAAOO,CAAAA,MAAP,CAAc,CAExC2N,UAAW,CAF6B,CAKxCC,SAAU,CAL8B,CAYxCC,UAAW,CAZ6B,CAexCC,QAAS,CAf+B,CAiBxCC,IAAK,CAjBmC,CAoBxCC,+BAAgC,CApBQ,CAuBxCC,UAAW,CAvB6B,CAyBxCC,SAAU,CAzB8B,CA4BxCC,UAAW,CA5B6B,CA8BxCC,SAAU,EA9B8B,CAgCxCC,OAAQ,EAhCgC;AAkCxCC,MAAO,EAlCiC,CAoCxCC,eAAgB,EApCwB,CAqCxCC,kBAAmB,EArCqB,CA6CxCC,UAAW,EA7C6B,CAAd,CAgD9B,MAAMC,aAAN,CAMInD,WAAW,CAACoD,WAAD,CAActO,IAAd,CAAoBuO,UAApB,CAAgC,CACvC,IAAKD,CAAAA,WAAL,CAAmBA,WACnB,KAAKtO,CAAAA,IAAL,CAAYA,IACZ,KAAKuO,CAAAA,UAAL,CAAkBA,UAHqB,CAN/C,CAgBA,MAAMzH,uBAAyB1H,MAAOO,CAAAA,MAAP,CAAc,CAQzCmE,cAAe,CAR0B,CAWzCiD,SAAU,CAX+B,CAAd,CAmB/B,MAAMyH,eAAN,CACItD,WAAW,CAACoD,WAAD,CAAcpI,cAAd,CAA8BqI,UAA9B,CAA0C,CACjD,IAAKD,CAAAA,WAAL,CAAmBA,WACnB,KAAKpI,CAAAA,cAAL,CAAsBA,cACtB,KAAKqI,CAAAA,UAAL,CAAkBA,UAH+B,CADzD,CAQA,MAAMzI,mBAAqB1G,MAAOO,CAAAA,MAAP,CAkf3B8O,QAAsC,EAAG,CAOrCC,QAASA,UAAS,CAAC5B,cAAD;AAAiB6B,SAAjB,CAA4BC,EAA5B,CAAgCC,EAAhC,CAAoCC,MAApC,CAA4C,CACpDC,SAAAA,CAAiBJ,SAAD,WAAsBhH,MAAtB,CAA+BgH,SAA/B,CAA2C,CAACA,SAAD,CAC3DK,GAAAA,CAAeJ,EAAGzN,CAAAA,KAAH,CAAS,GAAT,CACf8N,GAAAA,CAAQJ,EAAG1N,CAAAA,KAAH,CAAS,GAAT,CAMR8E,OAAAA,CAAmB6I,MAAD,WAAmBnH,MAAnB,CAA4BmH,MAA5B,CAAqC,CAAChI,sBAAuBC,CAAAA,QAAxB,CAE7D,KAAK,IAAI/G,IAAT,GAAiBiP,GAAjB,CAAwB,CACdvO,EAAAA,CAAQtB,MAAO6N,CAAAA,MAAP,CAAc,EAAd,CAAkBH,cAAlB,CACdpM,GAAM1B,CAAAA,IAAN,CAAagB,IAEb,KAAIkP,YAAcC,UAAWpJ,CAAAA,GAAX,CAAerF,EAAf,CAAsB,CAAA,CAAtB,CACbwO,YAAL,GACIA,WACA,CADc,EACd,CAAAC,UAAW9C,CAAAA,GAAX,CAAe3L,EAAf,CAAsBwO,WAAtB,CAFJ,CAKA,KAAK,IAAIE,CAAT,GAAcJ,GAAd,CACI,IAAK,IAAIK,CAAT,GAAcpJ,OAAd,CACIiJ,WAAYlK,CAAAA,IAAZ,CAAiB,IAAIwJ,cAAJ,CAAmBY,CAAnB,CAAsBC,CAAtB,CAAyBN,SAAzB,CAAjB,CAZY,CAXkC,CAJ9D,MAAMI,WAAa,IAAIhD,UAAvB,CACMmD,EAAIlQ,MAAOO,CAAAA,MAAP,CAAc,CAACR,OAAQG,MAAOkC,CAAAA,SAAhB,CAAd,CADV;AAEM+N,SAAWnQ,MAAOO,CAAAA,MAAP,CAAc,CAACR,OAAQG,MAAOkC,CAAAA,SAAhB,CAA2B4J,QAAS,CAAA,CAApC,CAAd,CAmCjBsD,UAAA,CAAUY,CAAV,CAAajC,qBAAsBC,CAAAA,SAAnC,CAA8C,GAA9C,CAAmD,wBAAnD,CACAoB,UAAA,CAAUY,CAAV,CAAajC,qBAAsBC,CAAAA,SAAnC,CAA8C,IAA9C,CAAoD,KAApD,CAKAoB,UAAA,CAAUY,CAAV,CAAajC,qBAAsBK,CAAAA,GAAnC,CAAwC,GAAxC,CAA6C,KAA7C,CACAgB,UAAA,CAAUY,CAAV,CAAajC,qBAAsBC,CAAAA,SAAnC,CAA8C,GAA9C,CAAmD,MAAnD,CAIAoB,UAAA,CAAUY,CAAV,CAAa,CAACjC,qBAAsBC,CAAAA,SAAvB,CAAkCD,qBAAsBe,CAAAA,SAAxD,CAAb,CACI,IADJ,CACU,MADV,CACkB,CAACtH,sBAAuBhD,CAAAA,aAAxB,CADlB,CAIA4K,UAAA,CAAUY,CAAV,CAAajC,qBAAsBE,CAAAA,QAAnC,CAA6C,GAA7C,CACI,+CADJ,CAOAmB;SAAA,CAAUY,CAAV,CAAajC,qBAAsBG,CAAAA,SAAnC,CAA8C,GAA9C,CACI,qCADJ,CAIAkB,UAAA,CAAUY,CAAV,CAAajC,qBAAsBI,CAAAA,OAAnC,CAA4C,IAA5C,CAAkD,2CAAlD,CAQAiB,UAAA,CAAUY,CAAV,CAAajC,qBAAsBK,CAAAA,GAAnC,CAAwC,IAAxC,CAA8C,UAA9C,CAEAgB,UAAA,CAAUY,CAAV,CAAajC,qBAAsBK,CAAAA,GAAnC,CAAwC,GAAxC,CAA6C,KAA7C,CAGAgB,UAAA,CAAUY,CAAV,CAAajC,qBAAsBK,CAAAA,GAAnC,CAAwC,IAAxC,CAA8C,QAA9C,CAGAgB,UAAA,CAAUa,QAAV,CAAoBlC,qBAAsBM,CAAAA,8BAA1C,CAA0E,IAA1E,CAAgF,KAAhF,CACAe,UAAA,CAAUY,CAAV,CAAajC,qBAAsBM,CAAAA,8BAAnC,CAAmE,IAAnE,CAAyE,wCAAzE;AAx+BiB,CA2+BLtJ,KA3+BK,CA2+BLA,EA3+BK,CAAaY,CAAAA,GAAb,CAAiB0F,EAAjB,CAAqBM,CAAAA,IAArB,CAA0B,GAA1B,CAw+BjB,CAQAyD,UAAA,CAAUY,CAAV,CAAajC,qBAAsBO,CAAAA,SAAnC,CAA8C,GAA9C,CAAmD,mCAAnD,CACAc,UAAA,CAAUY,CAAV,CAAajC,qBAAsBQ,CAAAA,QAAnC,CAA6C,IAA7C,CAAmD,gCAAnD,CAGAa,UAAA,CAAUY,CAAV,CAAajC,qBAAsBS,CAAAA,SAAnC,CAA8C,GAA9C,CACI,wCADJ,CAMAY,UAAA,CAAUY,CAAV,CAAajC,qBAAsBU,CAAAA,QAAnC,CAA6C,MAA7C,CAAqD,KAArD,CACAW,UAAA,CAAUY,CAAV,CAAajC,qBAAsBU,CAAAA,QAAnC,CAA6C,IAA7C,CAAmD,2BAAnD,CACAW,UAAA,CAAUY,CAAV,CAAajC,qBAAsBW,CAAAA,MAAnC,CAA2C,IAA3C,CAAiD,aAAjD,CAEAU,UAAA,CAAUY,CAAV,CAAa,CAACjC,qBAAsBW,CAAAA,MAAvB;AAA+BX,qBAAsBa,CAAAA,cAArD,CAAb,CAAmF,IAAnF,CAAyF,KAAzF,CACAQ,UAAA,CAAUY,CAAV,CAAajC,qBAAsBY,CAAAA,KAAnC,CAA0C,IAA1C,CAAgD,SAAhD,CAGAS,UAAA,CAAUY,CAAV,CAAajC,qBAAsBS,CAAAA,SAAnC,CAA8C,IAA9C,CAAoD,KAApD,CAEAY,UAAA,CAAUY,CAAV,CAAa,CAACjC,qBAAsBW,CAAAA,MAAvB,CAA+BX,qBAAsBa,CAAAA,cAArD,CAAb,CAAmF,IAAnF,CAAyF,KAAzF,CAGAQ,UAAA,CAAUY,CAAV,CAAajC,qBAAsBC,CAAAA,SAAnC,CAA8C,GAA9C,CAAmD,eAAnD,CACAoB,UAAA,CAAUY,CAAV,CAAajC,qBAAsBC,CAAAA,SAAnC,CAA8C,IAA9C,CAAoD,KAApD,CACAoB,UAAA,CAAUY,CAAV,CAAajC,qBAAsBM,CAAAA,8BAAnC,CAAmE,IAAnE,CAAyE,mBAAzE,CAGAe,UAAA,CAAUY,CAAV,CAAajC,qBAAsBE,CAAAA,QAAnC;AAA6C,GAA7C,CADmBiC,mBACnB,CACAd,UAAA,CAAUY,CAAV,CAAajC,qBAAsBM,CAAAA,8BAAnC,CAAmE,IAAnE,CAFmB6B,mBAEnB,CAKAd,UAAA,CAAUY,CAAV,CAAa,CACTjC,qBAAsBE,CAAAA,QADb,CAETF,qBAAsBc,CAAAA,iBAFb,CAAb,CAGG,GAHH,CAGQ,MAHR,CAIAO,UAAA,CAAUY,CAAV,CAAa,CACTjC,qBAAsBM,CAAAA,8BADb,CAETN,qBAAsBc,CAAAA,iBAFb,CAAb,CAGG,IAHH,CAGS,MAHT,CAMAO,UAAA,CAAUY,CAAV,CAAajC,qBAAsBI,CAAAA,OAAnC,CAA4C,IAA5C,CAAkD,cAAlD,CACAiB,UAAA,CAAUY,CAAV,CAAajC,qBAAsBO,CAAAA,SAAnC,CAA8C,IAA9C,CAAoD,SAApD,CACAc,UAAA,CAAUY,CAAV,CAAajC,qBAAsBO,CAAAA,SAAnC,CAA8C,GAA9C;AAAmD,MAAnD,CAQA,OAAOuB,WAjJ8B,CAlfA,EAAd,CAA3B,CAEMM,IAAM,CACFlM,IADE,CAEAjE,MAFA,CAIDsL,KAJC,CAMQ9K,cANR,CAOmBiM,yBAPnB,CAkBesB,qBAlBf,CA0BMgB,YA1BN,CAoCD3O,KApCC,CAmDKE,WAnDL,CAiEYJ,kBAjEZ,CAmFRiC,cAAef,KAAAe,EACJA,aAAA,CAAcgO,GAAI7P,CAAAA,WAAJ,CAAgBc,KAAhB,CAAd,CApFH,CA2GRgP,oBAAqBhP,KAAAgP,EAAS,CACpBL,KAAAA,CAAI5N,aAAA,CAAcgO,GAAI7P,CAAAA,WAAJ,CAAgBc,KAAhB,CAAd,CAEV,OAAU,EAAV,GAAI2O,KAAJ,CACW,CADX,CAEiB,CAAV,GAAIA,KAAJ,CACI,CADJ,CAGIA,KARe,CA3GtB,CAuHRM,kBAAmB,gBAvHX,CAwHRC,oBAAqB,gBAxHb,CA+HRC,iBAAkB,aAA+B1D,WAA/B,CAedE,GAAG,CAAC3L,KAAD,CAAQoP,QAAR,CAAkB,CAIjB,GAAI,CAAEA,QAASC,CAAAA,KAAT,CAAe,yBAAf,CAAN,CACI,KAAM,KAAIN,GAAI1D,CAAAA,yBAAR,CAAkC,sBAAlC,CAAN;AAGJ,KAAMM,CAAAA,GAAN,CAAU3L,KAAV,CAAiBoP,QAAjB,CARiB,CAWrB/K,yBAAyB,CAACrE,KAAD,CAAQ4C,MAAR,CAAgB,CAC/B0M,MAAAA,CAAYpF,KAAMlF,CAAAA,OAAN,CAAcpC,MAAd,CAElB,OAAiB,EAAjB,EAAI0M,MAAJ,GACUlH,KADV,CACc,IAAK/C,CAAAA,GAAL,CAASrF,KAAT,CAAgB,CAAA,CAAhB,CADd,GAIcuP,KAEN,CAFiBnH,KAAE3H,CAAAA,KAAF,CAAQ,GAAR,CAAA,CAAa,CAAb,CAEjB,CAA4B,GAA5B,GAAI8O,KAAA,CAASD,MAAT,CAAJ,CACW,CAAC,CAAA,CAAD,CADX,CAEmC,GAA5B,GAAIC,KAAA,CAASD,MAAT,CAAJ,CACI,CAAC,CAAA,CAAD,CAAO,CAAA,CAAP,CADJ,CAE4B,GAA5B,GAAIC,KAAA,CAASD,MAAT,CAAJ,CACI,CAAC,CAAA,CAAD,CAAQ,CAAA,CAAR,CADJ,CAE4B,GAA5B,GAAIC,KAAA,CAASD,MAAT,CAAJ,CACI,CAAC,CAAA,CAAD,CAAQ,CAAA,CAAR,CADJ,CAGI,CAAC,CAAA,CAAD,CAfnB,EAoBO,EAvB8B,CA0BzClI,uBAAuB,CAACpH,KAAD,CAAQ4C,MAAR,CAAgB,CAC7B0M,MAAAA,CAAYpF,KAAMlF,CAAAA,OAAN,CAAcpC,MAAd,CAElB,OAAiB,EAAjB,EAAI0M,MAAJ,EAAkC,CAAlC,CAAsBA,MAAtB,GACUlH,KADV,CACc,IAAK/C,CAAAA,GAAL,CAASrF,KAAT,CAAgB,CAAA,CAAhB,CADd,GAIc+I,KAEN,CAFeX,KAAE3H,CAAAA,KAAF,CAAQ,GAAR,CAAA,CAAa,CAAb,CAEf,CAA0B,GAA1B,GAAIsI,KAAA,CAAOuG,MAAP,CAAJ,CACW,CAAC,CAAA,CAAD,CADX,CAEiC,GAA1B,GAAIvG,KAAA,CAAOuG,MAAP,CAAJ,CACI,CAAC,CAAA,CAAD,CAAO,CAAA,CAAP,CADJ,CAE0B,GAA1B,GAAIvG,KAAA,CAAOuG,MAAP,CAAJ;AACI,CAAC,CAAA,CAAD,CAAQ,CAAA,CAAR,CADJ,CAE0B,GAA1B,GAAIvG,KAAA,CAAOuG,MAAP,CAAJ,CACI,CAAC,CAAA,CAAD,CAAQ,CAAA,CAAR,CADJ,CAGI,CAAC,CAAA,CAAD,CAfnB,EAoBO,EAvB4B,CApDzB,CA/HV,CA6MRE,OAAQ,KAAA,CAEJhF,WAAW,EAAG,CAiFlB,MAAMmE,EAAI,IAAII,GAAII,CAAAA,gBAAlB,CACMP,EAAIlQ,MAAOO,CAAAA,MAAP,CAAc,CAACR,OAAQG,MAAOkC,CAAAA,SAAhB,CAAd,CADV,CAEM2O,GAAK/Q,MAAOO,CAAAA,MAAP,CAAc,CAACR,OAAQG,MAAOkC,CAAAA,SAAhB,CAA2B4J,QAAS,CAAA,CAApC,CAAd,CAFX,CAGMxG,EAAIxF,MAAOO,CAAAA,MAAP,CAAc,CAACR,OAAQG,MAAOuC,CAAAA,QAAhB,CAAd,CAGVwN,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CACIG,GAAIE,CAAAA,iBADR,CAEI,0BAFJ,CAIAN,EAAExC,CAAAA,MAAF,CAAS,CAAC5N,cAAe,CAAA,CAAhB,CAAT,CACIwQ,GAAIE,CAAAA,iBADR,CAEI,OAFJ,CAIAN,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CACI,gBADJ,CAEI,oCAFJ,CAIAD,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CACI,gBADJ,CAEI,2CAFJ,CAIAD;CAAExC,CAAAA,MAAF,CAASsD,EAAT,CACIV,GAAIE,CAAAA,iBADR,CAEI,gBAFJ,CAIAN,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CACI,gBADJ,CAEI,eAFJ,CAtBiCD,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CA0B5BQ,gBA1B4B,CA0BV9P,MA1BU,CAAAqP,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CA2B5BQ,gBA3B4B,CA2BV9P,KA3BU,CAAAqP,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CA4B5BQ,gBA5B4B,CA4BV9P,KA5BU,CAAAqP,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CA8B5BQ,gBA9B4B,CA8BV9P,MA9BU,CAgCjCqP,EAAExC,CAAAA,MAAF,CAAS,CAAC1N,OAAQG,MAAOyC,CAAAA,MAAhB,CAAT,CACI,gBADJ,CAEI,wHAFJ,CAOAsN,EAAExC,CAAAA,MAAF,CAASjI,CAAT,CAAY,gBAAZ,CAA8B,MAA9B,CACAyK,EAAExC,CAAAA,MAAF,CAASjI,CAAT,CAAY,gBAAZ,CAA8B,OAA9B,CAcAyK,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CACI,gBADJ;AAEI,YAFJ,CAIAD,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CACI,gBADJ,CAEI,uBAFJ,CAMAD,EAAExC,CAAAA,MAAF,CAASsD,EAAT,CACI,gBADJ,CAEI,OAFJ,CAhEiCd,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CAoE5BQ,gBApE4B,CAoEV9P,SApEU,CAAAqP,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CAqE5BQ,gBArE4B,CAqEV9P,YArEU,CAuEjCqP,EAAExC,CAAAA,MAAF,CAASyC,CAAT,CACI,gBADJ,CAEI,4rBAFJ;AAhxBiB,CAmzBLjL,QAnzBK,CAmzBLA,MAnzBK,CAmzBLA,EAnzBK,CAAaY,CAAAA,GAAb,CAAiB0F,EAAjB,CAAqBM,CAAAA,IAArB,CAA0B,GAA1B,CAgxBjB,CAoCI,ibApCJ,CAqDAoE,EAAExC,CAAAA,MAAF,CAASsD,EAAT,CACI,gBADJ;AAEI,0hCAFJ;AAr0BiB,CAs3BL9L,KAt3BK,CAs3BLA,EAt3BK,CAAaY,CAAAA,GAAb,CAAiB0F,EAAjB,CAAqBM,CAAAA,IAArB,CAA0B,GAA1B,CAq0BjB,CAkDI,wDAlDJ,CAoDAoE,EAAExC,CAAAA,MAAF,CAAS,CAAC1N,OAAQG,MAAOyC,CAAAA,MAAhB,CAAT,CACI,gBADJ,CAEI,OAFJ,CAOAsN,EAAEhD,CAAAA,GAAF,CACI,CAACrN,KAAM,OAAP,CAAgBG,OAAQG,MAAO0C,CAAAA,MAA/B,CAAuCoJ,QAAS,CAAA,CAAhD,CADJ,CAEI,gBAFJ,CAKAiE,EAAExC,CAAAA,MAAF,CAASjI,CAAT,CAAY,gBAAZ,CAA8B,kBAA9B,CAEAyK,EAAEhD,CAAAA,GAAF,CACI,CAACrN,KAAM,QAAP,CAAiBG,OAAQG,MAAOuC,CAAAA,QAAhC,CAA0CuJ,QAAS,CAAA,CAAnD,CADJ,CAEI,gBAFJ,CAKAiE,EAAExC,CAAAA,MAAF,CAASjI,CAAT,CAAY,gBAAZ,CAA8B,QAA9B,CAEAyK,EAAExC,CAAAA,MAAF,CAASjI,CAAT,CACI6K,GAAIG,CAAAA,mBADR,CAEI,oBAFJ,CApRQ,KAAK9K,CAAAA,EAAL,CAwRDuK,CA9RW,CAqBd3I,OAAO,CAAChG,KAAD,CAAQ0P,eAAR,CAAyBzJ,UAAzB,CAAqC,CACb,KAAA,CAAA8I,GAAI7P,CAAAA,WAAJ,CAAgBc,KAAhB,CAyiC7Bb;eAAAA,CAAI6G,OAAA,CAziCmBrD,IAyiCnB,CAAgB3C,KAAhB,CAziCiD0P,eAyiCjD,CAziCkEzJ,UAyiClE,CAEN,gBAAA,CADA9G,eAAJ,WAAiB8H,MAAjB,CACW9H,eADX,CAGO,CAACA,eAAD,CA7iCC,OAAO,gBADiC,CAQ5CmH,SAAS,CAACtG,KAAD,CAAQ,CACP7B,KAAAA,CAAI4Q,GAAI7P,CAAAA,WAAJ,CAAgBc,KAAhB,CAEV,OAAI7B,MAAE6C,CAAAA,eAAF,EAAJ,CACW,CAAC7C,KAAEG,CAAAA,IAAF,EAAD,CADX,CAGWgI,SAAA,CAAU,IAAV,CAAgBnI,KAAhB,CANE,CA8BjBwR,gBAAgB,CAAC3P,KAAD,CAAQ,CACpB,MAAM2C,OAAS,IAAf,CACMxE,EAAI4Q,GAAI7P,CAAAA,WAAJ,CAAgBc,KAAhB,CADV,CAEMmG,WAAapF,aAAA,CAAc5C,CAAd,CAEnB,OAAIgI,WAAJ,EAAiC,CAAjC,EAAmBA,UAAnB,GACUyJ,KACF,CADYxK,kBAAmBC,CAAAA,GAAnB,CAAuBlH,CAAvB,CAA0B,CAAA,CAA1B,CACZ,CAAAyR,KAAA,WAAmB3I,MAF3B,EAGe2I,KAAQrL,CAAAA,GAAR,CAAY2E,CAAA,EAAM,CACnB0E,IAAAA;AAAF1E,CAAE0E,CAAAA,WAC0CpI,KAAAA,yBAAF0D,CAAE1D,CAAAA,cAwjC5D,yBAAA,CADA,CAAJ,GAvjC+CW,UAujC/C,CACWzD,QAAA,CAxjC4BC,MAwjC5B,CAxjCgDxE,CAwjChD,CAAwB0E,IAAKO,CAAAA,aAA7B,CADX,CAEW,CAAJ,GAzjCwC+C,UAyjCxC,CACIT,mBAAA,CA1jC4B/C,MA0jC5B,CA1jCgDxE,CA0jChD,CAAmCqH,wBAAnC,CADJ,CAEI,CAAJ,GA3jCwCW,UA2jCxC,CACIvC,QAAA,CA5jC4BjB,MA4jC5B,CA5jCgDxE,CA4jChD,CAAwB0E,IAAKO,CAAAA,aAA7B,CADJ,CAEI,CAAJ,GA7jCwC+C,UA6jCxC,CACIpD,QAAA,CA9jC4BJ,MA8jC5B,CA9jCgDxE,CA8jChD,CAAwB0E,IAAKO,CAAAA,aAA7B,CADJ,CAP4D,IAAA,EAxjC1B,OAAA,KAAIuK,YAAJ,CACnBC,qBADmB,CAErB,wBAFqB,CAGrB1E,CAAE2E,CAAAA,UAHmB,CAAA,CAAlB,CAHf,CAWO,EAhBa,CA7DpB,CA7MA,CAFZ,CAyzBM9J,OAASzD,CAAAyD,EAAkB,GAAlBA,GAAMvE,IAAA,CAAKc,CAAL,CAANyD,EAAyB,CAACzD,CAAEE,CAAAA,QAAF,CAAW,SAAX,CAA1BuD,EACP,IAAKlF,CAAAA,QAAL,CAAcW,IAAA,CAAKc,CAAL,CAAd,CADOyD,EACmB,CAAC3D,WAAA,CAAYE,CAAZ;AAAe,CAAC,IAAD,CAAO,IAAP,CAAf,CA1zBnC,CAotCMyF,UAAY,CACd,OAAQ,QADM,CAEd,OAAQ,QAFM,CAqjClB,OAAOrH,OAAOO,CAAAA,MAAP,CAAc8P,GAAd,CAjtF8C,CAVxD,CAzB6G;",
"sources":["node_modules/russian-nouns-js/RussianNouns.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$russian_nouns_js$RussianNouns\"] = function(global,require,module,exports) {\n/*!\n  RussianNounsJS v1.3.1\n\n  Copyright (c) 2011-2021 \u0423\u0441\u0442\u0438\u043d\u043e\u0432 \u0413\u0435\u043e\u0440\u0433\u0438\u0439 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u0438\u0447\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in all\n  copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // CommonJS\n        module.exports = factory();\n    } else {\n        root.RussianNouns = factory();\n    }\n}(typeof self !== 'undefined' ? self : this, function () {\n    'use strict';\n\n    // \u0421\u0441\u044b\u043b\u043a\u0438:\n    // - \u0421\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a. \u041c\u043e\u0440\u0444\u043e\u043b\u043e\u0433\u0438\u044f - \u041a\u0430\u043c\u044b\u043d\u0438\u043d\u0430 \u0410.\u0410., \u0423\u0447. \u043f\u043e\u0441. 1999 - 240 \u0441.\n    // - \u0421\u0442\u0430\u0442\u044c\u044f http://en.wikipedia.org/wiki/Russian_grammar\n    // - \u041a \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u043a\u0435 \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u043b\u043e\u043a\u0430\u0442\u0438\u0432\u0430 - \u041f\u043b\u0443\u043d\u0433\u044f\u043d \u0412. \u0410., \u0421\u0435\u043c\u0438\u043e\u0442\u0438\u043a\u0430 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0430. - \u0412\u044b\u043f. 37. - \u041c., 2002. - \u0421. 229-254\n\n    const Case = Object.freeze({\n        NOMINATIVE: '\u0438\u043c\u0435\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439',\n        GENITIVE: '\u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439',\n        DATIVE: '\u0434\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439',\n        ACCUSATIVE: '\u0432\u0438\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439',\n        INSTRUMENTAL: '\u0442\u0432\u043e\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439',\n        PREPOSITIONAL: '\u043f\u0440\u0435\u0434\u043b\u043e\u0436\u043d\u044b\u0439',\n        LOCATIVE: '\u043c\u0435\u0441\u0442\u043d\u044b\u0439'\n    });\n\n    const Gender = Object.freeze({\n        \"FEMININE\": \"\u0436\u0435\u043d\u0441\u043a\u0438\u0439\",\n        \"MASCULINE\": \"\u043c\u0443\u0436\u0441\u043a\u043e\u0439\",\n        \"NEUTER\": \"\u0441\u0440\u0435\u0434\u043d\u0438\u0439\",\n        \"COMMON\": \"\u043e\u0431\u0449\u0438\u0439\"\n    });\n\n    const CASES = Object.freeze([\n        Case.NOMINATIVE,\n        Case.GENITIVE,\n        Case.DATIVE,\n        Case.ACCUSATIVE,\n        Case.INSTRUMENTAL,\n        Case.PREPOSITIONAL,\n        Case.LOCATIVE\n    ]);\n\n    const rk = s => s.split('').map(ch => String.fromCharCode(ch.charCodeAt(0) + 1)).join('');\n\n    const rkComma = s => s.split(',').map(rk).join(',');\n\n    /**\n     * @param o A plain old JavaScript object.\n     * @returns {string|null} \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0438\u043b\u0438 null.\n     */\n    function validateCreateLemma(o) {\n        if (null == o) {\n            return 'No parameters specified.';\n        }\n\n        for (let fieldName of [\n            'pluraleTantum', 'pluraliaTantum',\n            'indeclinable', 'animate',\n            'surname', 'name', 'transport'\n        ]) {\n            const check = x => (null != x) && (typeof x != 'boolean');\n            if (check(o[fieldName])) {\n                return '' + fieldName + ' must be boolean.';\n            }\n        }\n\n        const pluraleTantum = (!!(o.pluraleTantum)) || (!!(o.pluraliaTantum));\n\n        // TODO\n        if (o.text == null) {\n            return 'A cyrillic word required.';\n        }\n\n        if (!pluraleTantum) {   // \u042d\u0442\u043e \u0441\u043b\u043e\u0432\u0430 \u0442. \u043d. \u043f\u0430\u0440\u043d\u043e\u0433\u043e \u0440\u043e\u0434\u0430.\n            if (o.gender == null) {\n                return 'A grammatical gender required.';\n            }\n\n            if (!Object.values(Gender).includes(o.gender)) {\n                return 'Bad grammatical gender.';\n            }\n        }\n\n        return null;\n    }\n\n    class Lemma {\n\n        /**\n         * *\u041d\u0435 \u0434\u043b\u044f \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f!*\n         * \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 {@link RussianNouns.createLemma}\n         * \u0438\u043b\u0438 {@link RussianNouns.createLemmaNoThrow} \u0432\u043c\u0435\u0441\u0442\u043e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430.\n         * @param {RussianNouns.Lemma|Object} o\n         */\n        constructor(o) {\n            if (o instanceof Lemma) {\n\n                this.pluraleTantum = o.pluraleTantum;\n                this.indeclinable = o.indeclinable;\n\n                this.animate = o.animate;\n                this.surname = o.surname;\n                this.name = o.name;\n                this.transport = o.transport;\n\n                this.internalText = o.internalText;\n                this.lowerCaseText = o.lowerCaseText;\n\n                this.internalGender = o.internalGender;\n\n            } else {\n\n                this.pluraleTantum = (!!(o.pluraleTantum)) || (!!(o.pluraliaTantum));\n                this.indeclinable = !!(o.indeclinable);\n\n                this.animate = !!(o.animate);\n                this.surname = !!(o.surname);\n                this.name = !!(o.name);\n                this.transport = !!(o.transport);\n\n                this.internalText = o.text;\n                this.lowerCaseText = this.internalText.toLowerCase();\n\n                if (!(this.pluraleTantum)) {  // \u042d\u0442\u043e \u0441\u043b\u043e\u0432\u0430 \u0442. \u043d. \u043f\u0430\u0440\u043d\u043e\u0433\u043e \u0440\u043e\u0434\u0430.\n                    this.internalGender = o.gender;\n                }\n\n            }\n        }\n\n        newText(f) {\n            const lemmaCopy = new Lemma(this);\n            lemmaCopy.internalText = f(lemmaCopy);\n            lemmaCopy.lowerCaseText = lemmaCopy.internalText.toLowerCase();\n            return Object.freeze(lemmaCopy);\n        }\n\n        newGender(f) {\n            const lemmaCopy = new Lemma(this);\n            lemmaCopy.internalGender = f(lemmaCopy);\n            return Object.freeze(lemmaCopy);\n        }\n\n        equals(o) {\n            return (o instanceof Lemma)\n                && (this.lower() === o.lower())\n                && (this.isPluraleTantum() === o.isPluraleTantum())\n                && (this.isPluraleTantum() || (this.getGender() === o.getGender()))\n                && (this.isIndeclinable() === o.isIndeclinable())\n                && (this.isAnimate() === o.isAnimate())\n                && (this.isASurname() === o.isASurname())\n                && (this.isAName() === o.isAName())\n                && (this.isATransport() === o.isATransport());\n        }\n\n        fuzzyEquals(o) {\n            return (o instanceof Lemma)\n                && (unYo(this.lower()) === unYo(o.lower()))\n                && (this.isPluraleTantum() === o.isPluraleTantum())\n                && (this.isPluraleTantum() || (this.getGender() === o.getGender()))\n                && (this.isIndeclinable() === o.isIndeclinable());\n        }\n\n        text() {\n            return this.internalText;\n        }\n\n        lower() {\n            return this.lowerCaseText;\n        }\n\n        isPluraleTantum() {\n            return this.pluraleTantum;\n        }\n\n        /**\n         * @deprecated \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 isPluraleTantum(), \u0442.\u043a. \u0440\u0435\u0447\u044c \u043e\u0431 \u043e\u0434\u043d\u043e\u0439 \u043b\u0435\u043c\u043c\u0435, \u0430 pluralia \u2014 \u0432\u043e \u043c\u043d.\u0447. \u043d\u0430 \u043b\u0430\u0442\u044b\u043d\u0438.\n         * @returns {boolean}\n         */\n        isPluraliaTantum() {\n            return this.pluraleTantum;\n        }\n\n        getGender() {\n            return this.internalGender;\n        }\n\n        isIndeclinable() {\n            return this.indeclinable;\n        }\n\n        isAnimate() {\n            return this.animate || this.surname || this.name;\n        }\n\n        isASurname() {\n            return this.surname;\n        }\n\n        isAName() {\n            return this.name;\n        }\n\n        isATransport() {\n            return this.transport;\n        }\n    }\n\n    class LemmaException extends Error {\n    }\n\n    class StressDictionaryException extends Error {\n    }\n\n    function createLemmaNoThrow(o) {\n        let result;\n\n        if (o instanceof Lemma) {\n            result = [o, null];\n        } else {\n            result = [null, validateCreateLemma(o)];\n            if (null === result[1]) {\n                result[0] = Object.freeze(new Lemma(o));\n            }\n        }\n\n        return Object.freeze(result);\n    }\n\n    function createLemma(o) {\n        const r = createLemmaNoThrow(o);\n\n        if (r[0]) {\n            return r[0];\n        } else {\n            throw new LemmaException(r[1]);\n        }\n    }\n\n    const consonantsExceptJ = '\u0431\u0432\u0433\u0434\u0436\u0437\u043a\u043b\u043c\u043d\u043f\u0440\u0441\u0442\u0444\u0445\u0446\u0447\u0448\u0449';\n    const consonants = consonantsExceptJ + '\u0439';\n    const vowels = '\u0430\u043e\u0443\u044d\u044b\u044f\u0451\u044e\u0435\u0438';\n\n    const isVowel = character => vowels.includes(character.toLowerCase());\n\n    const isUpper = s => s === s.toUpperCase();\n\n    const upperLike = (lowerCase, pattern) => isUpper(pattern) ? lowerCase.toUpperCase() : lowerCase;\n\n    const vowelCount = s => s.split('').filter(isVowel).length;\n\n    const last = str => {\n        if (str && str.length) {\n            return str[str.length - 1];\n        } else {\n            return '';\n        }\n    };\n\n    const nLast = (str, n) => str.substring(str.length - n);\n\n    const init = s => s.substring(0, s.length - 1);\n\n    const nInit = (s, n) => s.substring(0, s.length - n);\n\n    const lastOfNInitial = (str, n) => last(nInit(str, n));\n\n    const endsWithAny = (w, arr) => arr.filter(a => w.endsWith(a)).length > 0;\n\n    const unique = a => a.filter((item, index) => a.indexOf(item) === index);\n\n    const unYo = s => s.replace('\u0451', '\u0435').replace('\u0401', '\u0415');\n\n    /**\n     * \u041d\u0435\u0447\u0442\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043c\u0435\u0436\u0434\u0443 Map \u0438 Multimap.\n     * \u041e\u0434\u043d\u043e\u0439 \u043b\u0435\u043c\u043c\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0434\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435,\n     * \u043d\u043e \u043c\u043e\u0436\u043d\u043e \u0442\u0430\u043a\u0436\u0435 \u0438\u0441\u043a\u0430\u0442\u044c \u043d\u0435\u0442\u043e\u0447\u043d\u043e\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435.\n     */\n    class Dictionary {\n        constructor() {\n            this.data = {};\n        }\n\n        put(lemma, value) {\n            const lemmaObject = createLemma(lemma);\n            const hash = unYo(lemmaObject.lower());\n\n            let homonyms = this.data[hash];\n\n            if (!(homonyms instanceof Array)) {\n                homonyms = [];\n                this.data[hash] = homonyms;\n            }\n\n            const found = homonyms.find(ls => lemmaObject.equals(ls[0]));\n\n            if (found) {\n                found[1] = value;\n            } else {\n                homonyms.push([lemmaObject, value]);\n            }\n        }\n\n        putAll(lemmaPrototype, value, joinedWordList) {\n            const list = joinedWordList.split(',');\n            for (let word of list) {\n                const lemma = Object.assign({}, lemmaPrototype);\n                lemma.text = word;\n                this.put(lemma, value);\n            }\n        }\n\n        /**\n         * @param {RussianNouns.Lemma|Object} lemma\n         * @param {boolean} fuzzy \u0415\u0441\u043b\u0438 \u043d\u0435\u0442 \u0442\u043e\u0447\u043d\u044b\u0445 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0439, \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043f\u0435\u0440\u0432\u043e\u0435 \u043d\u0435\u0442\u043e\u0447\u043d\u043e\u0435.\n         * @returns {*} \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u043b\u0438 undefined.\n         */\n        get(lemma, fuzzy) {\n            const lemmaObject = createLemma(lemma);\n            const hash = unYo(lemmaObject.lower());\n\n            const homonyms = this.data[hash];\n\n            if (homonyms instanceof Array) {\n                let found = homonyms.find(ls => lemmaObject.equals(ls[0]));\n\n                if (!found && fuzzy) {\n                    found = homonyms.find(ls => lemmaObject.fuzzyEquals(ls[0]));\n                }\n\n                if (found) {\n                    return found[1];\n                }\n            }\n        }\n\n        remove(lemma) {\n            const lemmaObject = createLemma(lemma);\n            const hash = unYo(lemmaObject.lower());\n\n            const homonyms = this.data[hash];\n\n            if (homonyms instanceof Array) {\n                this.data[hash] = homonyms.filter(ls => !lemmaObject.equals(ls[0]));\n\n                if (this.data[hash].length === 0) {\n                    delete this.data[hash];\n                }\n            }\n        }\n\n        /**\n         * \u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u044d\u0442\u043e\u043c\u0443 \u043c\u0435\u0442\u043e\u0434\u0443, \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0434\u0440\u0443\u0433\u0438\u0445 \u0446\u0435\u043b\u0435\u0439.\n         * \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u0442\u0430\u043c \u0435\u0441\u0442\u044c \u0441\u043b\u043e\u0432\u043e, \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0435\u0433\u043e \u0440\u043e\u0434 \u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438.\n         *\n         * @param word \u0421\u043b\u043e\u0432\u043e, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043f\u043e\u0438\u0441\u043a.\n         * \u0411\u0443\u043a\u0432\u0430 \u0401 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u044e\u0442\u0441\u044f.\n         * @returns {Array} \u0421\u043f\u0438\u0441\u043e\u043a \u043b\u0435\u043c\u043c.\n         */\n        find(word) {\n            const hash = unYo(word).toLowerCase();\n\n            const homonyms = this.data[hash];\n\n            if (homonyms instanceof Array) {\n                return homonyms.map(pair => pair[0]);\n            } else {\n                return [];\n            }\n        }\n    }\n\n    const LocativeFormAttribute = Object.freeze({\n        // \u0412\u043c\u0435\u0441\u0442\u0438\u043b\u0438\u0449\u0435.\n        CONTAINER: 1,\n\n        // \u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e, \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0435, \u0443\u0447\u0430\u0441\u0442\u043e\u043a \u0441\u0443\u0448\u0438.\n        LOCATION: 2,\n\n        /**\n         * \u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0449\u0430\u044f \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u0443\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443.\n         * \u0422.\u0435. \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0437\u0434\u0435\u0441\u044c \u2014 \u0432 \u0442\u043e\u043c \u0441\u043c\u044b\u0441\u043b\u0435, \u0447\u0442\u043e \u044d\u0442\u043e \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u043e\u0440\u044f\u0434\u043e\u043a\n         * \u043a\u0430\u043a\u0438\u0445-\u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432: \u043b\u044e\u0434\u0435\u0439, \u0432\u0435\u0449\u0435\u0439 \u0438 \u0442. \u043f.\n         */\n        STRUCTURE: 3,\n\n        // \u041f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c.\n        SURFACE: 4,\n        // \u041c\u0435\u0442\u0430\u0444\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u0443\u0442\u044c. \u041b\u0443\u0447 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u043d\u0430 (\u0438\u043b\u0438 \u0432) \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043b\u0435\u0436\u0430\u0442 \u0441\u043e\u0431\u044b\u0442\u0438\u044f.\n        WAY: 5,\n\n        // \u041e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0439 (\u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043b\u043e\u0441\u043a\u043e\u0439) \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c\u044e.\n        OBJECT_WITH_FUNCTIONAL_SURFACE: 6,\n\n        // \u0412\u0435\u0449\u0435\u0441\u0442\u0432\u043e (\u043e\u0431\u0432\u043e\u043b\u0430\u043a\u0438\u0432\u0430\u044e\u0449\u0435\u0435 \u0438\u043b\u0438 \u043f\u043e\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0435\u0435).\n        SUBSTANCE: 7,\n        // \u041c\u0430\u0442\u0435\u0440\u0438\u0430\u043b, \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e \u0438\u0437\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u0438\u044f, \u043f\u0440\u0438\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u0438\u044f (\u0435\u0434\u044b), \u0440\u0435\u043c\u043e\u043d\u0442\u0430.\n        RESOURCE: 8,\n\n        // \u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435, \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e, \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0434\u0435\u043b.\n        CONDITION: 9,\n        // \u0418\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0435\u043c\u043e\u0435 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 (\u0441\u0442\u0438\u0445\u0438\u0438 \u0438\u043b\u0438 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u044f/\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430).\n        EXPOSURE: 10,\n        // \u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u0438\u043b\u0438 \u043a\u0440\u0430\u0442\u043a\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435.\n        MOTION: 11,\n        // \u041c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435.\n        EVENT: 12,\n\n        WITH_ADJECTIVE: 13,\n        WITHOUT_ADJECTIVE: 14,\n\n        /**\n         * \u0423\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u044f\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0440\u0435\u043b\u0438\u0433\u0438\u043e\u0437\u043d\u043e\u043c \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0435, \u043f\u0440\u0438\u0447\u0451\u043c \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e\n         * \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0440\u0435\u043b\u0438\u0433\u0438\u0438 \u0438\u043b\u0438 \u0434\u0430\u0436\u0435 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0444\u0435\u0441\u0441\u0438\u0438.\n         * \u0422.\u0435. \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u043a\u0438\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0441 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0441\u0442\u043e\u0440\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e,\n         * \u0438\u043d\u0430\u0447\u0435 \u043c\u043e\u0436\u043d\u043e \u0441\u043a\u0430\u0437\u0430\u043d\u0443\u0442\u044c \u0447\u0442\u043e-\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0441\u0442\u0440\u0430\u043d\u043d\u043e\u0435.\n         */\n        RELIGIOUS: 15\n    });\n\n    class LocativeForm {\n        /**\n         * @param {string} preposition \u041f\u0440\u0435\u0434\u043b\u043e\u0433.\n         * @param {string} word \u0424\u043e\u0440\u043c\u0430 \u0441\u043b\u043e\u0432\u0430.\n         * @param {array} attributes \u041f\u0440\u0435\u0434\u0438\u043a\u0430\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0441\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u043c\u0438.\n         */\n        constructor(preposition, word, attributes) {\n            this.preposition = preposition;\n            this.word = word;\n            this.attributes = attributes;\n        }\n    }\n\n    /**\n     * \u0414\u043b\u044f \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f.\n     */\n    const LocativeDeclensionType = Object.freeze({\n        /**\n         * \u0414\u043b\u044f \u043e\u0447\u0435\u043d\u044c \u043e\u0441\u043e\u0431\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432, \u043a\u043e\u0433\u0434\u0430 \u0444\u043e\u0440\u043c\u0430 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u043d\u043e\u0433\u043e \u043f\u0430\u0434\u0435\u0436\u0430\n         * \u0432 \u043b\u043e\u043a\u0430\u0442\u0438\u0432\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0438\u0437 \u043f\u0440\u0430\u0432\u0438\u043b.\n         * \u0422.\u0435. \u0432\u043e\u0442 \u0435\u0441\u0442\u044c \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u0443 \u043e\u0441\u043e\u0431\u043e\u0439 \u0444\u043e\u0440\u043c\u044b \u043b\u043e\u043a\u0430\u0442\u0438\u0432\u0430 \u0441 \u043f\u0440\u0435\u0434\u043b\u043e\u0433\u043e\u043c,\n         * \u043d\u043e \u0435\u0441\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0435\u0449\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u0438\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e,\n         * \u0444\u043e\u0440\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043d\u043e\u0432\u0430 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u0432 \u043e\u0431\u044b\u0447\u043d\u0443\u044e.\n         */\n        PREPOSITIONAL: 1,\n\n        // \u041e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f -\u0443/-\u044e.\n        U_SUFFIX: 2\n    });\n\n    /**\n     * \u0414\u043b\u044f \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f.\n     * \u041f\u0440\u0430\u0432\u0438\u043b\u043e, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043b\u043e\u043a\u0430\u0442\u0438\u0432, \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u043a\u0438 \u0438 \u043f\u0440\u0435\u0434\u043b\u043e\u0433\u043e\u0432.\n     * \u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u2014 \u044d\u0442\u043e \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0441\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u043c\u0438.\n     */\n    class LocativeConfig {\n        constructor(preposition, declensionType, attributes) {\n            this.preposition = preposition;\n            this.declensionType = declensionType;\n            this.attributes = attributes;\n        }\n    }\n\n    const locativeDictionary = Object.freeze(makeDefaultLocativeDictionary())\n\n    const API = {\n        Case: Case,\n        Gender: Gender,\n\n        CASES: CASES,\n\n        LemmaException: LemmaException,\n        StressDictionaryException: StressDictionaryException,\n\n        /**\n         * \u042d\u0442\u043e \u0435\u0449\u0435 \u043d\u0435 \u0441\u0442\u0430\u0431\u0438\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c API.\n         *\n         * \u041f\u0440\u0435\u0434\u0438\u043a\u0430\u0442\u044b, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043c\u043e\u0436\u043d\u043e \u0443\u0437\u043d\u0430\u0442\u044c, \u0443\u043c\u0435\u0441\u0442\u043d\u043e \u043b\u0438\n         * \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u044f\u0442\u044c \u0442\u0443 \u0438\u043b\u0438 \u0438\u043d\u0443\u044e \u0444\u043e\u0440\u043c\u0443 \u043b\u043e\u043a\u0430\u0442\u0438\u0432\u0430.\n         * \u0422\u0443\u0442 \u0432\u0437\u044f\u0442\u044b \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u044b (\u0441 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u043c\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438)\n         * \u0438\u0437 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u00ab\u041a \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u043a\u0435 \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u043b\u043e\u043a\u0430\u0442\u0438\u0432\u0430\u00bb.\n         * \u0417\u0430\u0442\u0435\u043c \u043a \u043d\u0438\u043c \u0435\u0449\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u0438\u044f.\n         */\n        LocativeFormAttribute: LocativeFormAttribute,\n\n        /**\n         * \u0424\u043e\u0440\u043c\u0430 \u0441\u043b\u043e\u0432\u0430 \u0432 \u043c\u0435\u0441\u0442\u043d\u043e\u043c \u043f\u0430\u0434\u0435\u0436\u0435 (\u0435\u0434. \u0447.) \u0441 \u043f\u0440\u0435\u0434\u043b\u043e\u0433\u043e\u043c\n         * \u0438 \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0418.\n         * \u0422.\u0435. \u0435\u0441\u043b\u0438 \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u0438\u043d \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u043a\u0430\u043a \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442 \u043b\u043e\u0436\u0435\u043d,\n         * \u0442\u043e \u044d\u0442\u0430 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044f \u0444\u043e\u0440\u043c\u044b \u0441\u043b\u043e\u0432\u0430 \u0438 \u043f\u0440\u0435\u0434\u043b\u043e\u0433\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430.\n         */\n        LocativeForm: LocativeForm,\n\n        /**\n         * \u041d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0444\u043e\u0440\u043c\u0430 \u0441\u043b\u043e\u0432\u0430.\n         * \u041e\u0431\u044a\u0435\u043a\u0442\u044b \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0442\u0430\u043a\u0436\u0435 \u0433\u0440\u0430\u043c\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e,\n         * \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0443\u044e \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438 \u0441\u043b\u043e\u0432\u043e\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438 \u0440\u0430\u0437\u043b\u0438\u0447\u0430\u0442\u044c \u043e\u043c\u043e\u043d\u0438\u043c\u044b.\n         *\n         * \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 {@link RussianNouns.createLemma}\n         * \u0438\u043b\u0438 {@link RussianNouns.createLemmaNoThrow} \u0432\u043c\u0435\u0441\u0442\u043e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430.\n         */\n        Lemma: Lemma,\n\n        /**\n         * \u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0441 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043b\u0435\u043c\u043c.\n         * \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u2014 \u0443\u0436\u0435 \u043b\u0435\u043c\u043c\u0430, \u0432\u0435\u0440\u043d\u0435\u0442 \u0442\u043e\u0442 \u0436\u0435 \u043e\u0431\u044a\u0435\u043a\u0442, \u0430 \u043d\u0435 \u043a\u043e\u043f\u0438\u044e.\n         *\n         * \u041b\u0435\u043c\u043c\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u043a\u043e\u0434\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u043c\u043d\u043e\u0433\u043e \u0440\u0430\u0437, \u0441\u043b\u0435\u0434\u0443\u0435\u0442\n         * \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0438\u043b\u0438 {@link RussianNouns.createLemmaNoThrow},\n         * \u0438\u043d\u0430\u0447\u0435 \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u043d\u0435\u044f\u0432\u043d\u043e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0432\u044b\u0437\u043e\u0432 \u043b\u044e\u0431\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n         * \u0438\u043b\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \u0432 \u044d\u0442\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435.\n         *\n         * @param {RussianNouns.Lemma|Object} o\n         * @throws {RussianNouns.LemmaException} \u041e\u0448\u0438\u0431\u043a\u0438 \u0438\u0437 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430 \u043b\u0435\u043c\u043c\u044b.\n         * @returns {RussianNouns.Lemma} \u0418\u043c\u043c\u0443\u0442\u0430\u0431\u0435\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442.\n         */\n        createLemma: createLemma,\n\n        /**\n         * \u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0441 \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043b\u0435\u043c\u043c.\n         * \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u2014 \u0443\u0436\u0435 \u043b\u0435\u043c\u043c\u0430, \u0432\u0435\u0440\u043d\u0435\u0442 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0442\u043e\u0442 \u0436\u0435 \u043e\u0431\u044a\u0435\u043a\u0442, \u0430 \u043d\u0435 \u043a\u043e\u043f\u0438\u044e.\n         *\n         * \u041b\u0435\u043c\u043c\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u043a\u043e\u0434\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u043c\u043d\u043e\u0433\u043e \u0440\u0430\u0437, \u0441\u043b\u0435\u0434\u0443\u0435\u0442\n         * \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u044d\u0442\u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0438\u043b\u0438 {@link RussianNouns.createLemma},\n         * \u0438\u043d\u0430\u0447\u0435 \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u043d\u0435\u044f\u0432\u043d\u043e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0432\u044b\u0437\u043e\u0432 \u043b\u044e\u0431\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n         * \u0438\u043b\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \u0432 \u044d\u0442\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435.\n         *\n         * @param {RussianNouns.Lemma|Object} o\n         * @returns {array} \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 Go-\u0441\u0442\u0438\u043b\u0435: \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0438\u043b\u0438 null, \u0441\u0442\u0440\u043e\u043a\u0430 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043e\u0448\u0438\u0431\u043a\u0438 \u0438\u043b\u0438 null.\n         */\n        createLemmaNoThrow: createLemmaNoThrow,\n\n        /**\n         * \u0421\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e.\n         *\n         * \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f:\n         * + -1 \u2014 \u043d\u0435\u0441\u043a\u043b\u043e\u043d\u044f\u0435\u043c\u044b\u0435, \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u0437\u0430\u0438\u043c\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0441\u043b\u043e\u0432\u0430;\n         * + 0 \u2014 \u0440\u0430\u0437\u043d\u043e\u0441\u043a\u043b\u043e\u043d\u044f\u0435\u043c\u044b\u0435 \"\u043f\u0443\u0442\u044c\" \u0438 \"\u0434\u0438\u0442\u044f\";\n         * + 1 \u2014 \u043c\u0443\u0436\u0441\u043a\u043e\u0439 \u0438 \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0440\u043e\u0434 \u0431\u0435\u0437 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f;\n         * + 2 \u2014 \u0441\u043b\u043e\u0432\u0430 \u043d\u0430 \"\u0430\", \"\u044f\" (\u043c., \u0436. \u0438 \u043e\u0431\u0449\u0438\u0439 \u0440\u043e\u0434);\n         * + 3 \u2014 \u0436\u0435\u043d. \u0440\u043e\u0434 \u0431\u0435\u0437 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f; \u0441\u043b\u043e\u0432\u0430, \u043e\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u043d\u0430 \"\u043c\u044f\".\n         *\n         * \u041f\u043e\u043d\u044f\u0442\u0438\u0435 \"\u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435\" \u0441\u043b\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043a \u0441\u043b\u043e\u0432\u0430\u043c pluralia tantum,\n         * \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u044f \u043d\u0438\u0445 undefined.\n         *\n         * @param {RussianNouns.Lemma|Object} lemma\n         * @returns {number|undefined}\n         */\n        getDeclension: lemma => {\n            return getDeclension(API.createLemma(lemma));\n        },\n\n        /**\n         * \u00ab\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u201e\u043f\u0435\u0440\u0432\u043e\u0435 \u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435\u201c \u0438 \u201e\u0432\u0442\u043e\u0440\u043e\u0435 \u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435\u201c \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435 \u0438 \u0432\u0443\u0437\u043e\u0432\u0441\u043a\u043e\u043c \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0438\u0438\n         * \u043d\u0435\u0440\u0435\u0434\u043a\u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u044f\u044e\u0442\u0441\u044f \u0437\u0430 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u0440\u0430\u0437\u0440\u044f\u0434\u0430\u043c\u0438 \u0441\u043b\u043e\u0432. \u0412 \u0448\u043a\u043e\u043b\u044c\u043d\u044b\u0445 \u0443\u0447\u0435\u0431\u043d\u0438\u043a\u0430\u0445 \u043f\u0435\u0440\u0432\u044b\u043c \u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435\u043c \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435\n         * \u0441\u043b\u043e\u0432 \u0441 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u0435\u043c -\u0430 (\u0432\u043e\u0434\u0430), \u0432\u043e \u043c\u043d\u043e\u0433\u0438\u0445 \u0432\u0443\u0437\u043e\u0432\u0441\u043a\u0438\u0445 \u043f\u043e\u0441\u043e\u0431\u0438\u044f\u0445 \u0438 \u0430\u043a\u0430\u0434\u0435\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0433\u0440\u0430\u043c\u043c\u0430\u0442\u0438\u043a\u0430\u0445 \u2014 \u0441\u043b\u043e\u0432 \u043c\u0443\u0436\u0441\u043a\u043e\u0433\u043e\n         * \u0440\u043e\u0434\u0430 (\u0441\u0442\u043e\u043b) \u0438 \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u0440\u043e\u0434\u0430 (\u043e\u043a\u043d\u043e)\u00bb.\n         *\n         * \u0421\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a. \u041c\u043e\u0440\u0444\u043e\u043b\u043e\u0433\u0438\u044f \u2014 \u041a\u0430\u043c\u044b\u043d\u0438\u043d\u0430 \u0410.\u0410., 1999, \u0441\u0442\u0440. 67\n         *\n         * \u041f\u043e\u0447\u0442\u0438 \u0432\u0435\u0437\u0434\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u0412\u0438\u043a\u0438\u0441\u043b\u043e\u0432\u0430\u0440\u0435.\n         * \u0418\u043d\u043e\u0433\u0434\u0430 \u0432 \u0448\u043a\u043e\u043b\u044c\u043d\u044b\u0445 \u0443\u0447\u0435\u0431\u043d\u0438\u043a\u0430\u0445 10 \u0441\u043b\u043e\u0432 \u043d\u0430 \u00ab-\u043c\u044f\u00bb \u043e\u0442\u043d\u043e\u0441\u044f\u0442 \u043a \u0440\u0430\u0437\u043d\u043e\u0441\u043a\u043b\u043e\u043d\u044f\u0435\u043c\u044b\u043c.\n         * \u0417\u0434\u0435\u0441\u044c \u044d\u0442\u043e \u0442\u0440\u0435\u0442\u044c\u0435 \u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435.\n         *\n         * \u041f\u043e\u043d\u044f\u0442\u0438\u0435 \"\u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435\" \u0441\u043b\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043a \u0441\u043b\u043e\u0432\u0430\u043c pluralia tantum,\n         * \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0434\u043b\u044f \u043d\u0438\u0445 undefined.\n         *\n         * @param lemma\n         * @returns {number} \u00ab\u0428\u043a\u043e\u043b\u044c\u043d\u044b\u0439\u00bb \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u044f:\n         * \u00ab\u0432\u043e\u0434\u0430\u00bb \u2014 1; \u00ab\u0441\u0442\u043e\u043b\u00bb, \u00ab\u043e\u043a\u043d\u043e\u00bb \u2014 2,\n         * \u0440\u0430\u0437\u043d\u043e\u0441\u043a\u043b\u043e\u043d\u044f\u0435\u043c\u044b\u0435 \u2014 0; \u043d\u0435\u0441\u043a\u043b\u043e\u043d\u044f\u0435\u043c\u044b\u0435 \u2014 \u043c\u0438\u043d\u0443\u0441 \u0435\u0434\u0438\u043d\u0438\u0446\u0430.\n         */\n        getSchoolDeclension: lemma => {\n            const d = getDeclension(API.createLemma(lemma));\n\n            if (d === 1) {\n                return 2;\n            } else if (d === 2) {\n                return 1;\n            } else {\n                return d;\n            }\n        },\n\n        FIXED_STEM_STRESS: 'SSSSSSS-SSSSSS',\n        FIXED_ENDING_STRESS: 'EEEEEEE-EEEEEE',\n\n        /**\n         * \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0443\u0434\u0430\u0440\u0435\u043d\u0438\u0439. \u0412 \u043d\u0435\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0432\u043d\u043e\u0441\u0438\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0440\u0430\u043d\u0442\u0430\u0439\u043c\u0435,\n         * \u0438 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432\u043b\u0438\u044f\u0442\u044c \u043d\u0430 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0434\u0432\u0438\u0436\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439\n         * \u0432\u043b\u0430\u0434\u0435\u0435\u0442 \u044d\u0442\u0438\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u0451\u043c.\n         */\n        StressDictionary: class StressDictionary extends Dictionary {\n\n            /**\n             * @param {RussianNouns.Lemma|Object} lemma\n             * @param {string} settings \u0421\u0442\u0440\u043e\u043a\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 1234567-123456.\n             * \u0414\u043e \u0434\u0435\u0444\u0438\u0441\u0430 \u2014 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e, \u043f\u043e\u0441\u043b\u0435 \u0434\u0435\u0444\u0438\u0441\u0430 \u2014 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435.\n             * \u041d\u043e\u043c\u0435\u0440 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u2014 \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0434\u0435\u0436\u0430 \u0432 {@link RussianNouns.CASES}.\n             * \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430:\n             * S \u2014 \u0443\u0434\u0430\u0440\u0435\u043d\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0443;\n             * s \u2014 \u0447\u0430\u0449\u0435 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0443;\n             * b \u2014 \u043e\u0431\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u044f\u044e\u0442\u0441\u044f \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e \u0447\u0430\u0441\u0442\u043e;\n             * e \u2014 \u0447\u0430\u0449\u0435 \u043d\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u0435;\n             * E \u2014 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u0435.\n             * @throws {RussianNouns.StressDictionaryException}\n             */\n            put(lemma, settings) {\n\n                // \"b\" \u0437\u043d\u0430\u0447\u0438\u0442 \"both\".\n\n                if (!(settings.match(/^[SsbeE]{7}-[SsbeE]{6}$/))) {\n                    throw new API.StressDictionaryException('Bad settings format.');\n                }\n\n                super.put(lemma, settings);\n            }\n\n            hasStressedEndingSingular(lemma, grCase) {\n                const caseIndex = CASES.indexOf(grCase);\n\n                if (caseIndex >= 0) {\n                    const v = this.get(lemma, true);\n\n                    if (v) {\n                        const singular = v.split('-')[0];\n\n                        if (singular[caseIndex] === 'E') {\n                            return [true];\n                        } else if (singular[caseIndex] === 'e') {\n                            return [true, false];\n                        } else if (singular[caseIndex] === 'b') {\n                            return [false, true];\n                        } else if (singular[caseIndex] === 's') {\n                            return [false, true];\n                        } else {\n                            return [false];\n                        }\n                    }\n                }\n\n                return []; // \u0432\u043c\u0435\u0441\u0442\u043e undefined\n            }\n\n            hasStressedEndingPlural(lemma, grCase) {\n                const caseIndex = CASES.indexOf(grCase);\n\n                if (caseIndex >= 0 && caseIndex < 6) {\n                    const v = this.get(lemma, true);\n\n                    if (v) {\n                        const plural = v.split('-')[1];\n\n                        if (plural[caseIndex] === 'E') {\n                            return [true];\n                        } else if (plural[caseIndex] === 'e') {\n                            return [true, false];\n                        } else if (plural[caseIndex] === 'b') {\n                            return [false, true];\n                        } else if (plural[caseIndex] === 's') {\n                            return [false, true];\n                        } else {\n                            return [false];\n                        }\n                    }\n                }\n\n                return []; // \u0432\u043c\u0435\u0441\u0442\u043e undefined\n            }\n        },\n        Engine: class Engine {\n\n            constructor() {\n\n                /**\n                 * @description \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0443\u0434\u0430\u0440\u0435\u043d\u0438\u0439. \u0415\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432 \u0440\u0430\u043d\u0442\u0430\u0439\u043c\u0435.\n                 * @type {API.StressDictionary}\n                 */\n                this.sd = makeDefaultStressDictionary();\n\n            }\n\n            /**\n             *\n             * @param {RussianNouns.Lemma|Object} lemma \u0421\u043b\u043e\u0432\u043e \u0432 \u0438\u043c\u0435\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043c \u043f\u0430\u0434\u0435\u0436\u0435 \u0441 \u043c\u0435\u0442\u0430\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439.\n             * @param {string} grammaticalCase \u041f\u0430\u0434\u0435\u0436.\n             * @param {string} pluralForm \u0424\u043e\u0440\u043c\u0430 \u0432\u043e \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u043c \u0447\u0438\u0441\u043b\u0435.\n             * \u0415\u0441\u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u0430, \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0431\u0443\u0434\u0435\u0442 \u0442\u043e\u0436\u0435 \u0432\u043e \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u043c.\n             * \u0423 pluralia tantum \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f.\n             * @returns {Array} \u0421\u043f\u0438\u0441\u043e\u043a, \u0442.\u043a. \u0431\u044b\u0432\u0430\u044e\u0442 \u0432\u0442\u043e\u0440\u044b\u0435 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0432\u0438\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0434\u0435\u0436\u0438. \u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435\n             * \u0436\u0435\u043d\u0441\u043a\u043e\u0433\u043e \u0440\u043e\u0434\u0430 \u0432 \u0442\u0432\u043e\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043c \u043c\u043e\u0433\u0443\u0442 \u0438\u043c\u0435\u0442\u044c \u043a\u0430\u043a \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f -\u0435\u0439 -\u043e\u0439, \u0442\u0430\u043a \u0438 -\u0435\u044e -\u043e\u044e.\n             * \u0412\u0442\u043e\u0440\u043e\u0439 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u043d\u044b\u0439 \u043f\u0430\u0434\u0435\u0436 (\u043c\u0435\u0441\u0442\u043d\u044b\u0439 \u043f\u0430\u0434\u0435\u0436, \u043b\u043e\u043a\u0430\u0442\u0438\u0432) \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u0432 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u043d\u044b\u0439.\n             */\n            decline(lemma, grammaticalCase, pluralForm) {\n                return declineAsList(this, API.createLemma(lemma), grammaticalCase, pluralForm);\n            }\n\n            /**\n             * @param {RussianNouns.Lemma|Object} lemma\n             * @returns {Array}\n             */\n            pluralize(lemma) {\n                const o = API.createLemma(lemma);\n\n                if (o.isPluraleTantum()) {\n                    return [o.text()];\n                } else {\n                    return pluralize(this, o);\n                }\n            }\n\n            /**\n             * \u042d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c!\n             * \u0417\u0430\u0442\u043e\u0447\u0435\u043d\u043e \u043f\u043e\u0434 \u0435\u0434. \u0447\u0438\u0441\u043b\u043e.\n             *\n             * \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u044b \u0441\u043b\u043e\u0432 \u0441 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438 \u0438\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f (\u0442\u0430\u043c \u0441\u043c\u0435\u0448\u0430\u043d\u044b\n             * \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u044b \u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u0431\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430).\n             *\n             * \u042d\u0442\u0438 \u0442\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u043c\u044b\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u0445 API.LocativeForm \u043a\u043e\u043d\u044a\u044e\u043d\u043a\u0442\u0438\u0432\u043d\u044b.\n             * \u0422.\u0435. \u0447\u0442\u043e\u0431\u044b \u0444\u043e\u0440\u043c\u0430 \u0441\u043b\u043e\u0432\u0430 \u0441 \u043f\u0440\u0435\u0434\u043b\u043e\u0433\u043e\u043c \u043c\u043e\u0433\u043b\u0430 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f, \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u043c\u0438\n             * \u0432\u0441\u0435 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442\u044b (\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b, \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f).\n             * \u0418 \u043d\u0430\u043f\u0440\u043e\u0442\u0438\u0432, \u0435\u0441\u043b\u0438 \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u0438\u043d \u0438\u0437 \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442\u043e\u0432 \u043b\u043e\u0436\u0435\u043d, \u043d\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435.\n             * \u041e\u0434\u043d\u0430\u043a\u043e, \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0432\u0441\u0435 \u0438\u0441\u0442\u0438\u043d\u043d\u044b, \u044d\u0442\u043e \u0435\u0449\u0435 \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0434\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f.\n             * \u0415\u0449\u0435 \u0432 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u043c \u0441\u043f\u0438\u0441\u043a\u0435 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f,\n             * \u0442.\u0435. \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0433\u043e \u0432\u0441\u0435 \u0442\u0435 \u0436\u0435 \u043f\u0440\u0435\u0434\u0438\u043a\u0430\u0442\u044b \u0441 \u0435\u0449\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438, \u0442\u043e\u0436\u0435 \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u043c\u0438.\n             * \u0412 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e \u0443\u0442\u043e\u0447\u043d\u0451\u043d\u043d\u043e\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442 \u0442\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u044b \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u043c.\n             *\n             * @param {RussianNouns.Lemma|Object} lemma\n             * @returns {Array} \u041c\u0430\u0441\u0441\u0438\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0442\u0438\u043f\u0430 API.LocativeForm.\n             * \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c, \u0435\u0441\u043b\u0438 \u043c\u0435\u0441\u0442\u043d\u044b\u0439 \u043f\u0430\u0434\u0435\u0436 \u0432 \u0435\u0434. \u0447. \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442 \u0441 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u043d\u044b\u043c \u0438\u043b\u0438 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0441\u043c\u044b\u0441\u043b\u0430.\n             */\n            getLocativeForms(lemma) {\n                const engine = this;\n                const o = API.createLemma(lemma);\n                const declension = getDeclension(o);\n\n                if (declension && (declension >= 0)) {\n                    const configs = locativeDictionary.get(o, false);\n                    if (configs instanceof Array) {\n                        return configs.map(c => (new LocativeForm(\n                            c.preposition,\n                            toLocativeSingular(engine, declension, o, c.declensionType),\n                            c.attributes\n                        )));\n                    }\n                }\n\n                return [];\n            }\n        }\n    };\n\n    function makeDefaultStressDictionary() {\n        const d = new API.StressDictionary();\n        const m = Object.freeze({gender: Gender.MASCULINE});\n        const ma = Object.freeze({gender: Gender.MASCULINE, animate: true});\n        const f = Object.freeze({gender: Gender.FEMININE});\n        const putM = (settings, word) => d.putAll(m, settings, word);\n\n        d.putAll(m,\n            API.FIXED_STEM_STRESS,\n            '\u0431\u0440\u0451\u0445,\u0434\u0451\u0440\u043d,\u0438\u0434\u0438\u0448,\u0438\u043c\u0438\u0434\u0436,\u043c\u0435\u0434');\n\n        d.putAll({pluraleTantum: true},\n            API.FIXED_STEM_STRESS,\n            '\u043d\u043e\u0436\u043d\u044b');\n\n        d.putAll(m,\n            'SSSSSSS-EEEEEE',\n            '\u0430\u0434\u0440\u0435\u0441,\u0432\u0435\u043a,\u0432\u0435\u0447\u0435\u0440,\u0433\u043e\u0440\u043e\u0434,\u0434\u0435\u0442\u0434\u043e\u043c,\u043f\u043e\u0435\u0437\u0434');\n\n        d.putAll(m,\n            'SSSSSSE-EEEEEE',\n            '\u0431\u0435\u0440\u0435\u0433,\u0431\u043e\u043a,\u0432\u0435\u0441,\u043b\u0435\u0441,\u0441\u043d\u0435\u0433,\u0434\u043e\u043c,\u043a\u0430\u0442\u0435\u0440,\u0441\u0447\u0451\u0442,\u043c\u0451\u0434');\n\n        d.putAll(ma,\n            API.FIXED_STEM_STRESS,\n            '\u0431\u0430\u043b\u0430\u043d\u0441\u0451\u0440,\u0448\u043e\u0444\u0451\u0440');\n\n        d.putAll(m,\n            'SSSSSSS-bbbbbb',\n            '\u0432\u0435\u043a\u0441\u0435\u043b\u044c,\u0432\u0435\u0442\u0435\u0440');\n\n        putM('SSSSSSE-ESEEEE', '\u0433\u043b\u0430\u0437');\n        putM('SSSSSSE-bEEbEE', '\u0433\u043e\u0434');\n        putM('SSSSSSb-bbbbbb', '\u0446\u0435\u0445');\n\n        putM('SSSSSSE-EEEEEE', '\u0441\u0447\u0451\u0442'); // \u043d\u0435 \u043f\u0443\u0442\u0430\u0442\u044c \u0441\u043e \u0441\u0447\u0451\u0442\u0430\u043c\u0438 (p.t.)\n\n        d.putAll({gender: Gender.NEUTER},\n            'EEEEEEE-SSSSSS',\n            '\u0442\u0435\u0441\u043b\u043e,' +\n            '\u0441\u0442\u0435\u043a\u043b\u043e,\u0430\u0432\u0442\u043e\u0441\u0442\u0435\u043a\u043b\u043e,\u0431\u0440\u043e\u043d\u0435\u0441\u0442\u0435\u043a\u043b\u043e,\u043e\u0440\u0433\u0441\u0442\u0435\u043a\u043b\u043e,' +\n            '\u043f\u0435\u043d\u043e\u0441\u0442\u0435\u043a\u043b\u043e,\u0441\u043c\u0430\u0440\u0442-\u0441\u0442\u0435\u043a\u043b\u043e,\u0441\u043f\u0435\u0446\u0441\u0442\u0435\u043a\u043b\u043e,' +\n            '\u0431\u0435\u0434\u0440\u043e,\u0431\u0435\u0440\u0446\u043e,\u0431\u043b\u0435\u0441\u043d\u0430,\u0447\u0435\u043b\u043e,\u0441\u0442\u0435\u0433\u043d\u043e,\u0441\u0442\u0435\u0431\u043b\u043e');\n\n        d.putAll(f, 'EEEbEEE-SSESEE', '\u0449\u0435\u043a\u0430');\n        d.putAll(f, 'EEEEEEE-SSESEE', '\u0441\u043b\u0435\u0437\u0430');\n\n        // \u0423 \u043c\u0435\u043d\u044f \u043d\u0435\u0442 \u043e\u0442\u0432\u0435\u0442\u0430, \u043f\u043e\u0447\u0435\u043c\u0443 \u0443 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0441\u043b\u043e\u0432 \u043d\u0430 \u0436/\u0448/\u0447/\u0446\n        // \u0443\u0434\u0430\u0440\u0435\u043d\u0438\u044f \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u043d\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f.\n        // \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u044d\u0442\u043e \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u0435\u0442 \u0441 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0441\u043b\u043e\u0433\u043e\u0432 \u0432 \u043a\u043e\u0440\u043d\u0435.\n        // \u0412\u043e\u043e\u0431\u0449\u0435, \u043f\u043e\u0447\u0442\u0438 \u0432\u043e \u0432\u0441\u0435\u0445 \u0441\u043b\u043e\u0432\u0430\u0445 \u043d\u0430 \u0436/\u0448/\u0447/\u0446 \u0432 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435\n        // \u0432 \u0442\u0432\u043e\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043c \u043f\u0430\u0434\u0435\u0436\u0435 \u0443\u0434\u0430\u0440\u0435\u043d\u0438\u0435 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0443 \u0441\u043b\u043e\u0432\u0430.\n\n        // \u0413\u0434\u0435-\u0442\u043e \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 \u044d\u0442\u0438\u0445 \u0441\u043b\u043e\u0432 \u043e\u0447\u0435\u043d\u044c \u0448\u0438\u0440\u043e\u043a\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f,\n        // \u0434\u0440\u0443\u0433\u0430\u044f \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 \u2014 \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0438\u0435, \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435, \u043f\u0440\u043e\u0441\u0442\u043e\u0440\u0435\u0447\u043d\u044b\u0435, \u0433\u0440\u0443\u0431\u044b\u0435 \u0438 \u0442.\u043f.\n\n        // \u0412 \u044d\u0442\u043e\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u0435 \u0432\u043e\u0448\u043b\u0438 \u0442\u043e\u043f\u043e\u043d\u0438\u043c\u044b, \u0438\u043c\u0435\u043d\u0430, \u0444\u0430\u043c\u0438\u043b\u0438\u0438, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u0430\n        // \u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0436\u0438\u0442\u0435\u043b\u0435\u0439 \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0443\u043d\u043a\u0442\u043e\u0432.\n\n        d.putAll(m,\n            'SbbSbbb-bbbbbb',\n            '\u0433\u0440\u043e\u0448,\u0448\u043f\u0440\u0438\u0446');\n\n        d.putAll(m,\n            'SssSsss-ssssss',\n            '\u043a\u0438\u0448\u043c\u0438\u0448,' +\n            '\u043a\u0440\u044f\u0436,' +  // \u043e\u0431\u0440\u0443\u0431\u043e\u043a \u0431\u0440\u0435\u0432\u043d\u0430; \u0433\u0440\u044f\u0434\u0430 \u0445\u043e\u043b\u043c\u043e\u0432\n            '\u0441\u043b\u0435\u0448,\u0441\u043b\u044d\u0448');\n\n        d.putAll(ma,\n            'Sssssss-ssssss',\n            '\u043f\u0430\u043d\u044b\u0447');\n\n        putM('SEESeEE-EEEEEE', '\u0441\u0442\u0435\u043b\u043b\u0430\u0436');\n        putM('SeeSeee-eeeeee', '\u0448\u0438\u043d\u043e\u043c\u043e\u043d\u0442\u0430\u0436');\n\n        d.putAll(m,\n            'SEESEEE-EEEEEE',\n            '\u0431\u0430\u0433\u0430\u0436,' +\n            // \u0412\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0442\u0441\u044f \u0432 \u0437\u0430\u043a\u043e\u043d\u0430\u0445, \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445/\u043f\u0440\u0430\u0432\u0438\u043b\u0430\u0445 \u0434\u043b\u044f \u043f\u0430\u0441\u0430\u0436\u0438\u0440\u043e\u0432.\n            '\u0433\u0440\u0443\u0437\u043e\u0431\u0430\u0433\u0430\u0436,\u0442\u043e\u0432\u0430\u0440\u043e\u0431\u0430\u0433\u0430\u0436,' +\n            '\u0431\u0430\u0433\u0440\u0435\u0446,\u0431\u0430\u0440\u044b\u0448,\u0431\u0435\u043b\u044f\u0448,\u0431\u0435\u0440\u0434\u044b\u0448,\u0431\u0438\u0447,' +\n            '\u0431\u0430\u043d\u0434\u0430\u0436,\u0431\u043b\u0438\u043d\u0434\u0430\u0436,\u0431\u043e\u0440\u0449,\u0431\u0443\u0431\u0435\u043d\u0435\u0446,\u0431\u0443\u0436,' +\n            '\u0432\u0430\u043b\u0435\u0446,\u0432\u0430\u0440\u0435\u043d\u0435\u0446,\u0432\u0435\u043d\u0435\u0446,\u0432\u0438\u0440\u0430\u0436,\u0432\u0438\u0442\u0440\u0430\u0436,\u0432\u043e\u043b\u043e\u0441\u0435\u043d\u0435\u0446,\u0432\u043e\u043b\u0447\u0435\u0446,\u0432\u043e\u043b\u044c\u0442\u0430\u0436,' +\n            '\u0432\u043e\u0440\u043e\u043d\u0435\u0446,\u0433\u0430\u043b\u0434\u0451\u0436,\u0433\u0430\u043c\u043c\u0430-\u043b\u0443\u0447,\u0433\u043d\u0438\u043b\u0435\u0446,' +\n            '\u0433\u0430\u0440\u0430\u0436,\u0430\u0432\u0442\u043e\u0433\u0430\u0440\u0430\u0436,' +\n            '\u0433\u043e\u043b\u0435\u0446,' + // \u0433\u043e\u0440\u043d\u0430\u044f \u0432\u0435\u0440\u0448\u0438\u043d\u0430\n            '\u0433\u043e\u043b\u043e\u0432\u0430\u0447,' + // \u0433\u0440\u0438\u0431\n            '\u0433\u043e\u043b\u044b\u0448,' + // \u043a\u0430\u043c\u0435\u043d\u044c\n            '\u0433\u043e\u0440\u0431\u0430\u0447,' + // \u0440\u0443\u0431\u0430\u043d\u043e\u043a\n            '\u0433\u043e\u0440\u043b\u0430\u0447,' + // \u043a\u0440\u0438\u043d\u043a\u0430/\u043a\u0440\u044b\u043d\u043a\u0430/\u0433\u043b\u0435\u0447\u0438\u043a\n            '\u0433\u043e\u043b\u0443\u0431\u0435\u0446,\u0433\u0440\u0430\u0431\u0451\u0436,' +\n            '\u0433\u0443\u0436,\u0433\u0443\u043b\u044f\u0448,\u0434\u0432\u043e\u0440\u0435\u0446,\u0434\u0435\u043b\u0451\u0436,\u0434\u0435\u0440\u0433\u0430\u0447,\u0434\u043e\u043b\u0431\u0451\u0436,\u0434\u043e\u043b\u0433\u0443\u043d\u0435\u0446,' +\n            '\u0434\u0440\u0430\u0447,' + // \u043f\u043b\u043e\u0442\u043d\u0438\u0446\u043a\u0438\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\n            '\u0451\u0440\u0448,\u0437\u0443\u0431\u0435\u0446,\u0437\u0443\u0431\u0440\u0451\u0436,' +\n            '\u0438\u0437\u0440\u0430\u0437\u0435\u0446,\u043a\u0430\u043b\u0430\u0447,\u043a\u043b\u044e\u0447,' +\n            '\u043a\u0430\u043c\u044b\u0448,' + // \u0440\u0430\u0441\u0442\u0435\u043d\u0438\u0435\n            '\u043a\u0430\u0440\u0430\u043d\u0434\u0430\u0448,\u043a\u0430\u0440\u0442\u0451\u0436,\u043a\u0435\u0434\u0440\u0430\u0447,\u043a\u0438\u0440\u043f\u0438\u0447,' +\n            '\u043a\u043b\u0438\u043d\u0435\u0446,' + // \u0449\u0435\u0431\u0435\u043d\u044c\n            '\u043a\u043e\u0432\u0448,\u043a\u043e\u0440\u0435\u0446,\u043a\u043e\u0437\u0435\u043b\u0435\u0446,\u043a\u043e\u043d\u0435\u0446,\u043a\u043e\u0441\u0442\u0440\u0435\u0446,' +\n            '\u043a\u043e\u043f\u0430\u0447,' + // \u043e\u0440\u0443\u0434\u0438\u0435\n            '\u043a\u043e\u0440\u0436,\u043a\u0440\u0435\u043f\u0451\u0436,\u043a\u0440\u0435\u0441\u0442\u0435\u0446,\u043a\u0440\u0443\u0433\u043b\u044b\u0448,\u043a\u0440\u0443\u0433\u043b\u044f\u0448,\u043a\u0440\u044b\u0436,\u043a\u0440\u044b\u043b\u0430\u0447,' +\n            '\u043a\u0443\u043b\u0435\u0448,\u043a\u0443\u043b\u0438\u0447,\u043a\u0443\u043c\u0430\u0447,\u043a\u043e\u043d\u0442\u0443\u0448,\u043a\u0443\u043d\u0442\u0443\u0448,\u043a\u0443\u043f\u0430\u0436,\u043a\u0443\u0440\u0430\u0436,\u043a\u0443\u0442\u0451\u0436,' +\n            '\u043b\u0435\u0434\u0435\u043d\u0435\u0446,\u043b\u0438\u0441\u0442\u0430\u0436,\u043b\u0438\u0442\u0440\u0430\u0436,\u043b\u0443\u0447,' +\n            '\u043c\u0435\u0442\u0440\u0430\u0436,\u043c\u0435\u0447,\u043c\u0438\u0440\u0430\u0436,\u043c\u043e\u043d\u0442\u0430\u0436,\u043c\u0443\u043b\u044f\u0436,\u043c\u044f\u0442\u0435\u0436,\u043c\u044f\u0447,' +\n            '\u043c\u043e\u043a\u0440\u0435\u0446,' + // \u043b\u0438\u0448\u0430\u0439, \u0440\u0430\u0441\u0442\u0435\u043d\u0438\u0435\n            '\u043c\u043e\u0441\u043a\u0432\u0438\u0447,' + // \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c\n            '\u043d\u0435\u043f\u043b\u0430\u0442\u0451\u0436,\u043d\u043e\u0436,\u043d\u0443\u0442\u0440\u0435\u0446,\u043e\u0431\u0440\u0430\u0437\u0435\u0446,\u043e\u0432\u0441\u0435\u0446,\u043e\u0433\u0443\u0440\u0435\u0446,' +\n            '\u043e\u0440\u043b\u0435\u0446,' + // \u043a\u0430\u043c\u0435\u043d\u044c, \u043a\u043e\u0432\u0440\u0438\u043a\n            '\u043e\u0441\u0442\u0440\u0435\u0446,' + // \u0440\u0430\u0441\u0442\u0435\u043d\u0438\u0435\n            '\u043f\u0430\u0434\u0435\u0436,\u043f\u0430\u0434\u0451\u0436,\u043f\u0430\u0436,\u043f\u0430\u043b\u0430\u0448,\u043f\u0430\u0440\u0430\u043b\u0438\u0447,\u043f\u0435\u0440\u0432\u0430\u0447,\u043f\u0435\u0440\u043d\u0430\u0447,\u043f\u0435\u0441\u0435\u0446,' +\n            rkComma('\u043e\u0437\u0436\u0433\u0434\u0445,\u0444\u0442\u0434\u0445,') +\n            '\u043f\u0438\u0445\u0442\u0430\u0447,\u043f\u043b\u0430\u0442\u0451\u0436,\u043f\u043b\u0430\u0449,\u043f\u043e\u0433\u0440\u0435\u0431\u0435\u0446,\u043f\u043e\u0434\u044d\u0442\u0430\u0436,\u043f\u043e\u0441\u0442\u0430\u0432\u0435\u0446,\u043f\u043e\u0442\u0430\u0448,\u043f\u0440\u0430\u0432\u0451\u0436,\u043f\u0440\u044b\u0449,\u043f\u0443\u0442\u0435\u0446,\u043f\u044b\u0436,' +\n            '\u043f\u0443\u0433\u0430\u0447,' + // \u0438\u0433\u0440\u0443\u0448\u0435\u0447\u043d\u044b\u0439 \u043f\u0438\u0441\u0442\u043e\u043b\u0435\u0442\n            '\u0440\u0435\u0437\u0435\u0446,\u0440\u0436\u0430\u043d\u0435\u0446,\u0440\u0443\u0431\u0435\u0436,\u0440\u0443\u0431\u0435\u0446,' +\n            '\u0440\u043e\u0433\u0430\u0447,' + // \u0443\u0445\u0432\u0430\u0442\n            '\u0441\u0432\u0435\u0440\u0431\u0451\u0436,\u0441\u0432\u0435\u0442\u0435\u0446,\u0441\u0435\u043d\u0430\u0436,\u0441\u043a\u0443\u043b\u0451\u0436,\u0441\u043b\u043e\u043f\u0435\u0446,\u0441\u043d\u044b\u0447,\u0441\u043e\u043b\u043e\u043d\u0435\u0446,\u0441\u043e\u0441\u0435\u0446,' +\n            '\u0441\u0432\u0438\u043d\u0435\u0446,\u0442\u0435\u0442\u0440\u0430\u044d\u0442\u0438\u043b\u0441\u0432\u0438\u043d\u0435\u0446,' +\n            '\u0441\u0435\u043a\u0430\u0447,' + // \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\n            '\u0441\u043f\u043e\u0440\u044b\u0448,\u0441\u0442\u043e\u043b\u0431\u0435\u0446,\u0441\u0442\u0440\u043e\u0433\u0430\u0447,\u0441\u0443\u0440\u0433\u0443\u0447,\u0441\u0443\u0442\u0430\u0436,\u0441\u044b\u043f\u0435\u0446,\u0441\u044b\u0440\u0435\u0446,\u0441\u044b\u0440\u043e\u0432\u0435\u0446,' +\n            '\u0442\u0435\u0440\u043f\u0451\u0436,\u0442\u0438\u043f\u0430\u0436,\u0442\u0438\u0440\u0430\u0436,\u0442\u043e\u043b\u043a\u0430\u0447,\u0442\u043e\u0440\u0435\u0446,\u0442\u044f\u0433\u0430\u0447,\u0442\u044f\u0436,' +\n            '\u0442\u0438\u043f\u0435\u0446,' + // \u043a\u043e\u0440\u043c\u043e\u0432\u043e\u0439 \u0437\u043b\u0430\u043a\n            '\u0442\u0438\u0440\u043b\u0438\u0447,' + // \u0433\u043e\u0440\u0435\u0447\u0430\u0432\u043a\u0430 (\u0440\u0430\u0441\u0442\u0435\u043d\u0438\u0435)\n            '\u0442\u0443\u043f\u0435\u0446,\u0442\u0443\u043f\u044b\u0448,' + // \u0442\u0443\u043f\u043e\u0439 \u0441\u043a\u043e\u0440\u043d\u044f\u0436\u043d\u044b\u0439 \u043d\u043e\u0436\n            '\u0446\u0435\u043b\u043a\u0430\u0447,\u0447\u0430\u0431\u0440\u0435\u0446,\u0447\u0435\u043f\u0435\u0446,' +\n            '\u0444\u0443\u0440\u0430\u0436,\u0445\u0432\u043e\u0441\u0442\u0435\u0446,\u0445\u043b\u043e\u043f\u0443\u043d\u0435\u0446,\u0445\u043e\u043b\u043e\u0434\u0435\u0446,\u0445\u0440\u044f\u0449,' +\n            '\u0447\u0435\u0440\u0442\u0451\u0436,\u0447\u0438\u0441\u0442\u0435\u0446,\u0448\u0430\u043b\u0430\u0448,\u0448\u0430\u043d\u0442\u0430\u0436,\u0448\u0438\u0448,\u0449\u0438\u043f\u0435\u0446,' +\n            '\u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043e\u0436,\u044d\u0442\u0430\u0436,\u044f\u0441\u0435\u043d\u0435\u0446');\n\n        d.putAll(ma,\n            'SEEEEEE-EEEEEE',\n            '\u0430\u043b\u043a\u0430\u0448,' +\n            '\u0431\u0430\u0441\u043c\u0430\u0447,\u0431\u0435\u0433\u043b\u0435\u0446,\u0431\u0435\u043b\u0435\u0446,\u0431\u0438\u0440\u044e\u0447,\u0431\u0438\u0447,' +\n            '\u0431\u043b\u0438\u0437\u043d\u0435\u0446,\u0431\u043e\u043c\u0436,\u0431\u043e\u0433\u0430\u0447,' +\n            '\u0431\u043e\u0435\u0446,\u0431\u043e\u0440\u0435\u0446,\u0431\u043e\u0440\u043e\u0434\u0430\u0447,\u0431\u0440\u044e\u0445\u0430\u0447,' +\n            '\u0432\u0434\u043e\u0432\u0435\u0446,\u0432\u043e\u043b\u043e\u0441\u0430\u0447,' +\n            '\u0432\u0440\u0430\u0447,\u0433\u043b\u0430\u0432\u0432\u0440\u0430\u0447,\u0432\u0435\u0442\u0432\u0440\u0430\u0447,\u0432\u043e\u0435\u043d\u0432\u0440\u0430\u0447,\u0434\u0438\u0435\u0442\u0432\u0440\u0430\u0447,\u0441\u0430\u043d\u0432\u0440\u0430\u0447,' +\n            '\u0433\u043b\u0443\u043f\u0435\u0446,\u0433\u043b\u0443\u043f\u044b\u0448,\u0433\u043e\u043b\u0435\u0446,' +\n            '\u0433\u043e\u043b\u043e\u0432\u0430\u0447,' + // \u043f\u0442\u0438\u0446\u0430, \u0436\u0443\u043a\n            '\u0433\u043e\u043b\u044b\u0448,\u0433\u043e\u043d\u0435\u0446,\u0433\u043e\u0440\u0431\u0430\u0447,\u0433\u043e\u0440\u0434\u0435\u0446,\u0433\u0440\u0430\u0447,' +\n            '\u0433\u0440\u0435\u0431\u0435\u0446,\u0434\u0435\u043b\u0435\u0446,\u0434\u0435\u0440\u0433\u0430\u0447,\u0434\u043e\u043d\u0435\u0446,\u0434\u043e\u0445\u043b\u0435\u0446,' +\n            '\u0434\u0440\u0430\u0447,' + // \u0442\u043e\u0442, \u043a\u0442\u043e \u0441\u043d\u0438\u043c\u0430\u0435\u0442 \u0448\u043a\u0443\u0440\u044b\n            '\u0451\u0436,\u0451\u0440\u0448,' +\n            '\u0435\u043b\u0435\u0446,' + // \u0440\u044b\u0431\u0430\n            '\u0436\u0435\u0440\u0435\u0431\u0435\u0446,\u0436\u0438\u0432\u0435\u0446,\u0436\u0438\u043b\u0435\u0446,\u0436\u043d\u0435\u0446,\u0436\u0440\u0435\u0446,' +\n            '\u0438\u0437\u0431\u0430\u0447,\u0438\u043d\u0433\u0443\u0448,\u0438\u0441\u0442\u0435\u0446,' +\n            '\u043a\u0430\u043c\u044b\u0448,' + // \u043a\u0430\u043c\u044b\u0448\u0438\u043d\u0441\u043a\u0438\u0439 \u0433\u043e\u043b\u0443\u0431\u044c\n            '\u043a\u043b\u0435\u0449,\u043c\u043e\u0440\u0436,' +\n            '\u043a\u043e\u043b\u044c\u0447\u0435\u0446,' + // \u043a\u043e\u043b\u044c\u0447\u0430\u0442\u044b\u0439 \u0447\u0435\u0440\u0432\u044c\n            '\u043a\u043e\u043f\u0430\u0447,' + // \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u0437\u0435\u043c\u043b\u0435\u043a\u043e\u043f\n            '\u043a\u043e\u0440\u043c\u0430\u0447,\u043a\u043e\u0440\u043e\u0442\u044b\u0448,\u043a\u043e\u0441\u0430\u0447,\u043a\u043e\u0441\u0435\u0446,\u043a\u043e\u0441\u043c\u0430\u0447,\u043a\u0440\u0435\u043f\u044b\u0448,' +\n            '\u043a\u0440\u044f\u0436,' + // \u043a\u043e\u0440\u0435\u043d\u0430\u0441\u0442\u044b\u0439, (\u043f\u0435\u0440\u0435\u043d.) \u0443\u043f\u043e\u0440\u043d\u044b\u0439 \u0438 \u043f\u0440\u0438\u0436\u0438\u043c\u0438\u0441\u0442\u044b\u0439 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\n            '\u043a\u0443\u0434\u0440\u044f\u0448,\u043a\u0443\u0437\u043d\u0435\u0446,\u043a\u0443\u043f\u0435\u0446,' +\n            '\u043b\u0430\u0442\u044b\u0448,\u043b\u0435\u0433\u0430\u0448,\u043b\u0436\u0435\u0446,\u043b\u0438\u0445\u0430\u0447,\u043b\u043e\u0432\u0435\u0446,\u043b\u043e\u0432\u043a\u0430\u0447,\u043b\u043e\u0445\u043c\u0430\u0447,' +\n            '\u043c\u0430\u043b\u0435\u0446,\u043c\u0430\u043b\u044b\u0448,\u043c\u0435\u0440\u0442\u0432\u0435\u0446,\u043c\u0438\u0433\u0430\u0447,\u043c\u043e\u0440\u0434\u0430\u0448,' +\n            '\u043c\u043e\u043a\u0440\u0435\u0446,' + // \u043d\u0430\u0441\u0435\u043a\u043e\u043c\u043e\u0435\n            '\u043c\u043e\u0441\u043a\u0432\u0438\u0447,' + // \u0436\u0438\u0442\u0435\u043b\u044c \u041c\u043e\u0441\u043a\u0432\u044b\n            '\u043c\u0443\u0434\u0440\u0435\u0446,\u043c\u0443\u0440\u0430\u0448,\u043d\u043e\u0441\u0430\u0447,\u043e\u0433\u043e\u043b\u0435\u0446,\u043e\u043c\u0438\u0447,' +\n            '\u043e\u0442\u0435\u0446,\u043f\u0440\u0430\u043e\u0442\u0435\u0446,' +\n            '\u043f\u0430\u0436,\u043a\u0430\u043c\u0435\u0440-\u043f\u0430\u0436,\u043f\u0430\u043b\u0430\u0447,' +\n            '\u043f\u0430\u043d\u0442\u0430\u0447,\u043f\u0435\u0432\u0435\u0446,\u043f\u0435\u0441\u0435\u0446,\u043f\u0438\u0441\u0435\u0446,\u043f\u043b\u0430\u0432\u0443\u043d\u0435\u0446,\u043f\u043e\u0434\u043b\u0435\u0446,\u043f\u043b\u0435\u043c\u044f\u0448,\u043f\u043b\u043e\u0432\u0435\u0446,\u043f\u043e\u0440\u0442\u0430\u0447,' +\n            '\u043f\u0440\u043e\u0434\u0430\u0432\u0435\u0446,\u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0434\u0430\u0432\u0435\u0446,' +\n            '\u043f\u043e\u0448\u043b\u0435\u0446,\u043f\u0440\u0438\u0448\u043b\u0435\u0446,\u043f\u0440\u043e\u0441\u0442\u0435\u0446,\u043f\u0442\u0435\u043d\u0435\u0446,\u043f\u0443\u0437\u0430\u0447,' +\n            '\u043f\u0443\u0433\u0430\u0447,' + // \u0444\u0438\u043b\u0438\u043d\n            '\u0440\u0432\u0430\u0447,\u0440\u0438\u0444\u043c\u0430\u0447,\u0440\u043e\u0433\u0430\u0447,\u0440\u0443\u043d\u0435\u0446,\u0440\u044b\u0431\u0435\u0446,' +\n            '\u0440\u0435\u043c\u043d\u0435\u0446,' + // \u043f\u0430\u0440\u0430\u0437\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043f\u043b\u043e\u0441\u043a\u0438\u0439 \u0447\u0435\u0440\u0432\u044c\n            '\u0441\u0430\u043c\u0435\u0446,\u0441\u0430\u0440\u044b\u0447,\u0441\u0435\u0432\u0435\u0446,\u0441\u0438\u043b\u0430\u0447,\u0441\u0438\u043d\u0435\u0446,\u0441\u043a\u0432\u043e\u0440\u0435\u0446,\u0441\u043a\u043e\u043f\u0435\u0446,\u0441\u043a\u0440\u0438\u043f\u0430\u0447,\u0441\u043a\u0443\u043f\u0435\u0446,' +\n            '\u0441\u0435\u043a\u0430\u0447,' + // \u0432\u0437\u0440\u043e\u0441\u043b\u044b\u0439 \u0441\u0430\u043c\u0435\u0446 \u043a\u0430\u0431\u0430\u043d\u0430 \u0438\u043b\u0438 \u043c\u043e\u0440\u0441\u043a\u043e\u0433\u043e \u043a\u043e\u0442\u0438\u043a\u0430\n            '\u0441\u043b\u0435\u043f\u0435\u0446,\u0441\u043b\u0435\u043f\u044b\u0448,\u0441\u043b\u0443\u0445\u0430\u0447,\u0441\u043c\u0435\u0445\u0430\u0447,\u0441\u043c\u043e\u0440\u043a\u0430\u0447,\u0441\u043d\u043e\u0445\u0430\u0447,\u0441\u043e\u0438\u0441\u0442\u0435\u0446,\u0441\u043e\u0440\u0432\u0430\u043d\u0435\u0446,' +\n            '\u0441\u043f\u0435\u0446,\u0432\u043e\u0435\u043d\u0441\u043f\u0435\u0446,' +\n            '\u0441\u0442\u0435\u0440\u0432\u0435\u0446,\u0441\u0442\u0440\u0435\u043b\u0435\u0446,\u0441\u0442\u0440\u0438\u0433\u0443\u043d\u0435\u0446,\u0441\u0442\u0440\u0438\u0436,\u0441\u0442\u0443\u043a\u0430\u0447,\u0441\u044b\u0447,' +\n            '\u0441\u0442\u0440\u0435\u043a\u0430\u0447,' + // \u0434\u0430\u0442\u044c \u0441\u0442\u0440\u0435\u043a\u0430\u0447\u0430 - \u0443\u0431\u0435\u0436\u0430\u0442\u044c\n            '\u0441\u0442\u0440\u0443\u043d\u0435\u0446,' + // \u043f\u0430\u0440\u0430\u0437\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043a\u0440\u0443\u0433\u043b\u044b\u0439 \u0447\u0435\u0440\u0432\u044c\n            '\u0442\u0432\u043e\u0440\u0435\u0446,\u0442\u0435\u043b\u0435\u0446,\u0442\u043a\u0430\u0447,\u0442\u043e\u043b\u043c\u0430\u0447,\u0442\u043e\u0440\u0433\u0430\u0448,\u0442\u0440\u0443\u0431\u0430\u0447,\u0442\u0440\u044e\u043a\u0430\u0447,\u0442\u0443\u043d\u0435\u0446,' +\n            '\u0442\u0440\u0435\u043f\u0430\u0447,\u0442\u0440\u0435\u043f\u0435\u0446,' + // \u0442\u0440\u0435\u043f\u0430\u043b\u044c\u0449\u0438\u043a \u043b\u044c\u043d\u0430\n            '\u0442\u0443\u043f\u0435\u0446,\u0442\u0443\u043f\u044b\u0448,' + // \u0433\u043b\u0443\u043f\u044b\u0439 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\n            '\u0442\u044f\u0433\u043b\u0435\u0446,' + // \u0442\u044f\u0433\u043b\u044b\u0439 \u043a\u0440\u0435\u0441\u0442\u044c\u044f\u043d\u0438\u043d\n            '\u0443\u0434\u0430\u043b\u0435\u0446,\u0443\u0436,\u0443\u0441\u0430\u0447,\u0445\u0438\u0442\u0440\u0435\u0446,\u0445\u043e\u0445\u043c\u0430\u0447,\u0445\u0440\u0430\u0431\u0440\u0435\u0446,\u0445\u0440\u043e\u043c\u0435\u0446,\u0445\u0440\u044b\u0447,' +\n            rkComma('\u0444\u042f\u0446,') +\n            '\u0446\u0438\u0440\u043a\u0430\u0447,\u0447\u0435\u0440\u0432\u0435\u0446,\u0447\u0435\u0440\u043d\u0435\u0446,\u0447\u0435\u0440\u043d\u044b\u0448,\u0448\u0432\u0435\u0446,\u0448\u0435\u043b\u044c\u043c\u0435\u0446,\u0447\u0442\u0435\u0446,\u0447\u0438\u0436,\u044e\u043d\u0435\u0446');\n\n        d.putAll({gender: Gender.NEUTER},\n            'EEEEEEE-SsESEE',\n            '\u043f\u043b\u0435\u0447\u043e');\n\n        // \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u043b\u043e\u0432\u0430 \u0432\u0430\u0436\u043d\u044b \u0438\u0437-\u0437\u0430 \u0440.\u043f. \u043c\u043d.\u0447.,\n        // \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0443\u0434\u0430\u0440\u0435\u043d\u0438\u044f \u0432 \u0438\u043c.\u043f. \u0435\u0434.\u0447.\n\n        d.put(\n            {text: '\u0441\u0443\u0434\u044c\u044f', gender: Gender.COMMON, animate: true},\n            'EEEEEEE-SSSSSS'\n        );\n\n        d.putAll(f, 'EEEEEEE-SESSSS', '\u0441\u0435\u043c\u044c\u044f,\u043c\u0430\u043a\u0440\u043e\u0441\u0435\u043c\u044c\u044f');\n\n        d.put(\n            {text: '\u0441\u0432\u0438\u043d\u044c\u044f', gender: Gender.FEMININE, animate: true},\n            'EEEEEEE-SESESS'\n        );\n\n        d.putAll(f, 'EEEEEEE-eEeeee', '\u0441\u043a\u0430\u043c\u044c\u044f');\n\n        d.putAll(f,\n            API.FIXED_ENDING_STRESS,\n            '\u043b\u0430\u0434\u044c\u044f,\u0441\u0442\u0430\u0442\u044c\u044f,\u0431\u0430\u0448\u043a\u0430');\n\n        return d;\n    }\n\n    function makeDefaultLocativeDictionary() {\n        // Dictionary \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432\u043c\u0435\u0441\u0442\u043e Map, \u0442.\u043a. \u043e\u043d \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u044f \u0447\u0435\u0440\u0435\u0437 equals.\n        // \u0418 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u043e\u0442\u043a\u0440\u044b\u0442\u043e \u043d\u0430\u0440\u0443\u0436\u0443.\n        const dictionary = new Dictionary();\n        const m = Object.freeze({gender: Gender.MASCULINE});\n        const mAnimate = Object.freeze({gender: Gender.MASCULINE, animate: true});\n\n        function addConfig(lemmaPrototype, condition, ps, ws, dTypes) {\n            const andConditions = (condition instanceof Array) ? condition : [condition];\n            const prepositions = ps.split(',');\n            const words = ws.split(',');\n\n            // \u0422\u0443\u0442 \u0435\u0441\u043b\u0438 \u043d\u043e\u043c\u0435\u0440, \u0442\u043e \u044d\u0442\u043e LocativeDeclensionType,\n            // \u0430 \u0435\u0441\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u0430, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442, \u043d\u0430\u0432\u0435\u0440\u043d\u043e, \u0437\u0434\u0435\u0441\u044c \u0436\u0435 \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c\n            // \u043e\u0441\u043e\u0431\u0443\u044e \u0444\u043e\u0440\u043c\u0443 \u0441\u043b\u043e\u0432\u0430, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442 \u0441 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u043d\u044b\u043c \u043f\u0430\u0434\u0435\u0436\u043e\u043c.\n            // \u041d\u043e \u043f\u043e\u043a\u0430 \u0447\u0442\u043e \u044d\u0442\u043e \u043d\u0435 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043b\u043e\u0441\u044c.\n            const declensionTypes = (dTypes instanceof Array) ? dTypes : [LocativeDeclensionType.U_SUFFIX];\n\n            for (let word of words) {\n                const lemma = Object.assign({}, lemmaPrototype);\n                lemma.text = word;\n\n                let configArray = dictionary.get(lemma, false);\n                if (!configArray) {\n                    configArray = [];\n                    dictionary.put(lemma, configArray);\n                }\n\n                for (let p of prepositions) {\n                    for (let d of declensionTypes) {\n                        configArray.push(new LocativeConfig(p, d, andConditions));\n                    }\n                }\n            }\n        }\n\n        // \u0412. \u0410. \u041f\u043b\u0443\u043d\u0433\u044f\u043d \u0432\u044b\u0434\u0435\u043b\u044f\u0435\u0442 \u0443 \u0441\u043b\u043e\u0432 \u043c\u0443\u0436\u0441\u043a\u043e\u0433\u043e \u0440\u043e\u0434\u0430\n        // \u0441 \u043e\u0441\u043e\u0431\u044b\u043c\u0438 \u0444\u043e\u0440\u043c\u0430\u043c\u0438 \u043b\u043e\u043a\u0430\u0442\u0438\u0432\u0430 \u0441\u0435\u043c\u044c \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432:\n\n        // 1. \u0432\u043c\u0435\u0441\u0442\u0438\u043b\u0438\u0449\u0430, \u0441\u043e\u0441\u0443\u0434\u044b (\u00ab\u0432\u00bb)\n        addConfig(m, LocativeFormAttribute.CONTAINER, '\u0432', '\u043c\u043e\u0437\u0433,\u043f\u0440\u0443\u0434,\u0441\u0442\u043e\u0433,\u0442\u0430\u0437,\u0433\u043e\u0434');\n        addConfig(m, LocativeFormAttribute.CONTAINER, '\u0432\u043e', '\u0440\u043e\u0442');\n        // \u0413\u043e\u0434 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0442\u0435\u043c, \u0432 \u0447\u0451\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f \u0434\u043d\u0438, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440,\n        // \u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0442\u0435\u043c, \u043d\u0430 \u0447\u0451\u043c \u043b\u0435\u0436\u0430\u0442 \u0441\u043e\u0431\u044b\u0442\u0438\u044f.\n        // \u042d\u0442\u043e \u0434\u0432\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f. \u0418\u0445 \u043d\u0435\u043b\u044c\u0437\u044f \u0432 \u043e\u0434\u0438\u043d \u043a\u043e\u043d\u0444\u0438\u0433 \u043f\u043e\u043c\u0435\u0449\u0430\u0442\u044c,\n        // \u0442.\u043a. \u0443 \u043d\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043d\u044a\u044e\u043d\u043a\u0446\u0438\u044e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0442\u0441\u044f.\n        addConfig(m, LocativeFormAttribute.WAY, '\u0432', '\u0433\u043e\u0434');\n        addConfig(m, LocativeFormAttribute.CONTAINER, '\u0432', '\u0433\u0440\u043e\u0431');\n        // \u041d\u0435 \u0443\u0432\u0435\u0440\u0435\u043d, \u0447\u0442\u043e \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u043a\u0430 \"\u0432\u043e \u0433\u0440\u043e\u0431\u0435\" \u0442\u0443\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f.\n        // \u041d\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u043e, \u0447\u0442\u043e \u044d\u0442\u043e \u0438\u043c\u0435\u0435\u0442 \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u043e \u0434\u0440\u0443\u0433\u043e\u0439 \u0440\u0435\u043b\u0438\u0433\u0438\u043e\u0437\u043d\u044b\u0439 \u0441\u043c\u044b\u0441\u043b, \u0447\u0435\u043c \u0432\u043c\u0435\u0441\u0442\u0438\u043b\u0438\u0449\u0435,\n        // \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438 \u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f.\n        addConfig(m, [LocativeFormAttribute.CONTAINER, LocativeFormAttribute.RELIGIOUS],\n            '\u0432\u043e', '\u0433\u0440\u043e\u0431', [LocativeDeclensionType.PREPOSITIONAL]);\n\n        // 2. \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 (\u00ab\u0432\u00bb)\n        addConfig(m, LocativeFormAttribute.LOCATION, '\u0432',\n            '\u0430\u0434,\u0431\u043e\u0440,\u043b\u0435\u0441,\u043f\u043e\u0440\u0442,\u0430\u044d\u0440\u043e\u043f\u043e\u0440\u0442,\u0440\u0430\u0439,\u0441\u0430\u0434,\u0442\u044b\u043b,' +\n            '\u043d\u0438\u0437,' +\n            '\u0445\u043b\u0435\u0432'  // \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u041f\u043b\u0443\u043d\u0433\u044f\u043d\u0430, \u044d\u0442\u043e \u0432\u043c\u0435\u0441\u0442\u0438\u043b\u0438\u0449\u0435 (\u043a\u0430\u043a \u0438 \"\u0446\u0435\u0445\")\n        );\n\n        // 3. \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0449\u0438\u0445 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b (\u00ab\u0432\u00bb)\n        addConfig(m, LocativeFormAttribute.STRUCTURE, '\u0432',\n            '\u043a\u0440\u0443\u0433,\u043f\u043e\u043b\u043a,\u0430\u0440\u0442\u043f\u043e\u043b\u043a,\u0440\u044f\u0434,\u0440\u043e\u0434,\u0441\u0442\u0440\u043e\u0439,\u043b\u0430\u0434');\n\n        // 4. \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u0438 (\u00ab\u043d\u0430\u00bb)\n        addConfig(m, LocativeFormAttribute.SURFACE, '\u043d\u0430', '' +\n            '\u0431\u0430\u0437,' +    // \u0441\u043a\u043e\u0442\u043d\u044b\u0439 \u0434\u0432\u043e\u0440\n            '\u0431\u0435\u0440\u0435\u0433,' +\n            '\u0431\u0435\u0440\u0435\u0436\u043e\u043a,' +    // (\u0441\u043f\u043e\u0440\u043d\u043e)\n            '\u0432\u0430\u043b,\u043a\u043e\u043d,\u043a\u0440\u0443\u0433,\u043b\u0443\u0433,\u043f\u043e\u043b,\u044f\u0440'\n        );\n        // \u041d\u0430 \u0441\u0432\u043e\u0451\u043c \u0432\u0435\u043a\u0443, \u0441\u0442\u043e\u043b\u044c\u043a\u043e-\u0442\u043e \u0440\u0430\u0437 \u043d\u0430 \u0434\u043d\u044e.\n        // \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u0432 \u0432\u0435\u043a\u0435 \u2014 100 \u043b\u0435\u0442, \u0432 \u0434\u043d\u0435 \u2014 24 \u0447\u0430\u0441\u0430.\n        addConfig(m, LocativeFormAttribute.WAY, '\u043d\u0430', '\u0432\u0435\u043a,\u0434\u0435\u043d\u044c');\n        // \u042d\u0442\u043e \u0447\u0438\u0442\u0435\u0440\u0441\u0442\u0432\u043e \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0435, \u043d\u043e \u0442\u0443\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0430\u044f \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044f.\n        addConfig(m, LocativeFormAttribute.WAY, '\u0432', '\u0447\u0430\u0441');\n        // \"\u043d\u0430 \u043a\u043e\u0440\u043d\u044e\" \u2014 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 (\u043d\u0430\u0440\u0435\u0447\u0438\u0435), \u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0449\u0435\u0435 \"\u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\".\n        // \"\u0437\u0430\u0440\u0443\u0431\u0438\u0442\u044c \u043d\u0430 \u043a\u043e\u0440\u043d\u044e\" \u2014 \"\u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0438\u0442\u044c \u0432 \u0441\u0430\u043c\u043e\u043c \u043d\u0430\u0447\u0430\u043b\u0435\".\n        addConfig(m, LocativeFormAttribute.WAY, '\u043d\u0430', '\u043a\u043e\u0440\u0435\u043d\u044c');\n\n        // 5. \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0439 (\u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043b\u043e\u0441\u043a\u043e\u0439) \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c\u044e (\u00ab\u043d\u0430\u00bb)\n        addConfig(mAnimate, LocativeFormAttribute.OBJECT_WITH_FUNCTIONAL_SURFACE, '\u043d\u0430', '\u0432\u043e\u0440');\n        addConfig(m, LocativeFormAttribute.OBJECT_WITH_FUNCTIONAL_SURFACE, '\u043d\u0430', '' +\n            '\u0431\u043e\u0447\u043e\u043a,' +  // \u043b\u0435\u0436\u0430\u0442\u044c \u043d\u0430 \u0431\u043e\u0447\u043a\u0443, \u0442.\u0435. \u043b\u0435\u0436\u0430\u0442\u044c \u0431\u043e\u043a\u043e\u043c \u0432\u043d\u0438\u0437 (\u043f\u043e\u0447\u0442\u0438 \u043d\u0435 \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u044f\u0435\u0442\u0441\u044f)\n            '\u0431\u043e\u0440\u0442,\u0432\u043e\u0437,\u0433\u043e\u0440\u0431,\u043a\u043e\u043b,\u043c\u043e\u0441\u0442,\u043f\u043b\u043e\u0442,\u0441\u0443\u043a,' +\n            rkComma('\u0444\u0442\u0438,')\n        );\n\n        // 6. \u0432\u0435\u0449\u0435\u0441\u0442\u0432\u0430 \u0438 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b (\u00ab\u0432\u00bb \u0438 \u00ab\u043d\u0430\u00bb)\n        const substance_or_resource = ',\u043c\u0451\u0434,\u043c\u0435\u0445,\u043f\u0430\u0440,\u043f\u0443\u0445';\n        addConfig(m, LocativeFormAttribute.SUBSTANCE, '\u0432', '\u0434\u044b\u043c,\u0436\u0438\u0440,\u043c\u0435\u043b,\u043f\u0443\u0448\u043e\u043a' + substance_or_resource);\n        addConfig(m, LocativeFormAttribute.RESOURCE, '\u043d\u0430', '\u0433\u0430\u0437,\u043a\u043b\u0435\u0439,\u0441\u043f\u0438\u0440\u0442' + substance_or_resource);\n\n        // 7. \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u0438 \u0438 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f (\u00ab\u0432\u00bb \u0438 \u00ab\u043d\u0430\u00bb)\n        addConfig(m, LocativeFormAttribute.CONDITION, '\u0432',\n            '\u0431\u043e\u0439,\u0431\u0440\u0435\u0434,\u0431\u044b\u0442,\u0434\u043e\u043b\u0433,\u043f\u043b\u0435\u043d,\u043f\u044b\u043b,\u0441\u043e\u043a,\u0445\u043e\u0434,\u043b\u0430\u0434');\n        // \u0422\u0443\u0442 \u044f \u0438\u043c\u0435\u044e \u0432 \u0432\u0438\u0434\u0443 \u0441\u043c\u044b\u0441\u043b, \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0451\u043d\u043d\u044b\u0439 \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0438.\n        // \u041a\u043e\u0435-\u0433\u0434\u0435 \u043f\u0438\u0448\u0443\u0442, \u0447\u0442\u043e \u0435\u0441\u0442\u044c \u0435\u0449\u0435 \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u0438\u0435 \"\u0432 \u0432\u0438\u0434\u0443 \u0433\u043e\u0440\" \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0438 \"\u0442\u0430\u043c, \u043e\u0442\u043a\u0443\u0434\u0430 \u0432\u0438\u0434\u043d\u044b \u0433\u043e\u0440\u044b\".\n        // \u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0441\u043b\u044b\u0448\u0430\u043b, \u0447\u0442\u043e\u0431\u044b \u0442\u0430\u043a \u0433\u043e\u0432\u043e\u0440\u0438\u043b\u0438. \u0415\u0441\u043b\u0438 \u0432 \u044d\u0442\u0443 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u044d\u0442\u043e \u0432\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c,\n        // \u044f \u043d\u0435 \u0443\u0432\u0435\u0440\u0435\u043d, EXPOSURE \u044d\u0442\u043e, CONDITION \u0438\u043b\u0438 \u0447\u0442\u043e-\u0442\u043e \u0442\u0440\u0435\u0442\u044c\u0435.\n        addConfig(m, LocativeFormAttribute.EXPOSURE, '\u0432,\u043d\u0430', '\u0432\u0438\u0434');\n        addConfig(m, LocativeFormAttribute.EXPOSURE, '\u043d\u0430', '\u0441\u043b\u0443\u0445,\u0441\u0447\u0451\u0442,\u0432\u0435\u0442\u0435\u0440,\u0432\u0435\u0442\u0440,\u0441\u0432\u0435\u0442');\n        addConfig(m, LocativeFormAttribute.MOTION, '\u043d\u0430', '\u0445\u043e\u0434,\u0431\u0435\u0433,\u0432\u0435\u0441');\n        // \u041f\u043e\u043a\u0430 \u043d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u043a\u0430\u043a \u0440\u0430\u0437\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0442\u044c \"\u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u043c \u0448\u0430\u0433\u0443\" \u0438 \"\u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u0448\u0430\u0433\u0435\".\n        addConfig(m, [LocativeFormAttribute.MOTION, LocativeFormAttribute.WITH_ADJECTIVE], '\u043d\u0430', '\u0448\u0430\u0433');\n        addConfig(m, LocativeFormAttribute.EVENT, '\u043d\u0430', '\u0431\u0430\u043b,\u043f\u0438\u0440');\n        // \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \"\u0434\u0443\u0445\" \u043a\u043e\u0433\u0434\u0430-\u0442\u043e \u0438 \u0437\u043d\u0430\u0447\u0438\u043b\u043e \"\u0438\u0441\u043f\u043e\u0432\u0435\u0434\u044c\",\n        // \u0441\u0435\u0439\u0447\u0430\u0441 \u044d\u0442\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u0441\u0435\u0445 \u0437\u0430\u043f\u0443\u0442\u0430\u0435\u0442.\n        addConfig(m, LocativeFormAttribute.CONDITION, '\u043d\u0430', '\u0434\u0443\u0445');\n        // \u041d\u0430 \u043f\u043e\u043b\u043d\u043e\u043c \u0433\u0430\u0437\u0443. \u041d\u0435 \u0443\u0432\u0435\u0440\u0435\u043d, \u043a\u0430\u043a \u044d\u0442\u043e \u0441\u044e\u0434\u0430 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c. \u0412\u0440\u043e\u0434\u0435, \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435.\n        addConfig(m, [LocativeFormAttribute.MOTION, LocativeFormAttribute.WITH_ADJECTIVE], '\u043d\u0430', '\u0433\u0430\u0437');\n\n        // 1 \u0438 5.\n        addConfig(m, LocativeFormAttribute.CONTAINER, '\u0432', '\u0433\u043b\u0430\u0437,\u043d\u043e\u0441,\u0448\u043a\u0430\u0444');\n        addConfig(m, LocativeFormAttribute.CONTAINER, '\u0432\u043e', '\u043b\u043e\u0431');\n        addConfig(m, LocativeFormAttribute.OBJECT_WITH_FUNCTIONAL_SURFACE, '\u043d\u0430', '\u0433\u043b\u0430\u0437,\u043b\u043e\u0431,\u043d\u043e\u0441,\u0448\u043a\u0430\u0444');\n\n        let two_and_five = '\u0431\u043e\u043a,\u0432\u0435\u0440\u0445,\u0437\u0430\u0434,\u0443\u0433\u043e\u043b';\n        addConfig(m, LocativeFormAttribute.LOCATION, '\u0432', two_and_five);\n        addConfig(m, LocativeFormAttribute.OBJECT_WITH_FUNCTIONAL_SURFACE, '\u043d\u0430', two_and_five);\n        // \u0415\u0441\u0442\u044c \u0441\u043e\u043c\u043d\u0435\u043d\u0438\u044f, \u0432 \u043a\u0430\u043a\u0438\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0444\u043e\u0440\u043c\u0430 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u043d\u043e\u0433\u043e \u043f\u0430\u0434\u0435\u0436\u0430.\n        // \u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0440\u0435\u0448\u0430\u044e\u0449\u0438\u043c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043b\u044e\u0431\u043e\u0433\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f (\u0432 *\u041a\u0440\u0430\u0441\u043d\u043e\u044f\u0440\u0441\u043a\u043e\u043c* \u043a\u0440\u0430\u0435, \u043d\u0430 *\u0432\u043d\u0435\u0448\u043d\u0435\u043c* \u043a\u0440\u0430\u0435)\n        // \u0438\u043b\u0438 \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0438 \u0438\u0445 \u043d\u0435\u043b\u044c\u0437\u044f \u043e\u0431\u043e\u0431\u0449\u0430\u0442\u044c.\n        // \u042f \u043f\u043e\u043a\u0430 \u0447\u0442\u043e \u0441\u043a\u043b\u043e\u043d\u044f\u044e\u0441\u044c \u043a \u043f\u0435\u0440\u0432\u043e\u043c\u0443 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0443.\n        addConfig(m, [\n            LocativeFormAttribute.LOCATION,\n            LocativeFormAttribute.WITHOUT_ADJECTIVE\n        ], '\u0432', '\u043a\u0440\u0430\u0439');\n        addConfig(m, [\n            LocativeFormAttribute.OBJECT_WITH_FUNCTIONAL_SURFACE,\n            LocativeFormAttribute.WITHOUT_ADJECTIVE\n        ], '\u043d\u0430', '\u043a\u0440\u0430\u0439');\n\n        // 4 \u0438 6\n        addConfig(m, LocativeFormAttribute.SURFACE, '\u043d\u0430', '\u043b\u0451\u0434,\u043c\u043e\u0445,\u0441\u043d\u0435\u0433');\n        addConfig(m, LocativeFormAttribute.SUBSTANCE, '\u0432\u043e', '\u043b\u0451\u0434,\u043c\u043e\u0445');\n        addConfig(m, LocativeFormAttribute.SUBSTANCE, '\u0432', '\u0441\u043d\u0435\u0433');\n\n        // \u0410 \u0442\u0430\u043a\u0436\u0435, \u0443 \u0441\u043b\u043e\u0432 \u0436\u0435\u043d\u0441\u043a\u043e\u0433\u043e \u0440\u043e\u0434\u0430 \u0442\u0440\u0435\u0442\u044c\u0435\u0433\u043e \u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u044f \u0441 \u043e\u0441\u043e\u0431\u044b\u043c\u0438 \u0444\u043e\u0440\u043c\u0430\u043c\u0438\n        // \u043b\u043e\u043a\u0430\u0442\u0438\u0432\u0430 \u043f\u044f\u0442\u044c \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432.\n        // \u041e\u0434\u043d\u0430\u043a\u043e, \u0443 \u043b\u043e\u043a\u0430\u0442\u0438\u0432\u0430 \u0432 \u0441\u043b\u043e\u0432\u0430\u0445 \u0436\u0435\u043d\u0441\u043a\u043e\u0433\u043e \u0440\u043e\u0434\u0430 \u0442\u0440\u0435\u0442\u044c\u0435\u0433\u043e \u0441\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f\n        // \u043e\u0442 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u043d\u043e\u0433\u043e \u043f\u0430\u0434\u0435\u0436\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0443\u0434\u0430\u0440\u0435\u043d\u0438\u0435 \u2014 \u0441\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0441\u043b\u043e\u0433,\n        // \u043d\u0430 \u043f\u0438\u0441\u044c\u043c\u0435 \u043e\u043d\u0438 \u043d\u0435 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f.\n\n        return dictionary;\n    }\n\n    const reYo = s => {\n        const index = Math.max(\n            s.toLowerCase().lastIndexOf('\u0435'),\n            s.toLowerCase().lastIndexOf('\u0451')\n        );\n        const r = upperLike('\u0451', s[index]);\n        return s.substring(0, index) + r + s.substring(index + 1);\n    };\n\n    const singleEYo = s => (s.replace(/[^\u0435\u0451]/g, '').length === 1);\n\n    function getNounStem0(word) {\n        const lcLastChar = last(word).toLowerCase();\n\n        if (('\u0439' === lcLastChar || isVowel(lcLastChar)) && isVowel(last(init(word)))) {\n            return nInit(word, 2);\n        }\n\n        if (isVowel(lcLastChar)) {\n            return init(word);\n        }\n        return word;\n    }\n\n    function getNounStem(lemma) {\n        const word = lemma.text();\n        const lcWord = lemma.lower();\n        const gender = lemma.getGender();\n        const lcLastChar = last(lcWord);\n\n        if (['\u0431\u0443\u0431\u0435\u043d', '\u0431\u0443\u0433\u043e\u0440',\n                '\u0432\u0435\u0442\u0435\u0440', '\u0432\u043e\u0448\u044c', '\u0432\u044b\u043c\u044b\u0441\u0435\u043b', '\u0433\u043e\u0440\u0448\u043e\u043a', '\u0434\u044f\u0442\u0435\u043b', '\u0434\u043e\u043c\u044b\u0441\u0435\u043b', '\u0437\u0430\u043c\u044b\u0441\u0435\u043b',\n                '\u043a\u0430\u0448\u0435\u043b\u044c', '\u043a\u043e\u0433\u043e\u0442\u044c',\n                '\u043b\u0430\u043f\u043e\u0442\u044c', '\u043b\u043e\u0431', '\u043b\u043e\u043a\u043e\u0442\u044c', '\u043b\u043e\u043c\u043e\u0442\u044c', '\u043c\u043e\u043b\u0435\u0431\u0435\u043d', '\u043c\u043e\u0445', '\u043d\u043e\u0433\u043e\u0442\u044c', '\u043e\u0432\u0435\u043d',\n                '\u043f\u0435\u043f\u0435\u043b', '\u043f\u0435\u0441', '\u043f\u0451\u0441', '\u043f\u0435\u0442\u0443\u0448\u043e\u043a', '\u043f\u043e\u043c\u044b\u0441\u0435\u043b', '\u043f\u043e\u0440\u043e\u0448\u043e\u043a',\n                '\u043f\u0440\u043e\u043c\u044b\u0441\u0435\u043b', '\u043f\u0441\u0430\u043b\u043e\u043c', '\u043f\u0443\u0448\u043e\u043a', '\u0440\u043e\u0432', '\u0440\u043e\u0436\u044c', '\u0440\u043e\u0442',\n                '\u0441\u043e\u043d', '\u0441\u0442\u0435\u0431\u0435\u043b\u044c', '\u0441\u0442\u0438\u0448\u043e\u043a',\n                '\u0443\u0433\u043e\u043b', '\u0443\u043c\u044b\u0441\u0435\u043b', '\u0445\u0440\u0435\u0431\u0435\u0442', '\u0446\u0435\u0440\u043a\u043e\u0432\u044c', '\u0448\u043e\u0432'\n            ].includes(lcWord)\n            || endsWithAny(lcWord, ['\u0443\u0437\u0435\u043b', '\u0443\u0433\u043e\u043b\u044c', '\u0447\u043e\u043a', '\u0435\u0448\u043e\u043a', '\u0445\u043e\u043b'])\n            || (lemma.isAnimate() && endsWithAny(lcWord, ['\u043f\u043e\u0441\u043e\u043b']))\n        ) {\n            const w = (lcLastChar === '\u044c') ? init(word) : word;\n            return nInit(w, 2) + last(w);\n        }\n\n        if (['\u043b\u0451\u0434', '\u043b\u0435\u0434'].includes(lcWord) || (('\u043b\u0435\u0432' === lcWord) && lemma.isAnimate())) {\n            return nInit(word, 2) + upperLike('\u044c', last(init(word))) + last(word);\n        }\n\n        if (lcWord.endsWith('\u0440\u0451\u043a') && vowelCount(word) >= 2) {\n            return nInit(word, 2) + '\u044c\u043a';\n        } else if (lcWord.endsWith('\u0451\u043a') && isVowel(lastOfNInitial(word, 2))) {\n            return nInit(word, 2) + '\u0439\u043a';\n        }\n\n        if (consonantsExceptJ.includes(last(lcWord))) {\n            return word;\n        }\n\n        if ('\u044c' === last(lcWord)) {\n\n            const en2a2b = [\n                '\u044f\u0441\u0435\u043d\u044c', '\u0431\u044e\u043b\u043b\u0435\u0442\u0435\u043d\u044c', '\u043e\u043b\u0435\u043d\u044c', '\u0442\u044e\u043b\u0435\u043d\u044c',\n                '\u0433\u043e\u0440\u0434\u0435\u043d\u044c', '\u043f\u0435\u043b\u044c\u043c\u0435\u043d\u044c',\n                '\u044f\u0447\u043c\u0435\u043d\u044c'\n            ];\n\n            if (lcWord.endsWith('\u0435\u043d\u044c') && (gender === Gender.MASCULINE) && !endsWithAny(lcWord, en2a2b)) {\n                return nInit(word, 3) + '\u043d';\n            } else {\n                return init(word);\n            }\n        }\n\n        if ('\u044c' === last(init(lcWord))) {\n            return init(word);\n        }\n\n        if ('\u043e' === last(lcWord) && '\u0432\u043b\u043c\u043d\u0441\u0442\u0445'.includes(last(init(lcWord)))) {\n            return init(word);\n        }\n\n        return getNounStem0(word);\n    }\n\n    function getDeclension(lemma) {\n        const lcWord = lemma.lower();\n        const gender = lemma.getGender();\n\n        if (lemma.isPluraleTantum()) {\n            return undefined;\n        }\n\n        if (lemma.isIndeclinable()) {\n            return -1;\n        }\n\n        const t = last(lcWord);\n        switch (gender) {\n            case Gender.FEMININE:\n                return t === \"\u0430\" || t === \"\u044f\" ? 2 :\n                    consonants.includes(t) ? -1 : 3;\n            case Gender.MASCULINE:\n                return t === \"\u0430\" || t === \"\u044f\" ? 2 :\n                    lcWord === \"\u043f\u0443\u0442\u044c\" ? 0 : 1;\n            case Gender.NEUTER:\n                return ['\u0434\u0438\u0442\u044f', '\u043f\u043e\u043b\u0443\u0434\u0438\u0442\u044f'].includes(lcWord) ? 0 :\n                    nLast(lcWord, 2) === \"\u043c\u044f\" ? 3 : 1;\n            case Gender.COMMON:\n                if (t === '\u0430' || t === '\u044f') {\n                    return 2;\n                } else if (t === '\u0438') {\n                    return -1;\n                } else {\n                    return 1;\n                }\n            default:\n                throw new Error('incorrect gender');\n        }\n    }\n\n    const tsWord = w => last(w) === '\u0446';\n\n    function tsStem(word, lemma) {\n        const head = init(word);\n        const lcHead = init(lemma.lower());\n        if ('\u0430' === last(lcHead)) {\n            return head;\n        } else if (endsWithAny(lcHead, ['\u0437\u043d\u0435', '\u0436\u043d\u0435', '\u0433\u0440\u0435', '\u0441\u043f\u0435', '\u043c\u0443\u0434\u0440\u0435'])\n            || nLast(init(lcHead), 3).split('')\n                .every(l => consonantsExceptJ.includes(l))\n            || lemma.isAName()\n        ) {\n            return head;\n        } else if (nLast(lcHead, 2) === '\u043b\u0435') {\n            const beforeLe = lastOfNInitial(lcHead, 2);\n            if (isVowel(beforeLe) || ('\u043b' === beforeLe)) {\n                return init(head) + '\u044c';\n            } else {\n                return head;\n            }\n        } else if (isVowel(last(lcHead)) && (last(lcHead) !== '\u0438')) {\n            if (isVowel(last(init(lcHead)))) {\n                return nInit(word, 2) + '\u0439';\n            } else if (endsWithAny(lemma.lower(), ['\u043c\u0435\u0441\u044f\u0446'])) {\n                return head;\n            } else {\n                return nInit(word, 2);\n            }\n        } else {\n            return head;\n        }\n    }\n\n    function okWord(w) {\n        const tok = [\n            '\u043b\u0430\u043f\u043e\u0442\u043e\u043a', '\u0436\u0435\u043b\u0442\u043e\u043a'\n        ];\n        const tok2 = [\n            '\u043f\u043e\u0442\u043e\u043a', '\u043f\u0440\u0438\u0442\u043e\u043a', '\u043f\u0435\u0440\u0435\u0442\u043e\u043a', '\u043f\u0440\u043e\u0442\u043e\u043a', '\u0431\u0438\u043e\u0442\u043e\u043a', '\u044d\u043b\u0435\u043a\u0442\u0440\u043e\u0442\u043e\u043a',\n            '\u0432\u043e\u0441\u0442\u043e\u043a', '\u0432\u043e\u0434\u043e\u0441\u0442\u043e\u043a', '\u0432\u043e\u0434\u043e\u0442\u043e\u043a', '\u0432\u043e\u0442\u043e\u043a',\n            '\u0437\u043d\u0430\u0442\u043e\u043a'\n        ];\n        const exceptThese = [\n            '\u0438\u043d\u043e\u043a', '\u0438\u0441\u0442\u043e\u043a',\n            '\u043e\u0431\u043c\u043e\u0440\u043e\u043a', '\u043f\u043e\u0440\u043e\u043a', '\u043f\u0440\u043e\u0440\u043e\u043a', '\u0441\u0442\u043e\u043a', '\u0443\u0440\u043e\u043a'\n        ];\n        return (endsWithAny(w, ['\u0447\u0435\u043a', '\u0448\u0435\u043a']) && (w.length >= 6))\n            || endsWithAny(w, tok)\n            || (\n                w.endsWith('\u043e\u043a') && !w.endsWith('\u0448\u043e\u043a') && !exceptThese.includes(w)\n                && !endsWithAny(w, tok2)\n                && !isVowel(lastOfNInitial(w, 2))\n                && (isVowel(lastOfNInitial(w, 3)) || endsWithAny(nInit(w, 2), ['\u0441\u0442', '\u0440\u0442']))\n                && w.length >= 4\n            );\n    }\n\n    const softD1 = w => (last(w) === '\u044c' && !w.endsWith('\u0433\u043e\u0441\u043f\u043e\u0434\u044c'))\n        || ('\u0435\u0451'.includes(last(w)) && !endsWithAny(w, ['\u0446\u0435', '\u0436\u0435']));\n\n    function halfSomething(word) {\n        if (word.startsWith('\u043f\u043e\u043b')\n            && ['\u0438', '\u044b', '\u0430', '\u044f', '\u044c'].includes(last(word))\n            && (vowelCount(word) >= 2)) {\n\n            let subWord = word.substring(3);\n\n            // \u041d\u0430 \u0441\u043b\u0443\u0447\u0430\u0439 \u0434\u0435\u0444\u0438\u0441\u043e\u0432.\n            let offset = subWord.search(/[\u0430-\u044f\u0410-\u042f\u0451\u0401]/);\n\n            // \u0421\u044e\u0434\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u043f\u0430\u0434\u0430\u0442\u044c \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c\n            // \u043c\u044f\u0433\u043a\u0438\u0439 \u0438 \u0442\u0432\u0435\u0440\u0434\u044b\u0439 \u0437\u043d\u0430\u043a\u0438 \u043f\u043e\u043c\u0438\u043c\u043e \u0433\u043b\u0430\u0441\u043d\u044b\u0445.\n\n            return (offset >= 0) && consonants.includes(subWord[offset].toLowerCase());\n\n        } else {\n            return false;\n        }\n    }\n\n    function decline0(engine, lemma, grCase) {\n        const word = lemma.text();\n        const lcWord = lemma.lower();\n        if (lcWord.endsWith('\u043f\u0443\u0442\u044c')) {\n            if (grCase === Case.INSTRUMENTAL) {\n                return init(word) + '\u0451\u043c';\n            } else {\n                return decline3(engine, lemma, grCase);\n            }\n        } else if (lcWord.endsWith('\u0434\u0438\u0442\u044f')) {\n            switch (grCase) {\n                case Case.NOMINATIVE:\n                case Case.ACCUSATIVE:\n                    return word;\n                case Case.GENITIVE:\n                case Case.DATIVE:\n                case Case.PREPOSITIONAL:\n                case Case.LOCATIVE:\n                    return word + '\u0442\u0438';\n                case Case.INSTRUMENTAL:\n                    return [word + '\u0442\u0435\u0439', word + '\u0442\u0435\u044e'];\n            }\n        } else {\n            throw new Error('unsupported');\n        }\n    }\n\n    /**\n     * @param {RussianNouns.Engine} engine\n     * @param {RussianNouns.Lemma} lemma\n     * @param {string} grCase\n     * @returns {Array|string}\n     */\n    function decline1(engine, lemma, grCase) {\n        const word = lemma.text();\n        const lcWord = lemma.lower();\n        const gender = lemma.getGender();\n\n        const half = halfSomething(lcWord);\n\n        if (half && endsWithAny(lcWord, ['\u0438', '\u044b'])) {\n\n            if ([Case.NOMINATIVE, Case.ACCUSATIVE].includes(grCase)) {\n                return word;\n            } else {\n\n                const h = o => (!['\u043f\u043e\u043b\u043c\u0438\u043d\u0443\u0442\u044b'].includes(o.lower()))\n                    ? ('\u043f\u043e\u043b\u0443' + o.text().substring(3)) : o.text();\n\n                if ('\u043f\u043e\u043b\u043f\u0443\u0442\u0438' === lcWord) {\n                    if ([Case.PREPOSITIONAL, Case.LOCATIVE].includes(grCase)) {\n                        return word;\n                    } else {\n                        let lemmaCopy = lemma.newText(o => init(h(o)) + '\u044c');\n                        return decline0(engine, lemmaCopy, grCase);\n                    }\n                } else if (lcWord.endsWith('\u0437\u043d\u0438')) {\n                    let lemmaCopy = lemma.newText(o => init(h(o)) + '\u044c');\n                    return decline3(engine, lemmaCopy, grCase);\n                } else {\n                    let lemmaCopy = lemma.newText(o => init(h(o)) +\n                        ((last(o.lower()) === '\u043d') ? '\u044f' : '\u0430'));\n                    return decline2(engine, lemmaCopy, grCase);\n                }\n            }\n        }\n\n        let stem = getNounStem(lemma);\n        let head = init(word);\n\n        const soft = (half && lcWord.endsWith('\u044f')) || softD1(lcWord);\n\n        if (half) {\n            stem = '\u043f\u043e\u043b\u0443' + stem.substring(3);\n            head = '\u043f\u043e\u043b\u0443' + head.substring(3);\n        }\n\n        let lcStem = stem.toLowerCase();\n\n        const eStem = (s, f) => {\n            const stressedEnding = engine.sd.hasStressedEndingSingular(lemma, grCase);\n            if (!stressedEnding.length) {\n                stressedEnding.push(false);\n            }\n            return stressedEnding.map(b => b ? f(unYo(s), b) : f(s, b));\n        };\n\n        const iyWord = () => last(lcWord) === '\u0439'\n            || ['\u0438\u0439', '\u0438\u0435', '\u0438\u0451'].includes(nLast(lcWord, 2));\n\n        const eiWord = () => endsWithAny(lcWord, [\n            '\u0432\u043e\u0440\u043e\u0431\u0435\u0439', '\u043c\u0443\u0440\u0430\u0432\u0435\u0439', '\u0440\u0443\u0447\u0435\u0439', '\u0441\u043e\u043b\u043e\u0432\u0435\u0439', '\u0443\u043b\u0435\u0439'\n        ]);\n\n        const eiStem = () => {\n            if (eiWord()) {\n                return init(head) + upperLike('\u044c', last(head));\n            } else {\n                return head;\n            }\n        };\n\n        const schWord = () => '\u0447\u0449'.includes(last(lcStem));\n\n        const surnameType1 = () => lemma.isASurname()\n            && (\n                lcWord.endsWith('\u044b\u043d') || lcWord.endsWith('\u0438\u043d')\n                || lcWord.endsWith('\u043e\u0432') || lcWord.endsWith('\u0435\u0432') || lcWord.endsWith('\u0451\u0432')\n            );\n\n        const iyoy = () => (nLast(lcWord, 2) === '\u044b\u0439')\n            || (endsWithAny(lcWord, ['\u043d\u043e\u0439', '\u043f\u043e\u043d\u044f\u0442\u043e\u0439']) && vowelCount(word) >= 2);\n\n        if (Case.NOMINATIVE === grCase) {\n            return word;\n        }\n\n        if (Case.GENITIVE === grCase) {\n\n            const addUForm = r => {\n                if (!lemma.isAnimate() && (\n                    '\u043a\u043b\u0435\u0439,\u0447\u0430\u0439,' +\n                    '\u0434\u043e\u043c,\u0434\u0443\u0445,\u0434\u044b\u043c,\u0434\u044b\u043c\u043e\u043a,\u0433\u0430\u0437,\u0433\u043e\u0434,\u0433\u043e\u0440\u043e\u0448\u0435\u043a,' +\n                    '\u0436\u0430\u0440,\u0436\u0438\u0440,\u043a\u0432\u0430\u0441,' +\n                    '\u043f\u0430\u0440,\u043f\u044b\u043b,\u0440\u043e\u0434,\u0440\u043e\u0441\u0442,' +\n                    '\u0441\u0430\u0445\u0430\u0440,\u0441\u0432\u0435\u0442,\u0441\u0438\u0440\u043e\u043f,\u0441\u043c\u0435\u0445,\u0441\u043d\u0435\u0433,\u0441\u043d\u0435\u0436\u043e\u043a,\u0441\u043e\u043a,\u0441\u043e\u0440,\u0441\u043f\u043e\u0440,\u0441\u0440\u043e\u043a,\u0441\u043e\u0443\u0441,\u0441\u043f\u0438\u0440\u0442,\u0441\u0442\u0440\u0430\u0445,\u0441\u0443\u043f,\u0441\u044b\u0440,' +\n                    '\u0442\u0430\u0431\u0430\u043a,\u0442\u0432\u043e\u0440\u043e\u0433,\u0442\u043e\u043b\u043a,\u0442\u043e\u0440\u0444,\u0442\u0443\u043c\u0430\u043d,' +\n                    '\u0443\u0431\u044b\u0442\u043e\u043a,\u0443\u043a\u0440\u043e\u043f,\u0443\u043a\u0441\u0443\u0441,\u0445\u043e\u0434,' +\n                    '\u0446\u0435\u043c\u0435\u043d\u0442,\u0447\u0435\u0441\u043d\u043e\u043a,' +\n                    '\u0448\u0430\u0433,\u0448\u0438\u043a,' +\n                    '\u0448\u0438\u043f\u043e\u0432\u043d\u0438\u043a,' + // \u043f\u0440\u043e \u043e\u0442\u0432\u0430\u0440/\u0441\u0438\u0440\u043e\u043f\n                    '\u0448\u043e\u043a\u043e\u043b\u0430\u0434,\u0448\u043e\u0440\u043e\u0445,\u0448\u0443\u043c,\u044f\u0434'\n                ).split(',').includes(lcWord)) {\n\n                    if (last(lcWord) === '\u0439') {\n                        r.push(init(word) + upperLike('\u044e', last(word)));\n                    } else {\n                        r = r.concat(eStem(stem, s => s + upperLike('\u0443', last(s))));\n                    }\n                }\n\n                return r;\n            };\n\n            if ((iyWord() && lemma.isASurname())\n                || iyoy()\n                || endsWithAny(lcWord, ['\u043e\u0435', '\u043d\u044c\u043a\u0438\u0439', '\u0441\u043a\u0438\u0439', '\u0435\u0432\u043e\u0439', '\u043e\u0432\u043e\u0439'])) {\n                return stem + '\u043e\u0433\u043e';\n            } else if (endsWithAny(lcWord, ['\u0435\u0435', '\u043a\u043e\u0436\u0438\u0439', '\u0448\u043d\u0438\u0439', '\u0436\u043d\u0438\u0439', '\u0449\u0438\u0439', '\u0448\u0438\u0439', '\u0436\u0438\u0439', '\u0447\u0438\u0439'])) {\n                return stem + '\u0435\u0433\u043e';\n            } else if (iyWord()) {\n                let r = [eiStem() + '\u044f'];\n                return addUForm(r);\n            } else if (soft && !schWord()) {\n                return stem + '\u044f';\n            } else if (tsWord(lcWord)) {\n                return tsStem(word, lemma) + '\u0446\u0430';\n            } else if (okWord(lcWord)) {\n                return init(head) + '\u043a\u0430';\n            } else if (endsWithAny(lcWord, ['\u0448\u043a\u043e']) && (Gender.MASCULINE === gender)) {\n                // \u0434\u0440\u0443\u0436\u0438\u0449\u0435 - \u043d\u0435 \u0443\u0432\u0435\u0440\u0435\u043d, \u0441\u044e\u0434\u0430 \u043b\u0438 \u0435\u0433\u043e \u043e\u0442\u043d\u0435\u0441\u0442\u0438\n                return head + '\u0438';\n            } else {\n                let r = [];\n                if (lemma.isASurname() || (lcStem.indexOf('\u0451') === -1)) {\n                    r.push(stem + '\u0430');\n                } else {\n                    r = r.concat(eStem(stem, s => s + '\u0430'));\n                }\n                return addUForm(r);\n            }\n        }\n\n        if (Case.DATIVE === grCase) {\n            if ((iyWord() && lemma.isASurname())\n                || iyoy()\n                || endsWithAny(lcWord, ['\u043e\u0435', '\u043d\u044c\u043a\u0438\u0439', '\u0441\u043a\u0438\u0439', '\u0435\u0432\u043e\u0439', '\u043e\u0432\u043e\u0439'])) {\n                return stem + '\u043e\u043c\u0443';\n            } else if (endsWithAny(lcWord, ['\u0435\u0435', '\u043a\u043e\u0436\u0438\u0439', '\u0448\u043d\u0438\u0439', '\u0436\u043d\u0438\u0439', '\u0449\u0438\u0439', '\u0448\u0438\u0439', '\u0436\u0438\u0439', '\u0447\u0438\u0439'])) {\n                return stem + '\u0435\u043c\u0443';\n            } else if (iyWord()) {\n                return eiStem() + '\u044e';\n            } else if (soft && !schWord()) {\n                return stem + '\u044e';\n            } else if (tsWord(lcWord)) {\n                return tsStem(word, lemma) + '\u0446\u0443';\n            } else if (okWord(lcWord)) {\n                return init(head) + '\u043a\u0443';\n            } else if (lemma.isASurname() || (lcStem.indexOf('\u0451') === -1)) {\n                return stem + '\u0443';\n            } else {\n                return eStem(stem, s => s + '\u0443');\n            }\n        }\n\n        if (Case.ACCUSATIVE === grCase) {\n            if (gender === Gender.NEUTER) {\n                return word;\n            } else {\n                const a = lemma.isAnimate();\n                if (a === true) {\n                    return decline1(engine, lemma, Case.GENITIVE);\n                } else {\n                    return word;\n                }\n            }\n        }\n\n        if (Case.INSTRUMENTAL === grCase) {\n            if ((iyWord() && lemma.isASurname()) || endsWithAny(lcWord, ['\u043e\u0435', '\u0435\u0435', '\u043d\u044c\u043a\u0438\u0439', '\u0441\u043a\u0438\u0439'])) {\n\n                if (endsWithAny(lcWord, ['\u0432\u043e\u0435', '\u043b\u043e\u0435', '\u043c\u043e\u0435', '\u043d\u043e\u0435', '\u0440\u043e\u0435', '\u0442\u043e\u0435'])) {\n                    return stem + '\u044b\u043c';\n                } else {\n                    return stem + '\u0438\u043c';\n                }\n\n            } else if (iyoy() || endsWithAny(lcWord, ['\u0435\u0432\u043e\u0439', '\u043e\u0432\u043e\u0439'])) {\n                return stem + '\u044b\u043c';\n            } else if (endsWithAny(lcWord, ['\u043a\u043e\u0436\u0438\u0439', '\u0448\u043d\u0438\u0439', '\u0436\u043d\u0438\u0439', '\u0449\u0438\u0439', '\u0448\u0438\u0439', '\u0436\u0438\u0439', '\u0447\u0438\u0439'])) {\n                return init(head) + '\u0438\u043c';\n            } else if (iyWord()) {\n                return eiStem() + '\u0435\u043c';\n            } else if (soft || ('\u0436\u0447\u0448\u0449'.includes(last(lcStem)))) {\n\n                return eStem(stem, (s, stressedEnding) => stressedEnding\n                    ? (s + '\u043e\u043c') : (s + '\u0435\u043c'));\n\n            } else if (tsWord(lcWord)) {\n\n                return eStem(word, (w, stressedEnding) => stressedEnding\n                    ? (tsStem(w, lemma) + '\u0446\u043e\u043c') : (tsStem(w, lemma) + '\u0446\u0435\u043c'));\n\n            } else if (lcWord.endsWith('\u0446\u0435')) {\n                return word + '\u043c';\n            } else if (okWord(lcWord)) {\n                return init(head) + '\u043a\u043e\u043c';\n            } else if (surnameType1()) {\n                return word + '\u044b\u043c';\n            } else if (lemma.isASurname() || (lcStem.indexOf('\u0451') === -1)) {\n                return stem + '\u043e\u043c';\n            } else {\n                return eStem(stem, s => s + '\u043e\u043c');\n            }\n        }\n\n        if (Case.PREPOSITIONAL === grCase) {\n            if ((iyWord() && lemma.isASurname())\n                || iyoy()\n                || endsWithAny(lcWord, ['\u043e\u0435', '\u043d\u044c\u043a\u0438\u0439', '\u0441\u043a\u0438\u0439', '\u0435\u0432\u043e\u0439', '\u043e\u0432\u043e\u0439'])) {\n                return stem + '\u043e\u043c';\n            } else if (endsWithAny(lcWord, ['\u0435\u0435', '\u043a\u043e\u0436\u0438\u0439', '\u0448\u043d\u0438\u0439', '\u0436\u043d\u0438\u0439', '\u0449\u0438\u0439', '\u0448\u0438\u0439', '\u0436\u0438\u0439', '\u0447\u0438\u0439'])) {\n                return stem + '\u0435\u043c';\n            } else if (endsWithAny(lcWord, ['\u0432\u043e\u0440\u043e\u0431\u0435\u0439'])) {\n                const i = init(head);\n                return i + upperLike('\u044c\u0435', last(i));\n            } else if (endsWithAny(lcWord, [\n                '\u0438\u0439', '\u0438\u0435', '\u0447\u044c\u0435', '\u0442\u044c\u0435', '\u0434\u044c\u0435', '\u0432\u044c\u0435', '\u0431\u044c\u0435',\n                '\u0435\u043d\u044c\u0435', '\u0436\u0430\u043b\u043e\u0432\u0430\u043d\u044c\u0435',\n                '\u0440\u0443\u0436\u044c\u0435', '\u0431\u043e\u0436\u044c\u0435', '\u0432\u0435\u0440\u044c\u0435', '\u043c\u0443\u0436\u044c\u0435'\n            ]) && !endsWithAny(lcWord, [\n                '\u0437\u0430\u043f\u044f\u0441\u0442\u044c\u0435', '\u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435', '\u0438\u0437\u0433\u043e\u043b\u043e\u0432\u044c\u0435',\n                '\u043f\u043b\u0430\u0442\u044c\u0435'\n            ])) {\n                return head + '\u0438';\n            } else if ((last(lcWord) === '\u0439') || ('\u0438\u0451' === nLast(lcWord, 2))) {\n                return eiStem() + '\u0435';\n            } else if (tsWord(lcWord)) {\n                return tsStem(word, lemma) + '\u0446\u0435';\n            } else if (okWord(lcWord)) {\n                return init(head) + '\u043a\u0435';\n            } else if (lemma.isASurname() || (lcStem.indexOf('\u0451') === -1)) {\n                return stem + '\u0435';\n            } else {\n                return eStem(stem, s => s + '\u0435');\n            }\n        }\n\n        if (Case.LOCATIVE === grCase) {\n\n            const locativeConfigs = locativeDictionary.get(lemma, false);\n            if (locativeConfigs) {\n                const declensionTypes = unique(locativeConfigs.map(x => x.declensionType));\n                return declensionTypes.map(dType => toLocativeSingular1(engine, lemma, dType));\n            }\n\n            return decline1(engine, lemma, Case.PREPOSITIONAL);\n        }\n    }\n\n    function decline2(engine, lemma, grCase) {\n        const word = lemma.text();\n        const lcWord = lemma.lower();\n\n        const stem = getNounStem(lemma);\n        const lcStem = stem.toLowerCase();\n\n        const head = init(word);\n        const lcHead = init(lcWord);\n\n        const soft = () => {\n            return last(lcWord) === '\u044f';\n        };\n        const ayaWord = () => {\n            return lcWord.endsWith('\u0430\u044f') && !((vowelCount(word) === 2) || isVowel(last(stem)));\n        };\n        const yayaWord = () => {\n            return lcWord.endsWith('\u044f\u044f') && !((vowelCount(word) === 2) || isVowel(last(stem)));\n        };\n        const ayaExceptions = [\n            '\u0436\u0430\u044f', '\u0448\u0430\u044f'\n        ];\n        switch (grCase) {\n            case Case.NOMINATIVE:\n                return word;\n            case Case.GENITIVE:\n                if (yayaWord() || endsWithAny(lcWord, ayaExceptions)) {\n                    return stem + '\u0435\u0439';\n                } else if (ayaWord()) {\n                    return stem + '\u043e\u0439';\n                } else if (lemma.isASurname()) {\n                    return head + '\u043e\u0439';\n                } else if (lcWord.endsWith('\u043d\u0438\u0447\u044c\u044f')) {\n                    return head + '\u0435\u0439';\n                } else if (\n                    soft() || '\u0433\u0436\u043a\u0445\u0447\u0448\u0449'.includes(last(lcStem))  // soft, sibilant or velar\n                ) {\n                    return head + '\u0438';\n                } else {\n                    return head + '\u044b';\n                }\n            case Case.DATIVE:\n                if (yayaWord() || endsWithAny(lcWord, ayaExceptions)) {\n                    return stem + '\u0435\u0439';\n                } else if (ayaWord()) {\n                    return stem + '\u043e\u0439';\n                } else if (lemma.isASurname()) {\n                    return head + '\u043e\u0439';\n                } else if (nLast(lcWord, 2) === '\u0438\u044f') {\n                    return head + '\u0438';\n                } else if (lcWord.endsWith('\u043d\u0438\u0447\u044c\u044f')) {\n                    return head + '\u0435\u0439';\n                } else {\n                    return head + '\u0435';\n                }\n            case Case.ACCUSATIVE:\n                if (ayaWord()) {\n                    return stem + '\u0443\u044e';\n                } else if (yayaWord()) {\n                    return stem + '\u044e\u044e';\n                } else if (soft()) {\n                    return head + '\u044e';\n                } else {\n                    return head + '\u0443';\n                }\n            case Case.INSTRUMENTAL:\n                if (yayaWord() || endsWithAny(lcWord, ayaExceptions)) {\n                    return stem + '\u0435\u044e';\n                } else if (ayaWord()) {\n                    return stem + '\u043e\u0439';\n                } else if (soft() || ('\u0436\u0446\u0447\u0448\u0449'.includes(last(lcStem)) && !lcWord.endsWith('\u043e\u0432\u0446\u0430'))) {\n                    if ('\u0438' === last(lcHead)) {\n                        return head + '\u0435\u0439';\n                    } else {\n                        return [head + '\u0435\u0439', head + '\u0435\u044e'];\n                    }\n                } else {\n                    return [head + '\u043e\u0439', head + '\u043e\u044e'];\n                }\n            case Case.PREPOSITIONAL:\n                if (yayaWord() || endsWithAny(lcWord, ayaExceptions)) {\n                    return stem + '\u0435\u0439';\n                } else if (ayaWord()) {\n                    return stem + '\u043e\u0439';\n                } else if (lemma.isASurname()) {\n                    return head + '\u043e\u0439';\n                } else if (nLast(lcWord, 2) === '\u0438\u044f') {\n                    return head + '\u0438';\n                } else if (lcWord.endsWith('\u043d\u0438\u0447\u044c\u044f')) {\n                    return head + '\u0435\u0439';\n                } else {\n                    return head + '\u0435';\n                }\n            case Case.LOCATIVE:\n                return decline2(engine, lemma, Case.PREPOSITIONAL);\n        }\n    }\n\n    const specialD3 = {\n        '\u0434\u043e\u0447\u044c': '\u0434\u043e\u0447\u0435\u0440\u044c',\n        '\u043c\u0430\u0442\u044c': '\u043c\u0430\u0442\u0435\u0440\u044c'\n    };\n\n    function decline3(engine, lemma, grCase) {\n        const word = lemma.text();\n        const lcWord = lemma.lower();\n\n        if (![Case.NOMINATIVE, Case.ACCUSATIVE].includes(grCase)) {\n            if (Object.keys(specialD3).includes(lcWord)) {\n                const lemmaCopy = lemma.newText(() => specialD3[lcWord]);\n                return decline3(engine, lemmaCopy, grCase);\n            }\n        }\n\n        const stem = getNounStem(lemma);\n\n        if (nLast(lcWord, 2) === '\u043c\u044f') {\n            switch (grCase) {\n                case Case.NOMINATIVE:\n                    return word;\n                case Case.GENITIVE:\n                    return stem + '\u0435\u043d\u0438';\n                case Case.DATIVE:\n                    return stem + '\u0435\u043d\u0438';\n                case Case.ACCUSATIVE:\n                    return word;\n                case Case.INSTRUMENTAL:\n                    return stem + '\u0435\u043d\u0435\u043c';\n                case Case.PREPOSITIONAL:\n                    return stem + '\u0435\u043d\u0438';\n                case Case.LOCATIVE:\n                    return decline3(engine, lemma, Case.PREPOSITIONAL);\n            }\n        } else {\n            switch (grCase) {\n                case Case.NOMINATIVE:\n                    return word;\n                case Case.GENITIVE:\n                    return stem + '\u0438';\n                case Case.DATIVE:\n                    return stem + '\u0438';\n                case Case.ACCUSATIVE:\n                    return word;\n                case Case.INSTRUMENTAL:\n                    if (endsWithAny(lcWord, ['\u0432\u043e\u0448\u044c', '\u0440\u043e\u0436\u044c', '\u0446\u0435\u0440\u043a\u043e\u0432\u044c'])) {\n                        return word + '\u044e';\n                    } else {\n                        return stem + '\u044c\u044e';\n                    }\n                case Case.PREPOSITIONAL:\n                    return stem + '\u0438';\n                case Case.LOCATIVE:\n                    return decline3(engine, lemma, Case.PREPOSITIONAL);\n            }\n        }\n    }\n\n    function declineAsList(engine, lemma, grCase, pluralForm) {\n        const r = decline(engine, lemma, grCase, pluralForm);\n        if (r instanceof Array) {\n            return r;\n        }\n        return [r];\n    }\n\n    function decline(engine, lemma, grCase, pluralForm) {\n        const word = lemma.text();\n\n        if (lemma.isIndeclinable()) {\n            return word;\n        }\n\n        if (lemma.isPluraleTantum()) {\n            return declinePlural(engine, lemma, grCase, word);\n        } else if (pluralForm) {\n            return declinePlural(engine, lemma, grCase, pluralForm);\n        }\n\n        const declension = getDeclension(lemma);\n\n        switch (declension) {\n            case -1:\n                return word;\n            case 0:\n                return decline0(engine, lemma, grCase);\n            case 1:\n                return decline1(engine, lemma, grCase);\n            case 2:\n                return decline2(engine, lemma, grCase);\n            case 3:\n                return decline3(engine, lemma, grCase);\n        }\n    }\n\n    function toLocativeSingular1(engine, lemma, declensionType) {\n        if (LocativeDeclensionType.U_SUFFIX === declensionType) {\n            const word = lemma.text();\n            const lcWord = lemma.lower();\n            let stem = getNounStem(lemma);\n            let head = init(word);\n\n            const half = halfSomething(lcWord);\n            const soft = (half && lcWord.endsWith('\u044f')) || softD1(lcWord);\n\n            if (last(lcWord) === '\u0439') {\n                return unYo(head) + '\u044e';\n            } else if (soft) {\n                return unYo(stem) + '\u044e';\n            } else if (okWord(lcWord)) {\n                return unYo(init(head)) + '\u043a\u0443';\n            } else {\n                return unYo(stem) + '\u0443';\n            }\n        } else if (LocativeDeclensionType.PREPOSITIONAL === declensionType) {\n            return decline1(engine, lemma, Case.PREPOSITIONAL);\n        }\n    }\n\n    function toLocativeSingular(engine, declension, lemma, declensionType) {\n        if (0 === declension) {\n            return decline0(engine, lemma, Case.PREPOSITIONAL);\n        } else if (1 === declension) {\n            return toLocativeSingular1(engine, lemma, declensionType);\n        } else if (2 === declension) {\n            return decline2(engine, lemma, Case.PREPOSITIONAL);\n        } else if (3 === declension) {\n            return decline3(engine, lemma, Case.PREPOSITIONAL);\n        }\n    }\n\n    function pluralize(engine, lemma) {\n        const result = [];\n\n        const word = lemma.text();\n        const lcWord = lemma.lower();\n\n        const stem = getNounStem(lemma);\n        const lcStem = stem.toLowerCase();\n\n        if (lcWord.endsWith('\u044f\u044f')) {\n            result.push(nInit(word, 2) + '\u0438\u0435');\n            return unique(result);\n        }\n\n        const stressedEnding = engine.sd\n            .hasStressedEndingPlural(lemma, Case.NOMINATIVE);\n\n        Object.freeze(stressedEnding);\n\n        const yoStem = (f) => {\n            const stressedStem = engine.sd\n                .hasStressedEndingPlural(lemma, Case.NOMINATIVE).map(x => !x);\n\n            if (!stressedStem.length) {\n                return [f(stem)];\n            }\n\n            return stressedStem.map(b => b\n                ? (singleEYo(lcStem) ? f(reYo(stem)) : f(stem))\n                : f(unYo(stem))\n            );\n        };\n\n        const eStem = (s, f) => {\n            const stressedEndingCopy = stressedEnding.slice();\n\n            if (!stressedEndingCopy.length) {\n                stressedEndingCopy.push(false);\n            }\n\n            return stressedEndingCopy.map(b => b ? f(unYo(s)) : f(s));\n        };\n\n        const gender = lemma.getGender();\n        const declension = getDeclension(lemma);\n\n        const simpleFirstPart = (('\u0439' === last(lcWord) || isVowel(last(word))) && isVowel(last(init(word))))\n            ? init(word)\n            : stem;\n\n        const softPatronymic = () => (lcWord.endsWith('\u0435\u0432\u0438\u0447') || lcWord.endsWith('\u0435\u0432\u043d\u0430'))\n            && (lcWord.indexOf('\u044c\u0435') >= 0);\n\n        function softPatronymicForm2() {\n            const part = simpleFirstPart;\n            const index = part.toLowerCase().indexOf('\u044c\u0435');\n            const r = upperLike('\u0438', part[index]);\n            return part.substring(0, index) + r + part.substring(index + 1);\n        }\n\n        function yeruOrI(doNotUnYo) {\n            if ('\u0433\u0436\u043a\u0445\u0447\u0448\u0449'.includes(last(lcStem))\n                || '\u044f\u0439\u044c'.includes(last(lcWord))\n                || endsWithAny(lcWord, ['\u0441\u043e\u0441\u0435\u0434'])) {\n\n                if (softPatronymic()) {\n                    result.push(softPatronymicForm2() + '\u0438');\n                    result.push(simpleFirstPart + '\u0438');\n                } else {\n                    result.push(simpleFirstPart + '\u0438');\n                }\n\n            } else if (tsWord(lcWord)) {\n                result.push(tsStem(word, lemma) + '\u0446\u044b');\n\n            } else {\n\n                if (softPatronymic()) {\n                    result.push(softPatronymicForm2() + '\u044b');\n                    result.push(simpleFirstPart + '\u044b');\n                } else if (doNotUnYo) {\n                    result.push(simpleFirstPart + '\u044b');\n                } else {\n                    Array.prototype.push.apply(result,\n                        eStem(simpleFirstPart, s => s + '\u044b'));\n                }\n\n            }\n        }\n\n        // \u041d\u0435 \u0434\u0443\u043c\u0430\u044e, \u0447\u0442\u043e \u044d\u0442\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u043d\u043e \u044d\u043b\u0435\u0433\u0430\u043d\u0442\u043d\u043e \u0437\u0430\u0448\u0438\u0442\u044c \u0432 \u0438\u043c\u0435\u044e\u0449\u0438\u0439\u0441\u044f \u043a\u043e\u0434.\n        // \u041f\u043e\u043a\u0430 \u0447\u0442\u043e \u0432\u043e\u0442 \u0442\u0430\u043a\u0430\u044f \u043c\u044d\u043f\u043a\u0430 \u043a\u0430\u0436\u0435\u0442\u0441\u044f \u043c\u043d\u0435 \u043d\u0430\u0438\u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0438\u043c \u0440\u0435\u0448\u0435\u043d\u0438\u0435\u043c \u0438\u0437 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445.\n        // \u0412 \u043f\u0435\u0440\u0441\u043f\u0435\u043a\u0442\u0438\u0432\u0435, \u0445\u043e\u0440\u043e\u0448\u043e \u0431\u044b \u0437\u0430\u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u0442\u044c pluralize \u0438 declinePlural.\n        const highPriorityExceptions = [\n            [\n                [\n                    Gender.MASCULINE,\n                    undefined\n                ],\n                {\n                    '\u0431\u043e\u043b\u0433\u0430\u0440\u0438\u043d': ['\u0431\u043e\u043b\u0433\u0430\u0440\u044b'],\n                    '\u0433\u043e\u0441\u043f\u043e\u0434\u0438\u043d': ['\u0433\u043e\u0441\u043f\u043e\u0434\u0430'],\n                    '\u0434\u044f\u0434\u044f': ['\u0434\u044f\u0434\u0438', '\u0434\u044f\u0434\u044c\u044f'],\n                    '\u0437\u0443\u0431': ['\u0437\u0443\u0431\u044b', '\u0437\u0443\u0431\u044c\u044f'],   // TODO: \u043e\u043c\u043e\u043d\u0438\u043c\u044b, \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u0442\u044c\n                    '\u043a\u043b\u043e\u043a': ['\u043a\u043b\u043e\u0447\u044c\u044f', '\u043a\u043b\u043e\u043a\u0438'],\n                    '\u043a\u043d\u044f\u0437\u044c': ['\u043a\u043d\u044f\u0437\u0438', '\u043a\u043d\u044f\u0437\u044c\u044f'],\n                    '\u043a\u043e\u043b': ['\u043a\u043e\u043b\u044b', '\u043a\u043e\u043b\u044c\u044f'],   // TODO: \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043d\u0430 \u043e\u043c\u043e\u043d\u0438\u043c\u044b\n                    '\u043c\u0435\u0441\u044f\u0446': ['\u043c\u0435\u0441\u044f\u0446\u044b'],\n                    '\u0442\u0430\u0442\u0430\u0440\u0438\u043d': ['\u0442\u0430\u0442\u0430\u0440\u044b'],\n                    '\u0445\u043e\u0437\u044f\u0438\u043d': ['\u0445\u043e\u0437\u044f\u0435\u0432\u0430'],\n                    '\u0446\u0432\u0435\u0442\u043e\u043a': ['\u0446\u0432\u0435\u0442\u043a\u0438', '\u0446\u0432\u0435\u0442\u044b']\n                }\n            ],\n            [\n                [\n                    Gender.MASCULINE,\n                    true\n                ],\n                {\n                    '\u043a\u043e\u043d\u0434\u0443\u043a\u0442\u043e\u0440': ['\u043a\u043e\u043d\u0434\u0443\u043a\u0442\u043e\u0440\u0430', '\u043a\u043e\u043d\u0434\u0443\u043a\u0442\u043e\u0440\u044b'],\n                    '\u043a\u0443\u043c': ['\u043a\u0443\u043c\u043e\u0432\u044c\u044f'],\n                    '\u043c\u0443\u0436': ['\u043c\u0443\u0436\u044c\u044f', '\u043c\u0443\u0436\u0438']\n                }\n            ],\n            [\n                [\n                    Gender.FEMININE,\n                    undefined\n                ],\n                {\n                    '\u0433\u0440\u043e\u0437\u0434\u044c': ['\u0433\u0440\u043e\u0437\u0434\u0438', '\u0433\u0440\u043e\u0437\u0434\u044c\u044f'],\n                    '\u043a\u0443\u0440\u0438\u0446\u0430': ['\u043a\u0443\u0440\u0438\u0446\u044b', \"\u043a\u0443\u0440\u044b\"],\n                    '\u0441\u0442\u0430\u044f': ['\u0441\u0442\u0430\u0438'],\n                    // \u0418 \u044f \u0440\u0435\u0448\u0438\u043b \u0437\u0430\u0448\u0438\u0442\u044c \u0441\u044e\u0434\u0430 \u0434\u0430\u0436\u0435 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 \u0438\u0442\u0430\u043a \u0441\u043b\u043e\u0432\u043e \u043d\u043e\u0440\u043c \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f,\n                    // \u043d\u043e \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0435 \u0442\u0430\u043c \u0431\u0443\u043a\u0432\u0430 \u0401. \u0418 \u043f\u043e\u0447\u0435\u043c\u0443 \u0431\u044b \u043d\u0435 \u0432\u044b\u0434\u0430\u0432\u0430\u0442\u044c \u0442\u0430\u043a \u0436\u0435 \u0431\u0443\u043a\u0432\u0443 \u0401.\n                    // \u0412 \u0431\u0443\u0434\u0443\u0449\u0435\u043c \u044d\u0442\u043e \u043d\u0430\u0432\u0435\u0440\u043d\u043e \u043d\u0430\u0434\u043e \u043e\u0442\u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u0442\u044c.\n                    '\u0449\u0435\u043a\u0430': ['\u0449\u0451\u043a\u0438'],\n                    '\u0431\u0435\u0440\u0435\u0441\u0442\u0430': ['\u0431\u0435\u0440\u0451\u0441\u0442\u044b'],\n                    '\u0432\u0435\u0440\u0441\u0442\u0430': ['\u0432\u0451\u0440\u0441\u0442\u044b'],\n                    '\u0434\u0435\u0441\u043d\u0430': ['\u0434\u0451\u0441\u043d\u044b'],\n                    '\u0436\u0435\u043d\u0430': ['\u0436\u0451\u043d\u044b'],\n                    '\u0437\u0432\u0435\u0437\u0434\u0430': ['\u0437\u0432\u0451\u0437\u0434\u044b'],\n                    '\u043a\u0438\u043d\u043e\u0437\u0432\u0435\u0437\u0434\u0430': ['\u043a\u0438\u043d\u043e\u0437\u0432\u0451\u0437\u0434\u044b'],\n                    '\u043c\u0435\u0434\u0441\u0435\u0441\u0442\u0440\u0430': ['\u043c\u0435\u0434\u0441\u0451\u0441\u0442\u0440\u044b'],\n                    '\u043c\u0435\u0442\u043b\u0430': ['\u043c\u0451\u0442\u043b\u044b'],\n                    '\u043f\u0447\u0435\u043b\u0430': ['\u043f\u0447\u0451\u043b\u044b'],\n                    '\u0441\u0435\u0441\u0442\u0440\u0430': ['\u0441\u0451\u0441\u0442\u0440\u044b'],\n                    '\u0441\u043b\u0435\u0437\u0430': ['\u0441\u043b\u0451\u0437\u044b']\n                }\n            ],\n            [\n                [\n                    Gender.NEUTER,\n                    undefined\n                ],\n                {\n                    '\u0431\u0440\u044e\u0445\u043e': ['\u0431\u0440\u044e\u0445\u0438'],\n                    '\u043a\u043e\u043b\u0435\u043d\u043e': ['\u043a\u043e\u043b\u0435\u043d\u0430', '\u043a\u043e\u043b\u0435\u043d\u0438', '\u043a\u043e\u043b\u0435\u043d\u044c\u044f'], // TODO: \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043d\u0430 \u043e\u043c\u043e\u043d\u0438\u043c\u044b\n                    '\u0434\u0440\u0435\u0432\u043e': ['\u0434\u0440\u0435\u0432\u0430', '\u0434\u0440\u0435\u0432\u0435\u0441\u0430'],\n                    '\u0443\u0445\u043e': ['\u0443\u0448\u0438'],\n                    '\u043e\u043a\u043e': ['\u043e\u0447\u0438'],\n                    '\u0434\u043d\u043e': ['\u0434\u043e\u043d\u044c\u044f'],\n                    '\u0447\u0443\u0434\u043e': ['\u0447\u0443\u0434\u0435\u0441\u0430', '\u0447\u0443\u0434\u0430'],\n                    '\u043d\u0435\u0431\u043e': ['\u043d\u0435\u0431\u0435\u0441\u0430'],\n                    // \u0411\u0443\u043a\u0432\u0430 \u0401:\n                    '\u0431\u0440\u0435\u0432\u043d\u043e': ['\u0431\u0440\u0451\u0432\u043d\u0430'],\n                    '\u0432\u0435\u0434\u0440\u043e': ['\u0432\u0451\u0434\u0440\u0430'],\n                    '\u0432\u0435\u0440\u0435\u0442\u0435\u043d\u043e': ['\u0432\u0435\u0440\u0435\u0442\u0451\u043d\u0430'],\n                    '\u0432\u0435\u0441\u043b\u043e': ['\u0432\u0451\u0441\u043b\u0430'],\n                    '\u0433\u043d\u0435\u0437\u0434\u043e': ['\u0433\u043d\u0451\u0437\u0434\u0430'],\n                    '\u0437\u0435\u0440\u043d\u043e': ['\u0437\u0451\u0440\u043d\u0430'],\n                    '\u0437\u043d\u0430\u043c\u044f': ['\u0437\u043d\u0430\u043c\u0451\u043d\u0430'],\n                    '\u043a\u043e\u043b\u0435\u0441\u043e': ['\u043a\u043e\u043b\u0451\u0441\u0430'],\n                    '\u043e\u0431\u043b\u0430\u0447\u043a\u043e': ['\u043e\u0431\u043b\u0430\u0447\u043a\u0430'],\n                    '\u043e\u0437\u0435\u0440\u043e': ['\u043e\u0437\u0451\u0440\u0430'],\n                    '\u0440\u0435\u0431\u0440\u043e': ['\u0440\u0451\u0431\u0440\u0430'],\n                    '\u0440\u0435\u043c\u0435\u0441\u043b\u043e': ['\u0440\u0435\u043c\u0451\u0441\u043b\u0430'],\n                    '\u0441\u0435\u0434\u043b\u043e': ['\u0441\u0451\u0434\u043b\u0430'],\n                    '\u0441\u0435\u043b\u043e': ['\u0441\u0451\u043b\u0430']\n                }\n            ]\n        ];\n\n        for (const [key, genderExceptions] of highPriorityExceptions) {\n\n            const keyGender = key[0];\n            const keyAnimate = key[1];\n\n            if ((gender === keyGender)\n                && ((keyAnimate == null) || (keyAnimate === lemma.isAnimate()))\n                && genderExceptions.hasOwnProperty(lcWord)) {\n\n                const v = genderExceptions[lcWord];\n\n                for (let x of v) {\n                    result.push(x);\n                }\n\n                return unique(result);\n            }\n        }\n\n        const yaD1 = [\n            '\u0437\u044f\u0442\u044c', '\u0434\u0435\u0432\u0435\u0440\u044c',\n            '\u0434\u0440\u0443\u0433',\n            '\u0431\u0440\u0430\u0442', '\u0441\u043e\u0431\u0440\u0430\u0442',\n            '\u043b\u0438\u0441\u0442', '\u0441\u0442\u0443\u043b',\n            '\u0431\u0440\u0443\u0441',\n            '\u043e\u0431\u043e\u0434', '\u043f\u043e\u043b\u043e\u0437',\n            '\u0441\u0442\u0440\u0443\u043f',\n            '\u043f\u043e\u0434\u043c\u0430\u0441\u0442\u0435\u0440\u044c\u0435',\n            '\u044f\u043a\u043e\u0440\u044c',\n\n            '\u043f\u0435\u0440\u043e',\n            '\u0448\u0438\u043b\u043e'\n        ];\n\n        const softStemD1 = (last(lcStem) === '\u044c')\n            ? stem\n            : (\n                (last(lcStem) === '\u043a') ? (init(stem) + '\u0447\u044c') : (\n                    (last(lcStem) === '\u0433') ? (init(stem) + '\u0437\u044c') : (\n                        (last(lcWord) === '\u0439') ? init(word) : (\n                            (endsWithAny(lcWord, ['\u0440\u044c', '\u043b\u044c'])) ? stem : (stem + '\u044c')\n                        )\n                    )\n                )\n            );\n\n        switch (declension) {\n            case -1:\n                result.push(word);\n                break;\n            case 0:\n                if (lcWord === '\u043f\u0443\u0442\u044c') {\n                    result.push('\u043f\u0443\u0442\u0438');\n                } else if (lcWord.endsWith('\u0434\u0438\u0442\u044f')) {\n                    result.push(nInit(word, 3) + '\u0435\u0442\u0438');\n                } else {\n                    throw new Error('unsupported');\n                }\n                break;\n            case 1:\n                if (yaD1.includes(lcWord)) {\n\n                    result.push(softStemD1 + '\u044f');\n\n                } else if (Gender.MASCULINE === gender) {\n\n                    // \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u044d\u0442\u0438 \u0448\u0442\u0443\u043a\u0438 \u043c\u043e\u0433\u043b\u0438 \u0431\u044b \u043f\u043e\u0434\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0434 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0443\u0434\u0430\u0440\u0435\u043d\u0438\u0439,\n                    // \u043d\u043e \u044f \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u043f\u0440\u043e\u0431\u043e\u0432\u0430\u043b, \u0438 \u0443 \u043c\u0435\u043d\u044f \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c.\n\n                    const aYaWords = [\n                        '\u0431\u0435\u0440\u0435\u0433', '\u0431\u043e\u043a', '\u0431\u043e\u0440\u0442',\n                        '\u0432\u0435\u043a', '\u0432\u0435\u0441',\n                        '\u0432\u0435\u0435\u0440', // TODO: \u042d\u0442\u043e \u0432\u0441\u0451 \u0442\u043e\u0436\u0435 \u0432\u044b\u043d\u0435\u0441\u0442\u0438 \u0432 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 (\u0432 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0435 \u0434\u0432\u0438\u0436\u043a\u0430).\n                        '\u0432\u0435\u043a\u0441\u0435\u043b\u044c',  // \ud83d\ude30\n                        '\u0432\u0435\u0447\u0435\u0440',\n                        '\u0433\u043b\u0430\u0437', '\u0433\u043e\u043b\u043e\u0441', '\u0433\u043e\u0440\u043e\u0434',\n                        '\u0434\u043e\u043a\u0442\u043e\u0440', '\u0434\u043e\u043c', '\u0434\u0435\u0442\u0434\u043e\u043c',\n                        '\u0435\u0433\u0435\u0440\u044c',\n                        '\u0436\u0435\u043c\u0447\u0443\u0433',\n                        '\u043a\u0430\u0442\u0435\u0440', '\u043a\u043e\u043b\u043e\u043a\u043e\u043b', '\u043a\u043e\u043d\u0446\u043b\u0430\u0433\u0435\u0440\u044c', '\u043a\u043e\u0440\u043c', '\u043a\u043e\u0440\u043e\u0431', '\u043a\u0443\u0437\u043e\u0432', '\u043a\u0443\u043f\u043e\u043b',\n                        '\u043b\u0435\u0441', '\u043b\u0443\u0433', '\u043c\u0430\u0441\u0442\u0435\u0440', '\u043d\u043e\u043c\u0435\u0440',\n                        '\u0440\u043e\u0433',\n                        '\u0441\u0430\u0445\u0430\u0440', '\u0441\u043d\u0435\u0433', '\u0441\u043e\u0440\u0442', '\u0441\u0442\u043e\u0433', '\u0441\u0447\u0435\u0442', '\u0441\u0447\u0451\u0442',\n                        '\u0442\u0435\u0440\u0435\u043c',\n                        '\u0442\u043e\u043c',  // TODO \u043d\u0435\u043e\u0434\u0443\u0448\u0435\u0432\u043b\u0435\u043d\u043d\u043e\u0435 (\u043d\u0435 \u0438\u043c\u044f).\n                        '\u0445\u043e\u043b\u043e\u0434', '\u0446\u0432\u0435\u0442', '\u0447\u0435\u0440\u0435\u043f'\n                    ];\n\n                    const aYaWords2 = [\n                        '\u043e\u043a\u0440\u0443\u0433', '\u043e\u0441\u0442\u0440\u043e\u0432', '\u043e\u0442\u043f\u0443\u0441\u043a',\n                        '\u043f\u0430\u0441\u043f\u043e\u0440\u0442', '\u043f\u0430\u0440\u0443\u0441', '\u043f\u043e\u0435\u0437\u0434', '\u043f\u043e\u0432\u0430\u0440', '\u043f\u043e\u0433\u0440\u0435\u0431',\n                        '\u0440\u0443\u043a\u0430\u0432',\n                        '\u0446\u0435\u0445',\n                        '\u044e\u043d\u043a\u0435\u0440'\n                    ];\n\n                    const aYaWords3 = [\n                        '\u0430\u0434\u0440\u0435\u0441',\n                        '\u0434\u043e\u0433\u043e\u0432\u043e\u0440',\n                        '\u0431\u0443\u0444\u0435\u0440',\n                        '\u0432\u043e\u0440\u043e\u0445',\n                        '\u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440',\n                        '\u0438\u043d\u0441\u043f\u0435\u043a\u0442\u043e\u0440', '\u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440',\n                        '\u043a\u043e\u0440\u043f\u0443\u0441',   // TODO \u043e\u043c\u043e\u043d\u0438\u043c\u044b\n                        '\u043a\u0440\u0435\u0439\u0441\u0435\u0440',\n                        '\u043e\u0440\u0434\u0435\u043d', '\u043e\u0440\u0434\u0435\u0440', '\u043f\u0440\u043e\u0436\u0435\u043a\u0442\u043e\u0440', '\u0440\u043e\u0434',\n                        '\u0441\u0432\u0438\u0442\u0435\u0440', '\u0441\u0435\u0440\u0432\u0435\u0440',\n                        '\u0442\u0435\u043d\u043e\u0440', '\u0442\u043e\u043d', '\u0442\u0440\u0430\u043a\u0442\u043e\u0440',\n                        '\u0442\u043e\u0440\u043c\u043e\u0437', // TODO \u043d\u0430\u0432\u0435\u0440\u043d\u043e, \u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043e\u0434\u0443\u0448\u0435\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0435\n                        '\u0432\u0435\u0442\u0435\u0440',\n                        '\u0432\u0435\u0440\u0445',\n                        '\u043a\u0438\u0442\u0435\u043b\u044c',\n                        '\u043c\u0435\u0445',\n                        '\u0445\u043b\u0435\u0431',\n                        '\u044e\u043d\u043a\u0435\u0440',    // \ud83e\udd15\n                        '\u044f\u0441\u0442\u0440\u0435\u0431'\n                    ];\n\n                    const aYaWords4 = [\n                        '\u0431\u0443\u043d\u043a\u0435\u0440',\n                        '\u0432\u044b\u043c\u043f\u0435\u043b',\n                        '\u0433\u043e\u0434',\n                        '\u043e\u0431\u0440\u0430\u0437', // \u0420\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043d\u0430 \u043e\u043c\u043e\u043d\u0438\u043c\u044b?\n                        '\u043e\u043c\u0443\u0442',\n                        '\u0442\u043e\u043a\u0430\u0440\u044c', '\u0442\u043e\u043f\u043e\u043b\u044c',\n                        '\u0448\u0442\u043e\u0440\u043c', '\u0448\u0442\u0443\u0446\u0435\u0440'\n                    ];\n\n                    const ya2 = [\n                        '\u043b\u043e\u0441\u043a\u0443\u0442',\n                        '\u043f\u043e\u0432\u043e\u0434',\n                        '\u043f\u0440\u0443\u0442',\n                        '\u0441\u0443\u043a',\n                        '\u0443\u0447\u0438\u0442\u0435\u043b\u044c',\n                        '\u0444\u043b\u0438\u0433\u0435\u043b\u044c',\n                        '\u0448\u0442\u0430\u0431\u0435\u043b\u044c'\n                    ];\n\n                    const ya3 = [\n                        '\u043a\u043b\u0438\u043d', '\u043a\u043e\u043b\u043e\u0441', '\u043a\u043e\u043c', '\u043a\u0440\u0430\u0439'\n                    ];\n\n                    if ('\u0441\u044b\u043d' === lcWord) {\n\n                        result.push('\u0441\u044b\u043d\u043e\u0432\u044c\u044f');\n                        yeruOrI();\n\n                    } else if ('\u0447\u0435\u043b\u043e\u0432\u0435\u043a' === lcWord) {\n\n                        result.push('\u043b\u044e\u0434\u0438');\n                        yeruOrI();\n\n                    } else if (ya2.includes(lcWord)) {\n\n                        yeruOrI();\n                        result.push(softStemD1 + '\u044f');\n\n                    } else if (ya3.includes(lcWord)) {\n\n                        result.push(softStemD1 + '\u044f');\n\n                    } else if (aYaWords.includes(lcWord) || endsWithAny(lcWord, aYaWords2)\n                        || aYaWords3.includes(lcWord) || aYaWords4.includes(lcWord)) {\n\n                        if (aYaWords4.includes(lcWord)) {\n                            yeruOrI();\n                        }\n\n                        if (softD1(lcWord)) {\n                            Array.prototype.push.apply(result, yoStem(s => s + '\u044f'));\n                        } else if (stressedEnding.includes(true)) {\n                            result.push(unYo(stem) + '\u0430');\n                        } else {\n                            result.push(stem + '\u0430');\n                        }\n\n                        if (aYaWords3.includes(lcWord)) {\n                            yeruOrI();\n                        }\n\n                    } else if (\n                        ((lcWord.endsWith('\u0430\u043d\u0438\u043d') || lcWord.endsWith('\u044f\u043d\u0438\u043d')) && !lemma.isAName())\n                        || ['\u0431\u0430\u0440\u0438\u043d', '\u0431\u043e\u044f\u0440\u0438\u043d'].includes(lcWord)\n                    ) {\n                        result.push(nInit(word, 2) + '\u0435');\n\n                        // \u0412 \u043a\u043e\u0440\u043f\u0443\u0441\u0435 \u0444\u0438\u0433\u0443\u0440\u0438\u0440\u0443\u0435\u0442 \ud83e\udd37\u200d\u2642\ufe0f\n                        if ('\u0431\u0430\u0440\u0438\u043d' === lcWord) {\n                            result.push(nInit(word, 2) + '\u044b');\n                        }\n\n                    } else if (['\u0446\u044b\u0433\u0430\u043d'].includes(lcWord)) {\n                        result.push(word + '\u0435');\n                    } else if ('\u0449\u0435\u043d\u043e\u043a' === lcWord) {\n                        result.push(nInit(word, 2) + '\u043a\u0438');\n                        result.push(nInit(word, 2) + '\u044f\u0442\u0430');\n                    } else if ((lcWord.endsWith('\u0440\u0435\u0431\u0451\u043d\u043e\u043a') || lcWord.endsWith('\u0440\u0435\u0431\u0435\u043d\u043e\u043a'))\n                        && !(lcWord.endsWith('\u0436\u0435\u0440\u0435\u0431\u0451\u043d\u043e\u043a') || lcWord.endsWith('\u0436\u0435\u0440\u0435\u0431\u0435\u043d\u043e\u043a'))\n                        && !(lcWord.endsWith('\u044f\u0441\u0442\u0440\u0435\u0431\u0451\u043d\u043e\u043a') || lcWord.endsWith('\u044f\u0441\u0442\u0440\u0435\u0431\u0435\u043d\u043e\u043a'))) {\n                        result.push(nInit(word, 7) + '\u0434\u0435\u0442\u0438');\n                    } else if ((lcWord.endsWith('\u0451\u043d\u043e\u043a') || lcWord.endsWith('\u0435\u043d\u043e\u043a'))\n                        && lemma.isAnimate()) {\n                        result.push(nInit(word, 4) + '\u044f\u0442\u0430');\n                    } else if (lcWord.endsWith('\u0451\u043d\u043e\u0447\u0435\u043a')\n                        && lemma.isAnimate()) {\n                        result.push(nInit(word, 6) + '\u044f\u0442\u043a\u0438');\n                    } else if (lcWord.endsWith('\u043e\u043d\u043e\u043a')\n                        && '\u0436\u0447\u0448'.includes(lastOfNInitial(lcWord, 4))\n                        && lemma.isAnimate()) {\n                        result.push(nInit(word, 4) + '\u0430\u0442\u0430');\n                    } else if (okWord(lcWord)) {\n                        result.push(nInit(word, 2) + '\u043a\u0438')\n                    } else if (lcWord.endsWith('\u044b\u0439') || endsWithAny(lcWord, ['\u0449\u0438\u0439', '\u0447\u0438\u0439', '\u0436\u043d\u0438\u0439', '\u0448\u043d\u0438\u0439', '\u0441\u043a\u0438\u0439'])) {\n                        result.push(init(word) + '\u0435');\n                    } else if ((lcWord.endsWith('\u0432\u043e\u0439') && vowelCount(nInit(word, 3)) >= 2)\n                        || (endsWithAny(lcWord, ['\u043d\u043e\u0439', '\u043c\u043e\u0439']) && word.length >= 6)) {\n                        result.push(nInit(word, 2) + '\u044b\u0435');\n                    } else if (endsWithAny(lcWord, ['\u0445\u043e\u0439', '\u0448\u0438\u0439', '\u0436\u0438\u0439'])) {\n                        result.push(nInit(word, 2) + '\u0438\u0435');\n                    } else if (lcWord.endsWith('\u0435\u0433\u043e')) {\n                        result.push(nInit(word, 3) + '\u0438\u0435');\n                    } else if ([\n                        '\u0432\u043e\u0440\u043e\u0431\u0435\u0439', '\u043c\u0443\u0440\u0430\u0432\u0435\u0439', '\u0440\u0443\u0447\u0435\u0439', '\u0441\u043e\u043b\u043e\u0432\u0435\u0439', '\u0443\u043b\u0435\u0439',\n                        '\u0436\u0435\u0440\u0435\u0431\u0435\u0439', // \u2014 \u0436\u0440\u0435\u0431\u0438\u0439; \u0434\u043e\u043b\u044f \u043f\u043e\u043c\u0435\u0441\u0442\u044c\u044f.\n                        '\u0438\u0440\u0435\u0439', // \u0414\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0431\u0435\u0441\u0441\u043c\u044b\u0441\u043b\u0435\u043d\u043d\u043e \u0432 \u043c\u043d. \u0447.\n                        '\u0440\u0435\u043f\u0435\u0439', '\u0447\u0438\u0440\u0435\u0439' // \u042f \u0431\u044b \u0441\u043a\u0430\u0437\u0430\u043b \"-\u0435\u0438\", \u043d\u043e \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044f\u0445 \u0442\u0430\u043a.\n                    ].includes(lcWord)) {\n                        result.push(nInit(word, 2) + '\u044c\u0438');\n                    } else {\n                        yeruOrI();\n                    }\n\n                } else if (Gender.NEUTER === gender) {\n\n                    if (endsWithAny(lcWord, ['\u043a\u043e', '\u0447\u043e'])\n                        && !endsWithAny(lcWord, ['\u0432\u043e\u0439\u0441\u043a\u043e', '\u043e\u0431\u043b\u0430\u043a\u043e'])\n                    ) {\n                        result.push(init(word) + '\u0438');\n                    } else if (lcWord.endsWith('\u0438\u043c\u043e\u0435')) {\n                        result.push(stem + '\u044b\u0435')\n\n                    } else if (lcWord.endsWith('\u0435\u0435')) {\n                        result.push(stem + '\u0438\u0435');\n\n                    } else if (lcWord.endsWith('\u043e\u0435')) {\n\n                        if (endsWithAny(lcStem, ['\u0433', '\u043a', '\u0436', '\u0448'])) {\n                            result.push(stem + '\u0438\u0435');\n                        } else {\n                            result.push(stem + '\u044b\u0435');\n                        }\n\n                    } else if (endsWithAny(lcWord, ['\u0438\u0435', '\u0438\u0451'])) {\n                        result.push(nInit(word, 2) + '\u0438\u044f');\n\n                    } else if (endsWithAny(lcWord, ['\u044c\u0435', '\u044c\u0451'])) {\n\n                        const w = nInit(word, 2);\n\n                        const softSignOnly = [\n                            '\u0431\u0435\u0437\u0434\u0435\u043b\u044c\u0435', '\u0432\u0430\u0440\u0435\u043d\u044c\u0435', '\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435',\n                            '\u0436\u0430\u043b\u043e\u0432\u0430\u043d\u044c\u0435',    // \u0418\u041c\u0425\u041e, \u0441\u043f\u043e\u0440\u043d\u043e\n                            '\u0437\u0430\u043f\u044f\u0441\u0442\u044c\u0435', '\u0437\u0430\u0441\u0442\u043e\u043b\u044c\u0435', '\u0437\u0430\u0442\u0438\u0448\u044c\u0435', '\u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435', '\u0437\u0435\u043b\u044c\u0435',\n                            '\u0438\u0437\u0433\u043e\u043b\u043e\u0432\u044c\u0435', '\u043d\u043e\u0432\u043e\u0441\u0435\u043b\u044c\u0435', '\u043e\u0434\u043d\u043e\u0447\u0430\u0441\u044c\u0435',\n                            // \u042f \u0431\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u0441\u044e\u0434\u0430 \"\u043e\u0436\u0435\u0440\u0435\u043b\u044c\u0435\",\n                            // \u0445\u043e\u0442\u044f \u0444\u043e\u0440\u043c\u0430 \"\u043e\u0436\u0435\u0440\u0435\u043b\u0438\u044f\" \u0432 \u0433\u0443\u0433\u043b\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f.\n                            '\u043f\u0435\u0447\u0435\u043d\u044c\u0435', '\u043f\u043b\u0430\u0442\u044c\u0435', '\u043f\u043e\u0431\u0435\u0440\u0435\u0436\u044c\u0435', '\u043f\u043e\u0433\u043e\u043b\u043e\u0432\u044c\u0435', '\u043f\u043e\u0434\u0432\u043e\u0440\u044c\u0435',\n                            '\u043f\u043e\u0434\u0437\u0435\u043c\u0435\u043b\u044c\u0435', '\u043f\u043e\u0434\u043f\u043e\u043b\u044c\u0435', '\u043f\u043e\u043c\u0435\u0441\u0442\u044c\u0435', '\u043f\u0440\u0435\u0434\u043f\u043b\u0435\u0447\u044c\u0435', '\u0440\u0430\u0437\u0434\u0443\u043c\u044c\u0435',\n                            '\u0441\u0438\u0434\u0435\u043d\u044c\u0435',  // \u043c\u0435\u0441\u0442\u043e \u0434\u043b\u044f \u0441\u0438\u0434\u0435\u043d\u0438\u044f\n                            '\u0441\u0440\u0435\u0434\u043d\u0435\u0432\u0435\u043a\u043e\u0432\u044c\u0435', '\u0443\u0432\u0435\u0447\u044c\u0435', '\u0443\u0433\u043e\u0434\u044c\u0435', '\u0443\u0441\u0442\u044c\u0435'\n                        ].includes(lcWord);\n\n                        if ((last(lcWord) === '\u0435') && !softSignOnly) {\n                            result.push(w + '\u0438\u044f');\n                        }\n\n                        result.push(w + '\u044c\u044f');\n\n                    } else if (endsWithAny(lcWord, [\n                        '\u0434\u0435\u0440\u0435\u0432\u043e', '\u0437\u0432\u0435\u043d\u043e', '\u043a\u0440\u044b\u043b\u043e'\n                    ])) {\n                        result.push(stem + '\u044c\u044f');\n                    } else if (endsWithAny(lcWord, ['\u043b\u0435', '\u0440\u0435'])) {\n                        result.push(stem + '\u044f');\n                    } else if (lcWord.endsWith('\u0441\u0443\u0434\u043d\u043e') && lemma.isATransport()) {\n                        result.push(nInit(word, 2) + '\u0430');\n                    } else {\n                        Array.prototype.push.apply(result, yoStem(s => s + '\u0430'));\n\n                        if (endsWithAny(lcWord, [\n                            '\u0449\u0443\u043f\u0430\u043b\u044c\u0446\u0435'\n                        ])) {\n                            yeruOrI();\n                        }\n\n                    }\n                } else {\n                    result.push(stem + '\u0438');\n                }\n                break;\n            case 2:\n                if ('\u0437\u0430\u0440\u044f' === lcWord) {\n                    result.push('\u0437\u043e\u0440\u0438');\n\n                } else if (lcWord.endsWith('\u0430\u044f') && !lcWord.endsWith('\u0441\u0432\u0430\u044f')) {\n                    if ('\u0436\u0448'.includes(last(lcStem)) || endsWithAny(lcStem, ['\u0441\u043a', '\u0446\u043a'])) {\n                        result.push(stem + '\u0438\u0435');\n                    } else {\n                        result.push(stem + '\u044b\u0435');\n                    }\n                } else {\n                    yeruOrI();\n                }\n                break;\n            case 3:\n                if (nLast(lcWord, 2) === '\u043c\u044f') {\n                    result.push(stem + '\u0435\u043d\u0430');\n                } else if (Object.keys(specialD3).includes(lcWord)) {\n                    result.push(init(specialD3[lcWord]) + '\u0438');\n                } else if (Gender.FEMININE === gender) {\n                    result.push(simpleFirstPart + '\u0438');\n                } else {\n                    if (last(simpleFirstPart) === '\u0438') {\n                        result.push(simpleFirstPart + '\u044f');\n                    } else {\n                        result.push(simpleFirstPart + '\u0430');\n                    }\n                }\n                break;\n        }\n\n        return unique(result);\n    }\n\n    function declinePlural(engine, lemma, grCase, plural) {\n        const lcPlural = plural.toLowerCase();\n        const gender = lemma.getGender();\n\n        const stem = lcPlural.endsWith('\u0446\u044b') ? init(plural) : getNounStem0(plural);\n        const softEndings = [\n            '\u043b\u0438', '\u0441\u0438', '\u0431\u0438', '\u0432\u0438', '\u0434\u0438', '\u0442\u0438', '\u043f\u0438', '\u0440\u0438', '\u043d\u0438', '\u0444\u0438', '\u0437\u0438',\n            '\u044c\u0438', '\u044c\u044f', '\u0438\u044f', '\u0440\u044f', '\u043b\u044f', '\u0430\u044f'\n        ];\n\n        for (let c of vowels) {\n            softEndings.push(c + '\u0438')\n        }\n\n        // \u0442\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u043c\u044b\u0435 \u0441\u0443\u0431\u0441\u0442\u0430\u043d\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u043b\u0430\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435\n        const hardAdjectiveLike = () => lcPlural.endsWith('\u044b\u0435');\n        const softAdjectiveLike = () => lcPlural.endsWith('\u0438\u0435');\n\n        const unYoUnstressed = text =>\n            engine.sd.hasStressedEndingPlural(lemma, grCase).includes(true)\n                ? unYo(text) : text;\n\n        const explicitZeroEndingCommonGenderSurnameLike = [\n            '\u0433\u043e\u043b\u043e\u0432\u044b', '\u0433\u0440\u043e\u043c\u0430\u0434\u0438\u043d\u044b', '\u0434\u0435\u0442\u0438\u043d\u044b', '\u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0449\u0438\u043d\u044b', '\u0434\u043e\u0445\u043b\u044f\u0442\u0438\u043d\u044b', '\u0434\u0443\u0431\u0438\u043d\u044b',\n            '\u0435\u0445\u0438\u0434\u0438\u043d\u044b', '\u0436\u0430\u0434\u0438\u043d\u044b', '\u0437\u0432\u0435\u0440\u0438\u043d\u044b', '\u0438\u0434\u0438\u043e\u0442\u0438\u043d\u044b', '\u043a\u0438\u0441\u043b\u044f\u0442\u0438\u043d\u044b', '\u043c\u043e\u043b\u043e\u0434\u0447\u0438\u043d\u044b',\n            '\u043e\u0440\u044f\u0441\u0438\u043d\u044b', '\u043e\u0441\u0442\u043e\u043b\u043e\u043f\u0438\u043d\u044b',\n            '\u0441\u0438\u0440\u043e\u0442\u0438\u043d\u044b', '\u0441\u043a\u043e\u0442\u0438\u043d\u044b', '\u0441\u0442\u0430\u0440\u0435\u0439\u0448\u0438\u043d\u044b', '\u0441\u0442\u0430\u0440\u0438\u043d\u044b', '\u0441\u0442\u0430\u0440\u0448\u0438\u043d\u044b',\n            '\u0443\u0440\u043e\u0434\u0438\u043d\u044b'\n        ];\n\n        const surnameType1 = () => endsWithAny(lcPlural, ['\u043e\u0432\u044b', '\u0435\u0432\u044b', '\u0451\u0432\u044b', '\u0438\u043d\u044b', '\u044b\u043d\u044b'])\n            && !endsWithAny(lcPlural, explicitZeroEndingCommonGenderSurnameLike)\n            && (lemma.isASurname() || (gender === Gender.COMMON));\n\n        const surnameType1E = () => surnameType1() || lcPlural.endsWith('\u043d\u0438\u0447\u044c\u0438');\n\n        if (Case.DATIVE === grCase) {\n\n            if (surnameType1E()) {\n                return plural + '\u043c';\n            } else if (hardAdjectiveLike()) {\n                return nInit(plural, 2) + '\u044b\u043c';\n            } else if (softAdjectiveLike()) {\n                return nInit(plural, 2) + '\u0438\u043c';\n            } else if (endsWithAny(lcPlural, softEndings)) {\n                return init(plural) + '\u044f\u043c';\n            } else {\n                return unYoUnstressed(stem) + '\u0430\u043c';\n            }\n\n        } else if (Case.INSTRUMENTAL === grCase) {\n\n            if (surnameType1E()) {\n                return plural + '\u043c\u0438';\n            } else if (hardAdjectiveLike()) {\n                return nInit(plural, 2) + '\u044b\u043c\u0438';\n            } else if (softAdjectiveLike()) {\n                return nInit(plural, 2) + '\u0438\u043c\u0438';\n            } else if (endsWithAny(lcPlural, ['\u0434\u0435\u0442\u0438', '\u043b\u044e\u0434\u0438'])\n                && !endsWithAny(lcPlural, ['\u043d\u0435\u043b\u044e\u0434\u0438'])) {\n                return init(plural) + '\u044c\u043c\u0438';\n            } else if (endsWithAny(lcPlural, softEndings)) {\n                return init(plural) + '\u044f\u043c\u0438';\n            } else {\n                return unYoUnstressed(stem) + '\u0430\u043c\u0438';\n            }\n\n        } else if ([Case.PREPOSITIONAL, Case.LOCATIVE].includes(grCase)) {\n\n            if (surnameType1E()) {\n                return plural + '\u0445';\n            } else if (hardAdjectiveLike()) {\n                return nInit(plural, 2) + '\u044b\u0445';\n            } else if (softAdjectiveLike()) {\n                return nInit(plural, 2) + '\u0438\u0445';\n            } else if (endsWithAny(lcPlural, softEndings)) {\n                return init(plural) + '\u044f\u0445';\n            } else {\n                return unYoUnstressed(stem) + '\u0430\u0445';\n            }\n\n        }\n\n        if ([Case.GENITIVE, Case.ACCUSATIVE].includes(grCase)) {\n\n            if (endsWithAny(lcPlural, ['\u043e\u0432\u0438\u0447\u0438', '\u0435\u0432\u0438\u0447\u0438'])) {\n                return init(plural) + '\u0435\u0439';\n            }\n\n            if (lcPlural.endsWith('\u0432\u043d\u044b') && (lcPlural !== '\u043e\u0432\u043d\u044b')) {\n                return nInit(plural, 2) + '\u0435\u043d';\n            }\n\n        }\n\n        if ((Case.GENITIVE === grCase) || ((Case.ACCUSATIVE === grCase) && lemma.isAnimate())) {\n\n            if (surnameType1E()) {\n                return plural + '\u0445';\n            } else if (hardAdjectiveLike()) {\n                return nInit(plural, 2) + '\u044b\u0445';\n            } else if (softAdjectiveLike()) {\n                return nInit(plural, 2) + '\u0438\u0445';\n            }\n\n            const declension = getDeclension(lemma);\n\n            const genitiveStem = () => {\n                const lcStem = stem.toLowerCase();\n                const dependsOnStress = ['\u0436\u043a\u0438', '\u0448\u043a\u0438', '\u0447\u043a\u0438', '\u043d\u043e\u0436\u043d\u044b'];\n                if ((\n                    endsWithAny(lcStem, ['\u043a\u043d', '\u043a\u043b', '\u0434\u043a', '\u043d\u043a', '\u043f\u043a', '\u0440\u043a', '\u0442\u043a', '\u0432\u043a', '\u043b\u043a', '\u043c\u043a'])\n                    && !endsWithAny(lcPlural, ['\u0441\u0443\u043c\u0435\u0440\u043a\u0438'])\n                ) || (\n                    lcStem === '\u0437\u043b'\n                ) || (\n                    endsWithAny(lcPlural, dependsOnStress)\n                    && engine.sd.hasStressedEndingPlural(lemma, grCase).includes(true)\n                )) {\n                    const end = last(stem);\n                    return init(stem) + upperLike('\u043e', end) + end;\n                } else if ((\n                    endsWithAny(lcPlural, [\n                        '\u0432\u043d\u0430', '\u0432\u0446\u0430', '\u0432\u0446\u044b', '\u043f\u043b\u0430', '\u0434\u0446\u0430', '\u0434\u0440\u0430', '\u0441\u0443\u0434\u043d\u0430',\n                        '\u0440\u043a\u0438', '\u0440\u0446\u044b', '\u0442\u043b\u044b', '\u0440\u043d\u0430', '\u0442\u043d\u0430', '\u0435\u043d\u0446\u0430',\n                        '\u0434\u0435\u0441\u043d\u044b', '\u0434\u0451\u0441\u043d\u044b',\n                        '\u0440\u0451\u0431\u0440\u0430', '\u0440\u0435\u0431\u0440\u0430',\n                        '\u0441\u043e\u0441\u043d\u044b'\n                    ])\n                    && !endsWithAny(lcPlural, ['\u043d\u0435\u0434\u0440\u0430'])\n                ) || (\n                    endsWithAny(lcPlural, dependsOnStress)\n                )) {\n                    const end = lastOfNInitial(plural, 1);\n                    return nInit(plural, 2) + upperLike('\u0435', end) + end;\n                } else if (\n                    endsWithAny(lcPlural, [\n                        '\u0441\u0435\u0441\u0442\u0440\u044b', '\u0441\u0451\u0441\u0442\u0440\u044b', '\u0441\u0435\u0440\u044c\u0433\u0438'\n                    ])\n                ) {\n                    const end = lastOfNInitial(plural, 1);\n                    const h = (lastOfNInitial(lcPlural, 2) === '\u044c')\n                        ? unYo(nInit(plural, 3))\n                        : unYo(nInit(plural, 2));\n                    return h + upperLike('\u0451', end) + end;\n                } else if (endsWithAny(lcStem, ['\u043b\u044c\u0446', '\u0441\u044c\u043c', '\u0434\u0435\u043d\u044c\u0433', '\u044c\u043a', '\u0439\u043a', '\u0434\u044c\u0431'])) {\n                    const end = last(stem);\n                    return nInit(stem, 2) + upperLike('\u0435', end) + end;\n                } else if (endsWithAny(lcPlural, ['\u0441\u043b\u0430', '\u0441\u043b\u044b'])) {\n                    return init(stem) + '\u0435\u043b';\n                } else {\n                    return stem;\n                }\n            };\n\n            if ([3, 0].includes(declension)) {\n                if (lcPlural.endsWith('\u0438')) {\n                    return init(plural) + '\u0435\u0439';\n                } else if (['\u0433\u0440\u043e\u0437\u0434\u044c\u044f'].includes(lcPlural)) {\n                    return init(plural) + '\u0435\u0432';\n                }\n            }\n\n            const lastOf2Initial = lastOfNInitial(lcPlural, 2);\n\n            const iEy = [\n                '\u0431\u0435\u0433\u043e\u0442\u043d\u0438',\n                '\u0431\u043e\u043b\u0442\u043e\u0432\u043d\u0438',\n                '\u0431\u0443\u0434\u043d\u0438',\n                '\u0432\u043e\u0436\u0436\u0438',\n                '\u0432\u043e\u0437\u043d\u0438',\n                '\u0434\u043e\u043b\u0438',\n                '\u043b\u0430\u043f\u0448\u0438',\n                '\u043b\u0435\u0432\u0448\u0438',\n                '\u043b\u044e\u0434\u0438',\n                '\u043c\u0430\u0440\u043b\u0438',\n                '\u043c\u043e\u0440\u044f',\n                '\u043c\u043e\u0449\u0438',\n                '\u043d\u043e\u0437\u0434\u0440\u0438',\n                '\u043f\u0435\u043d\u0438',\n                '\u043f\u044f\u0442\u0435\u0440\u043d\u0438',\n                '\u0440\u0430\u0441\u043f\u0440\u0438',\n                '\u0440\u043e\u0434\u043d\u0438',\n                '\u0441\u0430\u043a\u043b\u0438',\n                '\u0441\u0430\u043d\u0438',\n                '\u0441\u0435\u043d\u0438',\n                '\u0441\u0442\u0443\u043f\u043d\u0438',\n                '\u0441\u0443\u0434\u044c\u0438',\n                '\u0444\u0438\u0433\u043d\u0438',\n                '\u0447\u0443\u043a\u0447\u0438'\n            ];\n\n            if (Gender.FEMININE !== gender) {\n\n                // \u041e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439. \u041d\u0430\u0432\u0435\u0440\u043d\u043e, \u044d\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u043a\u0430\u043a-\u0442\u043e \u043e\u0442\u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u0442\u044c.\n                // TODO: \u042d\u0442\u043e \u0432\u0441\u0451 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u043c\u044b\u0445 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u0445 \u0432 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0435 \u0434\u0432\u0438\u0436\u043a\u0430.\n\n                // \u0421\u043b\u043e\u0432\u0430 \u043d\u0430 \"\u0430\", \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043b\u0435\u0433\u043a\u043e \u0441\u043a\u043b\u0435\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043a\u043e\u0440\u043d\u044f\u043c\u0438.\n                // \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \"\u043a\u0438\u0431\u0435\u0440\u043b\u0435\u0441\u0430\", \"\u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043f\u043e\u0435\u0437\u0434\u0430\", \"\u0430\u044d\u0440\u043e\u0441\u0443\u0434\u0430\", \"\u043f\u0440\u043e\u0442\u043e\u0433\u043e\u0440\u043e\u0434\u0430\".\n                // \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u0432 \u043a\u043e\u0440\u043f\u0443\u0441\u0435 \u0435\u0441\u043b\u0438 \u0434\u0430\u0436\u0435 \u0438 \u0435\u0441\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u0441\u043b\u043e\u0432\u0430,\n                // \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u043d\u0430 \u044d\u0442\u0438 \u0441\u0442\u0440\u043e\u043a\u0438, \u0432 \u0440\u043e\u0434. \u043f. \u043e\u043d\u0438 \u0442\u043e\u0436\u0435 \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \"\u043e\u0432\".\n                const explicitOv1 = [\n                    '\u0430\u0434\u0440\u0435\u0441\u0430', '\u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430', '\u043f\u043e\u0435\u0437\u0434\u0430', '\u0446\u0435\u0445\u0430', '\u0441\u043d\u0435\u0433\u0430',\n                    '\u0431\u0443\u043d\u043a\u0435\u0440\u0430', '\u0431\u0443\u0444\u0435\u0440\u0430',\n                    '\u0431\u0435\u0440\u0435\u0433\u0430', '\u0432\u044b\u043c\u043f\u0435\u043b\u0430', '\u0433\u043e\u043b\u043e\u0441\u0430', '\u0433\u043e\u0440\u043e\u0434\u0430',\n                    '\u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0430', '\u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0430', '\u0434\u043e\u043a\u0442\u043e\u0440\u0430', '\u0436\u0435\u043c\u0447\u0443\u0433\u0430',\n                    '\u0438\u043d\u0441\u043f\u0435\u043a\u0442\u043e\u0440\u0430', '\u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430',\n                    '\u043a\u043e\u043b\u043e\u043a\u043e\u043b\u0430', '\u043a\u043e\u043d\u0434\u0443\u043a\u0442\u043e\u0440\u0430', '\u043a\u043e\u0440\u043e\u0431\u0430', '\u043a\u043e\u0440\u043f\u0443\u0441\u0430', '\u043a\u0440\u0435\u0439\u0441\u0435\u0440\u0430', '\u043a\u0443\u0437\u043e\u0432\u0430',\n                    '\u043b\u0435\u0441\u0430', '\u043c\u0430\u0441\u0442\u0435\u0440\u0430', '\u043d\u043e\u043c\u0435\u0440\u0430',\n                    '\u043e\u0431\u043b\u0430\u0447\u043a\u0430', '\u043e\u0441\u0442\u0440\u043e\u0432\u0430', '\u043e\u0442\u043f\u0443\u0441\u043a\u0430',\n                    '\u043f\u0430\u0440\u0443\u0441\u0430', '\u043f\u043e\u0432\u0430\u0440\u0430', '\u043f\u043e\u0433\u0440\u0435\u0431\u0430', '\u043f\u0440\u043e\u0436\u0435\u043a\u0442\u043e\u0440\u0430', '\u0440\u0443\u043a\u0430\u0432\u0430',\n                    '\u0441\u0430\u0445\u0430\u0440\u0430', '\u0441\u0432\u0438\u0442\u0435\u0440\u0430', '\u0441\u0435\u0440\u0432\u0435\u0440\u0430', '\u0442\u0440\u0430\u043a\u0442\u043e\u0440\u0430', '\u0442\u043e\u0440\u043c\u043e\u0437\u0430',\n                    '\u0445\u043e\u043b\u043e\u0434\u0430', '\u0446\u0432\u0435\u0442\u0430', '\u0447\u0435\u0440\u0435\u043f\u0430', '\u0448\u0442\u043e\u0440\u043c\u0430', '\u0448\u0442\u0443\u0446\u0435\u0440\u0430',\n                    '\u044e\u043d\u043a\u0435\u0440\u0430', '\u044f\u0441\u0442\u0440\u0435\u0431\u0430',\n                    '\u0441\u0443\u0434\u0430', '\u043a\u043e\u0440\u043c'\n                ];\n\n                const explicitOv = explicitOv1.concat([\n                    '\u0430\u043b\u0430\u043d\u044b', '\u0431\u0435\u0433\u0430', '\u0431\u0435\u0433\u043b\u0435\u0446\u044b', '\u0431\u043b\u0438\u0437\u043d\u0435\u0446\u044b', '\u0431\u043e\u0439\u0446\u044b', '\u0431\u043e\u043a\u0430', '\u0431\u043e\u0440\u0442\u0430', '\u0431\u043e\u0440\u0446\u044b', '\u0431\u0440\u0443\u0441\u0442\u0432\u0435\u0440\u0430', '\u0431\u0440\u044e\u0448\u043a\u0438',\n                    '\u0432\u0435\u0435\u0440\u0430', '\u0432\u0435\u043a\u0430', '\u0432\u0435\u043d\u0446\u044b', '\u0432\u0435\u0440\u0445\u0430', '\u0432\u0435\u0441\u0430', '\u0432\u0435\u0441\u044b', '\u0432\u0435\u0447\u0435\u0440\u0430', '\u0432\u043e\u0440\u043e\u0445\u0430',\n                    '\u0433\u043b\u0443\u043f\u0446\u044b', '\u0433\u043e\u0434\u0430', '\u0433\u043e\u043d\u0446\u044b', '\u0434\u0432\u043e\u0440\u0446\u044b', '\u0434\u0435\u043b\u044c\u0446\u044b',\n                    '\u0434\u0435\u0442\u0434\u043e\u043c\u0430', '\u0434\u0435\u0442\u0434\u043e\u043c\u044b', '\u0434\u043e\u043c\u0430', '\u0436\u0435\u0440\u0435\u0431\u0446\u044b', '\u0436\u0438\u043b\u044c\u0446\u044b', '\u0436\u0440\u0435\u0446\u044b', '\u0437\u0443\u0431\u0446\u044b', '\u0438\u0441\u0442\u0446\u044b', '\u043a\u0430\u0442\u0435\u0440\u0430',\n                    '\u043a\u043e\u043d\u0446\u044b', '\u043a\u043e\u0440\u043c\u0430', '\u043a\u0443\u0437\u043d\u0435\u0446\u044b', '\u043a\u0443\u043f\u043e\u043b\u0430', '\u043a\u0443\u043f\u0446\u044b', '\u043b\u0443\u0433\u0430', '\u043c\u0435\u0440\u0442\u0432\u0435\u0446\u044b', '\u043c\u0435\u0445\u0430', '\u043c\u0443\u0434\u0440\u0435\u0446\u044b',\n                    '\u043e\u0431\u043b\u0430\u043a\u0430', '\u043e\u0431\u0440\u0430\u0437\u0430', '\u043e\u0431\u0440\u0430\u0437\u0446\u044b', '\u043e\u0433\u0443\u0440\u0446\u044b', '\u043e\u043a\u0440\u0443\u0433\u0430', '\u043e\u043c\u0443\u0442\u0430',\n                    '\u043e\u0440\u0434\u0435\u043d\u0430', '\u043e\u0440\u0434\u0435\u0440\u0430', '\u043e\u0442\u0446\u044b', '\u043e\u0447\u043a\u0438',\n                    '\u043f\u0435\u0432\u0446\u044b', '\u043f\u0435\u0441\u0446\u044b', '\u043f\u043b\u043e\u0432\u0446\u044b', '\u043f\u043e\u0434\u043b\u0435\u0446\u044b',\n                    '\u043f\u0440\u043e\u0434\u0430\u0432\u0446\u044b', '\u043f\u0442\u0435\u043d\u0446\u044b', '\u0440\u0435\u0437\u0446\u044b', '\u0440\u043e\u0433\u0430', '\u0440\u043e\u0434\u0430', '\u0440\u0443\u0431\u0446\u044b', '\u0441\u0430\u043c\u0446\u044b',\n                    '\u0441\u0432\u0438\u043d\u0446\u044b', // \u0435\u0441\u0442\u044c \u0442\u0430\u043a\u043e\u0435 \u0441\u043b\u043e\u0432\u043e?\n                    '\u0441\u043e\u0440\u0442\u0430', '\u0441\u043e\u0443\u0441\u0430', '\u0441\u043f\u0435\u0446\u044b', '\u0441\u0442\u043e\u0433\u0430', '\u0441\u0442\u043e\u043b\u0431\u0446\u044b', '\u0441\u0442\u0440\u0435\u043b\u044c\u0446\u044b',\n                    '\u0442\u0432\u043e\u0440\u0446\u044b', '\u0442\u0435\u043b\u044c\u0446\u044b', '\u0442\u0435\u043d\u043e\u0440\u0430', '\u0442\u0435\u0440\u0435\u043c\u0430', '\u0442\u043e\u043c\u0430', '\u0442\u043e\u043d\u0430', '\u0442\u043e\u0440\u0446\u044b',\n                    '\u0445\u043b\u0435\u0431\u0430', '\u044e\u043d\u0446\u044b'\n                ]);\n\n                const explicitZeroEndingAndOv = [\n                    '\u0430\u0440\u0448\u0438\u043d\u044b', '\u0431\u0430\u043a\u043b\u0430\u0436\u0430\u043d\u044b', '\u0431\u0443\u043a\u0432\u044b', '\u0433\u043e\u043b\u044c\u0444\u044b', '\u0433\u0440\u0430\u043c\u043c\u044b', '\u0433\u0443\u0441\u0430\u0440\u044b',\n                    '\u0434\u0435\u043b\u0430', '\u043a\u0430\u0434\u0435\u0442\u044b', '\u043a\u0438\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u044b', '\u043e\u043c\u044b', '\u043f\u043e\u043c\u0438\u0434\u043e\u0440\u044b', '\u0440\u0435\u043d\u0442\u0433\u0435\u043d\u044b',\n                    '\u0431\u043e\u0442\u0438\u043d\u043a\u0438', '\u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0438', '\u0447\u0443\u043b\u043a\u0438', '\u0448\u043e\u0440\u0442\u044b'\n                ];\n\n                const explicitOvAndZeroEnding = [\n                    '\u0433\u0435\u043a\u0442\u0430\u0440\u044b', '\u0440\u0435\u043b\u044c\u0441\u044b'\n                ];\n\n                const explicitZeroEnding = explicitZeroEndingCommonGenderSurnameLike.concat([\n                    '\u0431\u0435\u0434\u043d\u044f\u0433\u0438', '\u0431\u0435\u0434\u043e\u043b\u0430\u0433\u0438', '\u0431\u043e\u043b\u0433\u0430\u0440\u044b', '\u0431\u0440\u043e\u0434\u044f\u0433\u0438', '\u0431\u0440\u044b\u0437\u0433\u0438', '\u0431\u0440\u044e\u043a\u0438', '\u0431\u0440\u044e\u0445\u0438', '\u0431\u0443\u0434\u0434\u044b', '\u0431\u0443\u0441\u044b',\n                    '\u0432\u0430\u043b\u0435\u043d\u043a\u0438', '\u0432\u0435\u043a\u0438', '\u0432\u0435\u043b\u044c\u043c\u043e\u0436\u0438', '\u0432\u0435\u0440\u0437\u0438\u043b\u044b', '\u0432\u0438\u043b\u044b', '\u0432\u043b\u0430\u0434\u044b\u043a\u0438', '\u0432\u043e\u0435\u0432\u043e\u0434\u044b', '\u0432\u043e\u043b\u043e\u0441\u044b', '\u0432\u043e\u044f\u043a\u0438',\n                    '\u0433\u043b\u0430\u0432\u044b', '\u0433\u0440\u0443\u0437\u0438\u043d\u044b', '\u0437\u0430\u0434\u0432\u043e\u0440\u043a\u0438', '\u0437\u0430\u0434\u0438\u0440\u044b',\n                    '\u0436\u0435\u043b\u0435\u0437\u044b', // \u0436\u0435\u043b\u0451\u0437\n                    '\u0436\u0438\u043b\u044b', '\u0437\u0430\u043d\u0443\u0434\u044b', '\u0437\u0435\u0432\u0430\u043a\u0438',\n                    '\u0438\u043c\u0435\u043d\u0438\u043d\u044b', '\u043a\u0430\u043b\u0435\u043a\u0438', '\u043a\u0430\u043b\u044c\u0441\u043e\u043d\u044b', '\u043a\u0430\u043d\u0438\u043a\u0443\u043b\u044b', '\u043a\u043e\u043b\u0433\u043e\u0442\u043a\u0438', '\u043a\u043e\u043b\u043b\u0435\u0433\u0438', '\u043a\u0440\u043e\u0445\u0438', '\u043a\u0443\u0440\u0438\u0446\u044b', '\u043a\u0443\u0440\u044b',\n                    '\u043b\u0430\u0434\u043e\u0448\u0438', '\u043b\u0430\u043c\u044b', '\u043c\u0430\u043a\u0430\u0440\u043e\u043d\u044b', '\u043c\u0443\u0436\u0447\u0438\u043d\u044b',\n                    '\u043d\u0430\u043f\u0430\u0434\u043a\u0438', '\u043d\u0430\u0440\u044b', '\u043d\u0435\u043f\u043e\u0441\u0435\u0434\u044b', '\u043d\u043e\u0441\u0438\u043b\u043a\u0438', '\u043d\u043e\u0436\u043d\u044b',\n                    '\u043f\u0430\u043f\u044b', '\u043f\u0430\u043f\u0430\u0448\u0438', '\u0442\u0430\u0442\u044b', '\u043f\u0430\u0434\u043b\u044b', '\u043f\u0430\u0440\u0442\u0438\u0437\u0430\u043d\u044b', '\u043f\u043e\u0433\u043e\u043d\u044b', '\u043f\u043e\u043c\u0438\u043d\u043a\u0438', '\u043f\u043e\u0441\u0438\u0434\u0435\u043b\u043a\u0438', '\u043f\u043e\u0445\u043e\u0440\u043e\u043d\u044b',\n                    '\u043f\u0440\u0435\u0434\u0442\u0435\u0447\u0438', '\u0440\u0430\u0431\u043e\u0442\u044f\u0433\u0438', '\u0440\u0430\u0437\u044b', '\u0440\u0435\u0431\u044f\u0442\u043a\u0438', '\u0440\u0443\u043c\u044b\u043d\u044b', '\u0441\u0430\u043c\u043e\u0443\u0431\u0438\u0439\u0446\u044b', '\u0441\u0430\u043d\u043a\u0438', '\u0443\u0431\u0438\u0439\u0446\u044b',\n                    '\u0441\u0430\u043f\u043e\u0433\u0438', '\u0441\u0430\u0442\u0430\u043d\u044b', '\u0441\u0438\u0440\u043e\u0442\u044b', '\u0441\u043b\u0438\u0432\u043a\u0438', '\u0441\u043b\u0443\u0433\u0438', '\u0441\u043e\u043b\u0434\u0430\u0442\u044b',\n                    '\u0441\u0442\u0430\u0440\u043e\u0441\u0442\u044b', '\u0441\u0443\u043c\u0435\u0440\u043a\u0438', '\u0441\u0443\u0442\u043a\u0438',\n                    '\u0442\u0430\u0442\u0430\u0440\u044b', '\u0442\u0435\u043b\u0435\u0441\u0430',\n                    '\u0445\u0438\u0442\u0440\u044e\u0433\u0438', '\u0447\u0435\u0442\u0432\u0435\u0440\u0435\u043d\u044c\u043a\u0438', '\u0448\u043b\u044f\u043f\u044b', '\u0448\u043c\u043e\u0442\u043a\u0438', '\u044f\u0431\u043b\u043e\u043a\u0438',\n                    // \u0421\u043c. \u043a\u043e\u0434 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 genitiveStem.\n                    '\u0434\u044f\u0434\u044c\u043a\u0438', '\u0434\u044f\u0434\u0435\u043d\u044c\u043a\u0438', '\u0437\u0430\u0439\u043a\u0438', '\u043a\u0440\u043e\u0441\u0441\u043e\u0432\u043a\u0438', '\u043c\u0430\u043b\u044e\u0442\u043a\u0438', '\u043c\u0430\u043b\u043e\u043b\u0435\u0442\u043a\u0438',\n                    '\u043f\u043e\u043f\u043a\u0438', '\u0442\u0443\u0440\u043a\u0438', '\u0443\u0437\u044b', '\u0445\u043b\u043e\u043f\u043e\u0442\u044b', '\u0448\u0430\u0445\u043c\u0430\u0442\u044b'\n                ]);\n\n                const mShki = [\n                    '\u0431\u0440\u0430\u0442\u0438\u0448\u043a\u0438', '\u0434\u0440\u0443\u0436\u043a\u0438', '\u043c\u0430\u043b\u044c\u0447\u0438\u0448\u043a\u0438', '\u043f\u0430\u0440\u043d\u0438\u0448\u043a\u0438',\n                    '\u0441\u044b\u043d\u0438\u0448\u043a\u0438', '\u043f\u0430\u043f\u043e\u0447\u043a\u0438', '\u0434\u0435\u0434\u0443\u0448\u043a\u0438', '\u0434\u044f\u0434\u044e\u0448\u043a\u0438', '\u0431\u0430\u0442\u044e\u0448\u043a\u0438',\n                    '\u0433\u043e\u0440\u043e\u0434\u0438\u0448\u043a\u0438', '\u0434\u043e\u043c\u0438\u0448\u043a\u0438'\n                ];\n\n                // \u043c\u0430\u043b\u044b\u0448\u043a\u0438\n\n                // \u0440\u043e\u0436\u043a\u0438\n\n                // \u043b\u0438\u0441\u0442\u044c\u044f\n                // \u043c\u043e\u043b\u043e\u0434\u0446\u044b\n\n                if (((gender === Gender.COMMON)\n                        && !endsWithAny(lcPlural, iEy)\n                        && !(['\u0436', '\u0448', '\u0447'].includes(lastOf2Initial)))\n                    || explicitZeroEnding.includes(lcPlural)\n                    || (lemma.lower() === '\u0431\u0430\u0440\u0438\u043d')) {\n                    return genitiveStem();\n                } else if (explicitOv.includes(lcPlural)) {\n                    return init(plural) + '\u043e\u0432';\n                } else if (explicitZeroEndingAndOv.includes(lcPlural)) {\n                    return [\n                        genitiveStem(),\n                        init(plural) + '\u043e\u0432'\n                    ];\n                } else if (explicitOvAndZeroEnding.includes(lcPlural)) {\n                    return [\n                        init(plural) + '\u043e\u0432',\n                        genitiveStem()\n                    ];\n                } else if (endsWithAny(lcPlural,\n                        ['\u0436\u0438', '\u0448\u0438', '\u0447\u0438',\n                            '\u043b\u044f', '\u043b\u0438', '\u0447\u0438', '\u0440\u0438', '\u0442\u0438', '\u0434\u0438',\n                            '\u0431\u043e\u0440\u0449\u0438', '\u043a\u043b\u0435\u0449\u0438', '\u0442\u043e\u0432\u0430\u0440\u0438\u0449\u0438',\n                            '\u043f\u043b\u0430\u0449\u0438', '\u043f\u0440\u044b\u0449\u0438', '\u0445\u0440\u044f\u0449\u0438'])\n                    || iEy.includes(lcPlural)\n                    || (lemma.lower().endsWith('\u044c') && !endsWithAny(lemma.lower(), [\n                        '\u0437\u044f\u0442\u044c', '\u0434\u0435\u0432\u0435\u0440\u044c'\n                    ]))\n                    || ('\u0449\u0438' === lcPlural)) {\n\n                    let s = ('\u044c' === last(init(lcPlural))) ? nInit(plural, 2) : init(plural);\n                    return s + '\u0435\u0439';\n\n                } else if (endsWithAny(lcPlural, [\n                    '\u0431\u0440\u0430\u0442\u044c\u044f', '\u0431\u0440\u0443\u0441\u044c\u044f', '\u0434\u0435\u0440\u0435\u0432\u044c\u044f', '\u0434\u043e\u043d\u044c\u044f', '\u0437\u0432\u0435\u043d\u044c\u044f',\n                    '\u043a\u043b\u0438\u043d\u044c\u044f', '\u043a\u043b\u043e\u0447\u044c\u044f', '\u043a\u043e\u043b\u0435\u043d\u044c\u044f', '\u043a\u043e\u043b\u043e\u0441\u044c\u044f', '\u043a\u043e\u043b\u044c\u044f', '\u043a\u043e\u043c\u044c\u044f', '\u043a\u0440\u044b\u043b\u044c\u044f',\n                    '\u043b\u0438\u0441\u0442\u044c\u044f', '\u043b\u043e\u0441\u043a\u0443\u0442\u044c\u044f', '\u043b\u043e\u0445\u043c\u043e\u0442\u044c\u044f', '\u043f\u0435\u0440\u044c\u044f', '\u043f\u043b\u0430\u0442\u044c\u044f', '\u043f\u043e\u0432\u043e\u0434\u044c\u044f', '\u043f\u0440\u0443\u0442\u044c\u044f',\n                    '\u0441\u0442\u0443\u043b\u044c\u044f', '\u0441\u0443\u0447\u044c\u044f', '\u0443\u043b\u044c\u0438', '\u0445\u043b\u043e\u043f\u044c\u044f', '\u0448\u0438\u043b\u044c\u044f'\n                ])) {\n                    return init(plural) + '\u0435\u0432';\n                } else if (endsWithAny(lcPlural, [\n                        '\u0437\u044f\u0442\u044c\u044f', '\u043a\u0443\u043c\u043e\u0432\u044c\u044f', '\u0434\u0435\u0432\u0435\u0440\u044c\u044f', '\u043a\u0440\u0430\u044f', '\u043a\u043b\u0435\u0438', '\u0445\u043e\u043b\u0443\u0438'\n                    ])\n                    || [rk('\u0444\u0442\u0437'), '\u0447\u0430\u0438'].includes(lcPlural)) {\n                    return init(plural) + '\u0451\u0432';\n                } else if (endsWithAny(lcPlural, ['\u043c\u0435\u0441\u0441\u0438\u0438'])) {\n                    return init(plural) + '\u0439';\n                } else if (endsWithAny(lcPlural, ['\u044c\u044f', '\u0438\u044f'])) {\n                    if (Gender.MASCULINE === gender) {\n                        return nInit(plural, 2) + '\u0435\u0439';\n                    } else {\n                        return nInit(plural, 2) + '\u0438\u0439';\n                    }\n                } else if (endsWithAny(lcPlural, ['\u0441\u0435\u043c\u0435\u043d\u0430', '\u0441\u0442\u0440\u0435\u043c\u0435\u043d\u0430'])) {\n                    return nInit(plural, 3) + '\u044f\u043d';\n                } else if (lcPlural.endsWith('\u043c\u0435\u043d\u0430')) {\n                    return nInit(plural, 3) + '\u0451\u043d';\n                } else if (lemma.lower().endsWith('\u044f\u0439\u0446\u043e')) {\n                    return upperLike('\u044f\u0438\u0446', init(plural))\n                } else if (lcPlural.endsWith('\u043d\u0446\u0430')) {\n                    return [genitiveStem(), init(plural) + '\u0435\u0432'];\n                } else if (endsWithAny(lcPlural, ['\u0430', '\u043d\u0435', '\u0438\u0449\u0438'])\n                    && !endsWithAny(lcPlural, explicitOv1)\n                ) {\n                    return genitiveStem();\n                } else if (endsWithAny(lcPlural, ['\u043d\u0438\u0446\u044b', '\u043b\u0438\u0446\u044b', '\u043f\u0438\u0446\u044b', '\u0431\u0438\u0446\u044b'])) {\n                    return init(plural);\n                } else if ((lcPlural.endsWith('\u0446\u044b'))\n                    || (lcPlural.endsWith('\u0438') && isVowel(lastOfNInitial(lcPlural, 1)))\n                ) {\n                    return init(plural) + '\u0435\u0432';\n                } else if (endsWithAny(lcPlural, ['\u0436\u043a\u0438', '\u0448\u043a\u0438', '\u0447\u043a\u0438'])\n                    && ((Gender.MASCULINE !== gender) || endsWithAny(lcPlural, mShki))\n                    && !(lemma.lower().endsWith('\u043e\u043a'))) {\n                    return genitiveStem();\n                } else if (lcPlural.endsWith('\u044c\u0438')) {\n                    if (Gender.MASCULINE === gender) {\n                        return init(plural) + '\u0451\u0432';\n                    } else {\n                        return nInit(plural, 2) + '\u0435\u0439';\n                    }\n                } else if (endsWithAny(lcPlural, ['\u044b', '\u0438', '\u0430'])) {\n                    return init(plural) + '\u043e\u0432';\n                }\n            }\n\n            if (lcPlural.endsWith('\u0439\u043a\u0438')) {\n                return nInit(plural, 3) + '\u0435\u043a';\n            } else if (lcPlural.endsWith('\u043a\u0438')) {\n                if (lastOf2Initial === '\u044c') {\n                    const end = last(init(plural));\n                    return nInit(plural, 3) + upperLike('\u0435', end) + end;\n                } else if (['\u0436', '\u0448', '\u0447'].includes(lastOf2Initial)) {\n                    return genitiveStem();\n                } else if (consonantsExceptJ.includes(lastOf2Initial)) {\n                    return nInit(plural, 2) + '\u043e\u043a';\n                }\n            }\n\n            if (iEy.includes(lcPlural)) {\n                return init(plural) + '\u0435\u0439';\n            } else if (endsWithAny(lcPlural, ['\u0430\u0438', '\u043e\u0438', '\u0435\u0438', '\u044d\u0438', '\u0443\u0438'])) {\n                return init(plural) + '\u0439';\n            } else if ('\u0441\u0432\u0435\u0447\u0438' === lcPlural) {\n                return [init(plural), init(plural) + '\u0435\u0439'];\n            } else if ('\u043f\u0440\u0438\u0433\u043e\u0440\u0448\u043d\u0438' === lcPlural) {\n                return [init(plural) + '\u0435\u0439', nInit(plural, 2) + '\u0435\u043d'];\n            } else if ('\u0442\u0438\u0445\u043e\u043d\u0438' === lcPlural) {\n                return [nInit(plural, 2) + '\u043d\u044c', init(plural) + '\u0435\u0439'];\n            }\n\n            if (endsWithAny(lcPlural, ['\u044c\u0438', '\u0438\u0438'])) {\n                if (engine.sd.hasStressedEndingSingular(lemma, grCase).includes(true)) {\n                    return nInit(plural, 2) + '\u0435\u0439';\n                } else {\n                    return nInit(plural, 2) + '\u0438\u0439';\n                }\n            }\n\n            if (lcPlural.endsWith('\u043d\u0438') && consonantsExceptJ.includes(lastOfNInitial(lcPlural, 2))) {\n                if (['\u0431\u0430\u0440\u044b\u0448\u043d\u0438', '\u0431\u043e\u044f\u0440\u044b\u0448\u043d\u0438', '\u0434\u0435\u0440\u0435\u0432\u043d\u0438'].includes(lcPlural)) {\n                    return nInit(plural, 2) + '\u0435\u043d\u044c';\n                } else if (lcPlural.endsWith('\u043a\u0443\u0445\u043d\u0438')) {\n                    return nInit(plural, 2) + '\u043e\u043d\u044c';\n                } else {\n                    return nInit(plural, 2) + '\u0435\u043d';\n                }\n            }\n\n            if (stem.toLowerCase().endsWith('\u0438\u0439\u043a')) {\n                return nInit(stem, 2) + '\u0435\u043a';\n            }\n\n            if ((stem.length === lcPlural.length - 1) && endsWithAny(lcPlural, softEndings)) {\n\n                if (['\u044c', '\u0439'].includes(lastOfNInitial(stem, 1).toLowerCase()) && !lemma.isAnimate()) {\n                    const end = last(stem);\n                    return nInit(stem, 2) + upperLike('\u0435', end) + end;\n                } else if (endsWithAny(lcPlural, ['\u0437\u0435\u043c\u043b\u0438', '\u043f\u0435\u0442\u043b\u0438'])) {\n                    return init(stem) + '\u0435\u043b\u044c';\n                } else {\n                    return stem + '\u044c';\n                }\n\n            } else {\n                return genitiveStem();\n            }\n\n        }\n\n        return plural;\n    }\n\n    return Object.freeze(API);\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","root","factory","define","amd","RussianNouns","self","validateCreateLemma","o","fieldName","x","text","pluraleTantum","pluraliaTantum","gender","Object","values","Gender","includes","createLemmaNoThrow","result","Lemma","freeze","createLemma","r","LemmaException","getNounStem0","word","lcLastChar","last","toLowerCase","vowels","character","substring","length","n","getNounStem","lemma","lcWord","lower","getGender","endsWithAny","isAnimate","w","upperLike","endsWith","split","filter","isVowel","consonantsExceptJ","en2a2b","MASCULINE","getDeclension","isPluraleTantum","isIndeclinable","t","FEMININE","consonants","NEUTER","COMMON","Error","tsStem","head","lcHead","init","nLast","every","l","isAName","beforeLe","okWord","tok","tok2","exceptThese","halfSomething","startsWith","subWord","offset","search","decline0","engine","grCase","Case","INSTRUMENTAL","decline3","NOMINATIVE","ACCUSATIVE","GENITIVE","DATIVE","PREPOSITIONAL","LOCATIVE","decline1","half","h","lemmaCopy","newText","s","decline2","stem","soft","softD1","lcStem","eStem","f","stressedEnding","sd","hasStressedEndingSingular","push","map","b","unYo","iyWord","eiStem","iyoy","addUForm","concat","isASurname","indexOf","a","i","locativeConfigs","locativeDictionary","get","unique","declensionTypes","declensionType","dType","toLocativeSingular1","ayaWord","yayaWord","ayaExceptions","keys","specialD3","decline","pluralForm","declinePlural","declension","LocativeDeclensionType","U_SUFFIX","pluralize","softPatronymicForm2","part","simpleFirstPart","index","pattern","toUpperCase","lowerCase","yeruOrI","doNotUnYo","softPatronymic","Array","prototype","apply","hasStressedEndingPlural","yoStem","stressedStem","replace","Math","max","lastIndexOf","stressedEndingCopy","slice","highPriorityExceptions","undefined","key","genderExceptions","keyAnimate","keyGender","hasOwnProperty","v","yaD1","softStemD1","aYaWords","aYaWords2","aYaWords3","aYaWords4","ya2","ya3","softSignOnly","isATransport","plural","lcPlural","softEndings","c","unYoUnstressed","explicitZeroEndingCommonGenderSurnameLike","surnameType1E","genitiveStem","dependsOnStress","end","lastOf2Initial","iEy","explicitOv1","explicitOv","explicitZeroEnding","mShki","explicitZeroEndingAndOv","explicitOvAndZeroEnding","rk","CASES","ch","String","fromCharCode","charCodeAt","join","constructor","indeclinable","animate","surname","name","transport","internalText","lowerCaseText","internalGender","newGender","equals","fuzzyEquals","isPluraliaTantum","StressDictionaryException","str","arr","item","Dictionary","data","put","value","lemmaObject","hash","homonyms","found","find","ls","putAll","lemmaPrototype","joinedWordList","list","assign","fuzzy","remove","pair","LocativeFormAttribute","CONTAINER","LOCATION","STRUCTURE","SURFACE","WAY","OBJECT_WITH_FUNCTIONAL_SURFACE","SUBSTANCE","RESOURCE","CONDITION","EXPOSURE","MOTION","EVENT","WITH_ADJECTIVE","WITHOUT_ADJECTIVE","RELIGIOUS","LocativeForm","preposition","attributes","LocativeConfig","makeDefaultLocativeDictionary","addConfig","condition","ps","ws","dTypes","andConditions","prepositions","words","configArray","dictionary","p","d","m","mAnimate","two_and_five","API","getSchoolDeclension","FIXED_STEM_STRESS","FIXED_ENDING_STRESS","StressDictionary","settings","match","caseIndex","singular","Engine","ma","grammaticalCase","getLocativeForms","configs"]
}
