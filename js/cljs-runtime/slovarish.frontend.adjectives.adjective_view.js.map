{"version":3,"sources":["slovarish/frontend/adjectives/adjective_view.cljs"],"mappings":"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","names":["slovarish.frontend.adjectives.adjective-view/special-stem-type","form","clojure.string/ends-with?","cljs.core._EQ_","letter","cljs.core/re-find","clojure.string/includes?","slovarish.frontend.adjectives.adjective-view/endings","gender","possessive?","end-stress?","special-stem","G__80728","or__4253__auto__","and__4251__auto__","fexpr__80729","fexpr__80730","slovarish.frontend.adjectives.adjective-view/show-long-forms","long-form","reflexive?","vec__80733","cljs.core.nth","_","stem","m-end","fexpr__80736","cljs.core.doall","iter__4652__auto__","s__80738","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__80740","cljs.core/chunk-buffer","i__80739","vec__80741","cljs.core/-nth","vec__80744","seq__80745","first__80746","cljs.core/first","cljs.core/next","vec__80747","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__80737","cljs.core/chunk-rest","vec__80760","vec__80763","seq__80764","first__80765","vec__80766","cljs.core/cons","cljs.core/rest","emoji","strong?","nom","other-cases","a","b","p1__80731#","cljs.core.juxt","cljs.core.subs","slovarish.frontend.display-inflections/destress","slovarish.frontend.display_inflections.dstr","s__80751","b__80753","i__80752","vec__80754","iter__80750","vec__80757","s__80770","b__80772","i__80771","vec__80773","iter__80769","vec__80776","p1__80732#","slovarish.frontend.adjectives.adjective-view/buffer-vowel-idx","m","cljs.core.not_EQ_","clojure.string/replace","vec__80779","vec__80782","old","end-1","chars","new","end-2","slovarish.frontend.adjectives.adjective-view/irregular-short-forms","slovarish.frontend.adjectives.adjective-view/stress-index","slovarish.frontend.adjectives.adjective-view/short-form-has-diff-stem-stress?","short-forms","cljs.core/not","cljs.core/select-keys","cljs.core/vals","cljs.core/flatten","p1__80785#","cljs.core.remove","p1__80786#","cljs.core/not-any?","p__80790","map__80791","cljs.core/--destructure-map","cljs.core.get","slovarish.frontend.adjectives.adjective-view/breakdown-short-forms","f","n","p","p1__80787#","fv-idx","cljs.core/deref","slovarish.frontend.state/input","cljs.core/every?","cljs.core/string?","slovarish.frontend.display-inflections/monosyllable?","p1__80788#","slovarish.frontend.display-inflections/display-form","cljs.core/seq?","cljs.core/second","p1__80789#","s__80793","b__80795","i__80794","vec__80796","vec__80799","iter__80792","vec__80802","vec__80805","forms","cljs.core/coll?","slovarish.frontend.adjectives.adjective-view/rus-participle","string","G__80808","p__80809","map__80810","slovarish.frontend.adjectives.adjective-view/adj-table","adjective?","from-verb","from-noun","comparatives","superlatives","adverb","self","vec__80811","without-reflexive","mark-sf-stress?","cljs.core.filter","alternates?","cljs.core/some","cljs.core.apply","cljs.core/concat","verb","G__80814","G__80815","cljs.core/Keyword","js/Error","slovarish.frontend.state/display-language","G__80816","G__80817","G__80818","s__80820","b__80822","i__80821","map__80823","iter__80819","map__80828","class","distinction","participle?","sf","no-long-form?","fexpr__80824","fexpr__80829","slovarish.frontend.gloss/smart-quotes","G__80825","G__80830","G__80826","G__80831","slovarish.frontend.navigation.go_to_word","G__80827","G__80832","G__80833","G__80834","G__80835","s__80837","b__80839","i__80838","iter__80836","noun","G__80840","cljs.core/chunk-first"],"sourcesContent":["(ns slovarish.frontend.adjectives.adjective-view\n  (:require [clojure.string :as s]\n            [slovarish.frontend.state :refer [input display-language]]\n            [slovarish.frontend.navigation :refer [go-to-word]]\n            [slovarish.frontend.display-inflections :refer [destress display-form dstr monosyllable?]]\n            [slovarish.frontend.gloss :refer [smart-quotes]]))\n\n(defn special-stem-type\n  [form]\n  (if (or (s/ends-with? form \"\u043d\u0438\u0439\") (= form \"\u043a\u0430\u0301\u0440\u0438\u0439\"))\n    :soft\n    (let [letter (re-find #\".(?=.\\u0301?.(?:\u0441\u044f)?$)\" form)]\n      (cond\n        (s/includes? \"\u0448\u0449\u0436\u0447\" letter) :sibilant\n        (s/includes? \"\u043a\u0433\u0445\" letter)  :velar\n        :else nil))))\n\n(defn endings\n  [gender possessive? end-stress? special-stem]\n  (case gender\n    \"masculine\"\n    (cond\n      possessive?            [:strong nil \"\u044c\u0435\u0433\u043e\" \"\u044c\u0435\u043c\u0443\" \"\u044c\u0438\u043c\" \"\u044c\u0435\u043c\"]\n      (or (and (= :sibilant special-stem) end-stress?)\n          (= :velar special-stem))\n      ,                      [nil nil \"\u043e\u0433\u043e\" \"\u043e\u043c\u0443\" \"\u0438\u043c\" \"\u043e\u043c\"]\n      end-stress?            [nil nil \"\u043e\u0433\u043e\" \"\u043e\u043c\u0443\" \"\u044b\u043c\" \"\u043e\u043c\"]\n      (#{:sibilant :soft} special-stem)\n      ,                      [:strong nil \"\u0435\u0433\u043e\" \"\u0435\u043c\u0443\" \"\u0438\u043c\" \"\u0435\u043c\"]\n      :else                  [nil nil \"\u043e\u0433\u043e\" \"\u043e\u043c\u0443\" \"\u044b\u043c\" \"\u043e\u043c\"])\n    \"feminine\"\n    (cond\n      possessive?            [:strong \"\u044c\u044f\" \"\u044c\u044e\" \"\u044c\u0435\u0439\"]\n      (= special-stem :soft) [:strong \"\u044f\u044f\" \"\u044e\u044e\" \"\u0435\u0439\"]\n      :else                  [nil \"\u0430\u044f\" \"\u0443\u044e\" \"\u043e\u0439\"])\n    \"neuter\"\n    (cond\n      possessive?            [:strong \"\u044c\u0435\" \"\u044c\u0435\u0433\u043e\" \"\u044c\u0435\u043c\u0443\" \"\u044c\u0438\u043c\" \"\u044c\u0435\u043c\"]\n      (or (and (= :sibilant special-stem) end-stress?)\n          (= :velar special-stem))\n      ,                      [nil \"\u043e\u0435\" \"\u043e\u0433\u043e\" \"\u043e\u043c\u0443\" \"\u0438\u043c\" \"\u043e\u043c\"]\n      end-stress?            [nil \"\u043e\u0435\" \"\u043e\u0433\u043e\" \"\u043e\u043c\u0443\" \"\u044b\u043c\" \"\u043e\u043c\"]\n      (#{:sibilant :soft} special-stem)\n      ,                      [:strong \"\u0435\u0435\" \"\u0435\u0433\u043e\" \"\u0435\u043c\u0443\" \"\u0438\u043c\" \"\u0435\u043c\"]\n      :else                  [nil \"\u043e\u0435\" \"\u043e\u0433\u043e\" \"\u043e\u043c\u0443\" \"\u044b\u043c\" \"\u043e\u043c\"])\n    \"plural\"\n    (cond\n      possessive?   [:strong \"\u044c\u0438\" \"\u044c\u0438\u0445\" \"\u044c\u0438\u043c\" \"\u044c\u0438\u043c\u0438\"]\n      special-stem  [:strong \"\u0438\u0435\" \"\u0438\u0445\" \"\u0438\u043c\" \"\u0438\u043c\u0438\"]\n      :else         [nil \"\u044b\u0435\" \"\u044b\u0445\" \"\u044b\u043c\" \"\u044b\u043c\u0438\"])\n    nil))\n\n(defn show-long-forms\n  [long-form reflexive?]\n  (when long-form\n    (let [[_ stem m-end] (re-find #\"((?:[^\\u0301]\\u0301?)+)([^\\u0301]\\u0301?\u0439)$\" long-form)\n          possessive?    (#{\"\u0442\u0440\u0435\u0301\u0442\u0438\u0439\" \"\u0447\u0435\u0439\"} long-form)\n          end-stress?    (re-find #\"\\u0301(?=\\S$)\" long-form)\n          special-stem   (special-stem-type long-form)]\n      [:<>\n\n       (doall\n         (for [[emoji gender] [[\"\ud83d\udc68\" \"masculine\"] [\"\ud83d\udc69\" \"feminine\"]\n                               [\"\ud83d\udc7d\" \"neuter\"] [\"\ud83d\udc6b\" \"plural\"]]\n               :let [[strong? nom & other-cases] (endings gender possessive? end-stress? special-stem)\n                     [a b]                       ((juxt first #(subs % 1)) (or nom (destress m-end)))]]\n           ^{:key gender}\n           [:<>\n            [:div.column\n             [:div.top-row {:class gender}\n              [:div.emoji emoji]\n              [:span.word-form {:class gender}\n               (if strong?\n                 [:<> [:strong (dstr a end-stress?)] b]\n                 (dstr a end-stress? b))\n               reflexive?]]\n\n             [:div.oblique-drawer {:class gender}\n              (doall\n                (for [form (cons nom other-cases)\n                      :let [[a b] ((juxt first #(subs % 1)) (or form (destress m-end)))]]\n                  ^{:key (str gender form)}\n                  [:<>\n                   [:div.word-form.oblique.light {:class gender}\n                    [:span\n                     (dstr stem)\n                     [:span.ending\n                      (if strong?\n                        [:<> [:strong (dstr a end-stress?)] b]\n                        (dstr a end-stress? b))]\n                     reflexive?]]]))]]]))])))\n\n(defn buffer-vowel-idx\n  [long-form m]\n  (when (and long-form\n             m\n             (not= m (s/replace long-form #\"\u043d+\u044b\u0439$\" \"\u043d\")))\n    (let [[_ old end-1] (re-find #\"(.)(.)(?=.{2}$)\" (destress long-form))\n          [_ chars new end-2] (re-find #\"(.*?)(.)(.)$\" (destress m))]\n      (when (and (not= old new) (= end-1 end-2))\n        (count chars)))))\n\n(def irregular-short-forms ; Wade's grammar, section 162\n  #{\"\u0431\u043e\u043b\u044c\u0448\u043e\u0301\u0439\" \"\u0434\u043e\u0441\u0442\u043e\u0301\u0439\u043d\u044b\u0439\" \"\u0438\u0301\u0441\u043a\u0440\u0435\u043d\u043d\u0438\u0439\" \"\u043c\u0430\u0301\u043b\u0435\u043d\u044c\u043a\u0438\u0439\" \"\u0441\u0438\u0301\u043d\u0438\u0439\" \"\u0441\u043e\u0301\u043b\u0451\u043d\u044b\u0439\"})\n\n(defn stress-index\n  \"Rough approxmination of stem stress index.\"\n  [form]\n  (count (re-find #\".+?[\\u0301\u0451]\" form)))\n\n(defn short-form-has-diff-stem-stress?\n  \"Marks adjectives like \u0434\u0435\u0448\u0451\u0432\u044b\u0439, \u0441\u0447\u0430\u0441\u0442\u043b\u0438\u0432\u044b\u0439.\"\n  [long-form short-forms]\n  (when (and long-form\n             short-forms\n             (not= long-form \"\u0441\u043c\u0435\u0448\u043d\u043e\u0301\u0439\")\n             (not (irregular-short-forms long-form)))\n    (->> (select-keys short-forms [:m :f :n :p])\n         (vals)\n         (flatten)\n         (remove #(or (nil? %)\n                      (s/ends-with? % \"\\u0301\")))\n         (not-any? #(= (stress-index %)\n                       (stress-index long-form))))))\n\n(defn breakdown-short-forms\n  [{:keys [m f n p]}]\n  (let [fv-idx      (buffer-vowel-idx @input (if (string? m)\n                                               (destress m)\n                                               (destress (first m))))\n        end-stress? #(s/ends-with? % \"\\u0301\")]\n    (if (and (every? string? [m f n p])\n             (not (monosyllable? m))\n             (every? #(= m (s/replace % #\".\\u0301?$\" \"\")) [f n p]))\n      [:div.column.quad-gradient\n       [display-form \"quad-gradient single short-form light\"\n        (str m \" + \" (re-find #\".\\u0301?$\" f) \", \" (re-find #\".\\u0301?$\" n) \", \" (re-find #\".\\u0301?$\" p))]]\n\n      [:<>\n       (cond\n         (nil? m) [:div.column.short-form.no-form.italic.sans\n                   \"(no masculine short form)\"]\n         (seq? m) [:div.column\n                   [display-form [\"masculine primary on short-form\" (if fv-idx \"irregular-form\" \"light\")]\n                                 (first m) :fv-idx fv-idx]\n                   [display-form [\"masculine alternate off d-none short-form\" (if (> fv-idx (count (second m))) \"irregular-form\" \"light\")]\n                                 (second m) :fv-idx fv-idx]]\n         :else    [:div.column\n                   [display-form [\"masculine single short-form\" (if fv-idx \"irregular-form\" \"light\")]\n                    m :fv-idx fv-idx]])\n\n       (cond\n         (and (every? string? [f n p])\n              (every? #(s/includes? % (s/replace f #\".\\u0301?$\" \"\")) [n p]))\n         [:div.column.triple-gradient\n          [display-form [\"triple-gradient single short-form\" (if (end-stress? f)\n                                                               \"unpredictable-stress\"\n                                                               \"light\")]\n           (str f \", -\" (re-find #\".\\u0301?$\" n) \", -\" (re-find #\".\\u0301?$\" p))]]\n\n         :else\n         (doall\n           (for [[gender [a b :as forms]] [[\"feminine\" f]\n                                           [\"neuter\" n]\n                                           [\"plural\" p]]]\n             (cond\n               (nil? forms)\n               [:div.column.short-form.no-form.italic.sans\n                \"(no \" gender \" short form)\"]\n\n               (coll? forms)\n               ^{:key gender}\n               [:div.column\n                [display-form [gender \"primary on short-form\" (if (end-stress? a) \"unpredictable-stress\" \"light\")] a]\n                [display-form [gender \"alternate off d-none short-form\" (if (end-stress? b) \"unpredictable-stress\" \"light\")] b]]\n               :else\n               ^{:key gender}\n               [:div.column\n                [display-form [gender \"single short-form\" (if (end-stress? forms) \"unpredictable-stress\" \"light\")] forms]]))))])))\n\n(defn rus-participle\n  [string]\n  string\n  (cond-> \"\u043f\u0440\u0438\u0447.\"\n    (s/includes? string \"active\")              (str \" \u0434\u0435\u0439\u0441\u0442\u0432.\")\n    (s/includes? string \"passive\")             (str \" \u0441\u0442\u0440\u0430\u0434.\")\n    (s/includes? string \"present\")             (str \" \u043d\u0430\u0441\u0442. \u0432\u0440.\")\n    (s/includes? string \"past\")                (str \" \u043f\u0440\u043e\u0448. \u0432\u0440.\")\n    :always                                    (str \" \u0433\u043b\u0430\u0433\u043e\u043b\u0430\")\n    (s/includes? string \"imperfective\")        (str \" \u041d\u0421\u0412\")\n    (not (s/includes? string \"imperfective\"))  (str \" \u0421\u0412\")))\n\n(defn adj-table\n  [{:keys [adjective? from-verb from-noun long-form\n           short-forms comparatives superlatives adverb] :as self}]\n  (let [[_ without-reflexive reflexive?]\n        ,                (when long-form (re-find #\"(.+?)(\u0441[\u044f\u044c])?$\" long-form))\n        mark-sf-stress?  (short-form-has-diff-stem-stress? long-form\n                                                           (first (filter :class short-forms)))\n        alternates?      (some coll? (vals (apply concat short-forms)))\n        verb             (or from-verb (some-> short-forms first :from-verb))] ; \u043f\u0440\u043e\u0448\u0435\u0434\u0448\u0438\u0439, \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439\n    (when self\n      [:div#adj-table\n\n       [:div.column-header.sans\n        (case @display-language\n          :english \"long form\"\n          :russian \"\u043f\u043e\u043b\u043d\u0430\u044f \u0444\u043e\u0440\u043c\u0430\")]\n       (if long-form\n         [:div.long-forms.flex.row\n          ;; need to break up the reflexive for adjectives like \u043a\u0430\u0436\u0443\u0449\u0438\u0439\u0441\u044f\n          [show-long-forms without-reflexive reflexive?]]\n         [:div.long-forms.flex.row.no-form.italic.sans\n          (case @display-language\n            :english \"(no long form)\"\n            :russian \"(\u043f\u043e\u043b\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u044b \u043d\u0435\u0442)\")])\n\n       [:span.column-header.sans\n        {:class (when mark-sf-stress? \"unpredictable-stress\")}\n        (case @display-language\n          :english \"short form\"\n          :russian \"\u043a\u0440\u0430\u0442\u043a\u0430\u044f \u0444\u043e\u0440\u043c\u0430\")\n        (when mark-sf-stress?\n          [:span.italic.sans.note (case @display-language\n                                    :english \" (different stem stress)\"\n                                    :russian \" (\u0443\u0434\u0430\u0440\u0435\u043d\u0438\u0435 \u043f\u0430\u0434\u0430\u0435\u0442 \u043d\u0430 \u0438\u043d\u043e\u0439 \u0441\u043b\u043e\u0433)\")])]\n       (when alternates?\n         [:span.alternate-forms-trigger \"\ud83d\udd00\"])\n       (if (some :class short-forms) #_short-forms ; \u043f\u0440\u043e\u0448\u0435\u0434\u0448\u0438\u0439, \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439\n         (doall\n           (for [{:keys [m f class distinction participle? from-verb] :as sf} short-forms\n                 :let [no-long-form? (and (#{\"\u0442\u0435\u0301\u0441\u043d\u044b\u0439\" \"\u0448\u0438\u0440\u043e\u0301\u043a\u0438\u0439\" \"\u0434\u043b\u0438\u0301\u043d\u043d\u044b\u0439\" \"\u0443\u0301\u0437\u043a\u0438\u0439\"} long-form)\n                                          (s/includes? distinction \"too\"))]]\n             ^{:key (str (or m f) \"-\" class)}\n             [:<>\n              ;; TOP ROW\n              [:div.short-forms-header\n               [:div.gloss-wrapper\n                (when distinction\n                 [:div.primary-gloss.serif.default\n                  (smart-quotes distinction)\n                  [:div.gloss-popup\n                   [:ul.gloss-list\n                    [:li (smart-quotes distinction)]]]])]\n               (when no-long-form?\n                 [:span.italic.sans.note (case @display-language\n                                           :english \"(no long form)\"\n                                           :russian \"(\u043f\u043e\u043b\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u044b \u043d\u0435\u0442)\")])\n               (when (and participle? adjective?)\n                 [:div.flex.row\n                  [:div.participle-type.italic.sans.note\n                   (case @display-language\n                     :english (str (if class  ; \u043e\u0431\u0448\u0430\u0440\u043f\u0430\u043d\u043d\u044b\u0439\n                                     \"when used either as adjective or as \"\n                                     \"no short form when used as the \")\n                                   participle? \" of\")\n                     :russian (str (if class\n                                     \"\u043f\u0440\u0438 \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u0438\u0438 \u043a\u0430\u043a \u0438 \u043f\u0440\u0438\u043b. \u0438 \"\n                                     \"\u043d\u0435\u0442 \u043a\u0440\u0430\u0442\u043a\u043e\u0439 \u0444\u043e\u0440\u043c\u044b \u043f\u0440\u0438 \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u0438\u0438 \u043a\u0430\u043a \")\n                                   (rus-participle participle?)))]\n                  [:a.word-button\n                   {:on-click #(go-to-word (destress from-verb) :target-pos :verb)}\n                   from-verb]])]\n              ;; BOTTOM ROW\n              [:div.short-forms.flex.row\n               (if class\n                 [breakdown-short-forms sf]\n                 (when-not participle?\n                   [:div.no-form.italic.sans\n                    (case @display-language\n                      :english \"(has short form only when used as a participle)\"\n                      :russian \"(\u0435\u0441\u0442\u044c \u043a\u0440\u0430\u0442\u043a\u0430\u044f \u0444\u043e\u0440\u043c\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u0438\u0438 \u043a\u0430\u043a \u043f\u0440\u0438\u0447\u0430\u0441\u0442\u0438\u0435)\")]))]]))\n         [:div.short-forms.flex.row.no-form.italic.sans\n          (case @display-language\n            :english \"(no short form)\"\n            :russian \"(\u043a\u0440\u0430\u0442\u043a\u043e\u0439 \u0444\u043e\u0440\u043c\u044b \u043d\u0435\u0442)\")])\n\n       (when verb\n         [:div.flex.row\n          [:div.italic.sans.row-header (case @display-language\n                                        :english \"derived from\" :russian \"\u043e\u0442 \u0433\u043b\u0430\u0433\u043e\u043b\u0430\")]\n          [:a.word-button {:on-click #(go-to-word (destress verb) :target-pos :verb)}\n           (dstr verb)]])\n       (when from-noun\n         [:div.flex.row\n          [:div.italic.sans.row-header (case @display-language\n                                         :english \"derived from\" :russian \"\u043e\u0442 \u0441\u0443\u0449.\")]\n          (doall\n            (for [noun from-noun]\n              ^{:key noun}\n              [:a.word-button {:on-click #(go-to-word (destress noun) :target-pos :noun)}\n               (dstr noun)]))])\n\n       (when (or adverb comparatives superlatives)\n         [:div.column-header.sans\n          (case @display-language\n            :english \"other forms\"\n            :russian \"\u0434\u0440\u0443\u0433\u0438\u0435 \u0444\u043e\u0440\u043c\u044b\")])\n       [:div.more-forms\n        (when adverb\n          [:div.flex.row\n           [:div.italic.sans.row-header \"-ly\"]\n           [display-form \"default\" adverb]])\n        (when comparatives\n          [:div.flex.row\n           [:div.italic.sans.row-header \"-er\"]\n           [display-form \"default\" comparatives]])\n        (when superlatives\n          [:div.flex.row\n           [:div.italic.sans.row-header \"-est\"]\n           [display-form \"default\" superlatives]])]])))\n"]}