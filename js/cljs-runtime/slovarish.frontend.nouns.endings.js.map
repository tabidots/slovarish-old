{"version":3,"sources":["slovarish/frontend/nouns/endings.cljs"],"mappings":"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","names":["slovarish.frontend.nouns.endings/pol-words","slovarish.frontend.nouns.endings/which-declension","word","gender","ending","cljs.core/last","cons-stem?","cljs.core/re-find","cljs.core/re-pattern","cljs.core._EQ_","clojure.string/includes?","G__28125","cljs.core/Keyword","js/Error","slovarish.frontend.nouns.endings/noun-ending","animate","padezh","chislo","or__4253__auto__","fexpr__28126","G__28127","G__28128","G__28129","G__28130","G__28131","G__28132","G__28133","G__28134","G__28135","G__28136","and__4251__auto__","G__28137","G__28138","G__28139","G__28140","G__28141","G__28142","G__28143","G__28144","G__28145","G__28146","G__28147","fexpr__28148","G__28149","fexpr__28150","G__28151","G__28152","G__28153","G__28154","G__28155","G__28156","G__28157","slovarish.frontend.nouns.endings/adj-ending","_","G__28158"],"sourcesContent":["(ns slovarish.frontend.nouns.endings\n  \"Namespace for splitting stems and endings.\"\n  (:require [clojure.string :as s]))\n\n(def pol-words\n  #{\"\u043f\u043e\u043b\u0432\u0435\u043a\u0430\" \"\u043f\u043e\u043b\u0433\u043e\u0434\u0430\" \"\u043f\u043e\u043b\u0447\u0430\u0441\u0430\"})\n\n(defn which-declension\n  [word gender]\n  (let [ending     (str (last word))\n        cons-stem? (re-find (re-pattern (str \"[^\u0430\u044d\u043e\u0443\u044b\u044f\u0435\u0451\u044e\u0438\u044c]$\")) word)]\n    (cond\n      (= word \"\u043f\u0443\u0442\u044c\")                 3\n      (pol-words word)                2 ; end in -\u0430 but decline like 2nd-declension\n      (re-find #\"\u043c\u044f$\" word)           3\n      cons-stem?                      2\n      (s/includes? \"\u0438\u044b\" ending)       4 ; made-up category to accommodate plural-only nouns\n      (s/includes? \"\u0430\u044f\" ending)       1\n      (s/includes? \"\u0439\u043e\u0435\u0451\" ending)     2\n      (= ending \"\u044c\")                  (case gender :masculine 2 :feminine 3 :neuter 3)\n      :else                           nil)))\n\n(defn noun-ending\n  [word gender animate padezh chislo]\n  (cond\n    (re-find #\"[\u0430\u044f]\u043d\u0438\u043d$\" word) #\"(?:\u0438\\u0301?\u043d.*?|\u0435|\u0430\u043c|\u0430\u043c\u0438|\u0430\u0445)$\"\n\n    (or (#{\"\u043c\u044b\u0448\u043e\u043d\u043e\u043a\" \"\u043c\u0435\u0434\u0432\u0435\u0436\u043e\u043d\u043e\u043a\" \"\u0434\u0435\u0432\u0447\u0430\u0442\u0430\" \"\u0440\u0435\u0431\u044f\u0442\u0430\"} word)\n        (re-find #\"\u0451\u043d\u043e\u043a$\" word))\n    , (re-pattern\n       (str \"(?:[\u043e\u0451]\\u0301?\u043d\u043e?\\u0301?\u043a.*?|[\u0430\u044f]\\u0301?\u0442.*?\"\n            \"|\u0438|\u0435\\u0301?\u0439|\u044f\\u0301?\u043c|\u044c\u043c\u0438\\u0301?|\u044f\\u0301?\u0445)$\"))  ; for \u0434\u0435\u0442\u0438\n\n    (re-find #\"\u043c\u044f$\" word)      #\"\u043c[\u0435\u0451\u044f].*?$\"\n    :else\n    (case [padezh chislo]\n      [:accusative    :plural]  (noun-ending word gender animate (if animate :genitive :nominative) :plural)\n      [:dative        :plural]  #\"(?:\u044c|\u0438\\u0301?)?[\u0430\u044f]\\u0301?\u043c$\"\n      [:instrumental  :plural]  #\"(?:\u044c|\u0438\\u0301?)?[\u0430\u044f\u044c]\\u0301?\u043c\u0438\\u0301?$\"\n      [:prepositional :plural]  #\"(?:\u044c|\u0438\\u0301?)?[\u0430\u044f]\\u0301?\u0445$\"\n\n      (case (which-declension word gender)\n        1 (case chislo\n            :singular  (case padezh\n                         :nominative    #\"(?:\u044c|\u0438\\u0301?)?[\u0430\u044f]\\u0301?$\"\n                         :genitive      #\"(?:\u044c|\u0438\\u0301?)?[\u044b\u0438]\\u0301?$\"\n                         :accusative    #\"(?:\u044c|\u0438\\u0301?)?[\u0443\u044e]\\u0301?$\"\n                         :dative        #\"(?:\u044c|\u0438\\u0301?)?[\u0435\u0438]\\u0301?$\"\n                         :instrumental  #\"(?:\u044c|\u0438\\u0301?)?[\u043e\u0435\u0451]\\u0301?\u0439$\"\n                         :prepositional #\"(?:\u044c|\u0438\\u0301?)?[\u0435\u0438]\\u0301?$\"\n                         nil)\n            :plural   (case padezh\n                        :nominative    #\"(?:\u044c|\u0438\\u0301?)?[\u044b\u0438]\\u0301?$\"\n                        :genitive      (cond\n                                         (re-find #\"[\u044c\u0438][\u0438\u044f]$\" word)  #\"[\u0435\u0438]\\u0301?\u0439$\"\n                                         (re-find #\"\u0435\\u0301?\u044f$\" word) #\"\u0439$\" ; cf. \"\u0438\u0434\u0435\u044f\" intentionally nonexistent pattern\n                                         (re-find #\"[\u0443\u043e]\u044f$\" word)     #\"\u0439$\"\n                                         (and (= gender :masculine) ; pluralia tantums that behave like 2nd decl nouns\n                                              (re-find #\"\u0438$\" word))   #\"[\u043e\u0435\u0451]\\u0301?\u0432\"\n                                         :else #\"(?:\u0435\\u0301?\u0439|\u044c)$\")\n                        nil))\n        2 (case chislo\n            :singular (case padezh\n                        :nominative    (if (pol-words word) #\"\u0430\\u0301?$\"\n                                         (case gender\n                                           :masculine #\"(?:\u044c\u0435?|\u0438?\u0439|\u043e\\u0301?)$\"\n                                           :neuter    #\"[\u044c\u0438]?[\u043e\u0435\u0451]\\u0301?$\"\n                                           nil))\n                        :genitive      #\"[\u044c\u0438]?[\u0430\u044f]\\u0301?$\"\n                        :accusative    (noun-ending word gender animate (if animate :genitive :nominative) :singular)\n                        :dative        #\"[\u044c\u0438]?[\u0443\u044e]\\u0301?$\"\n                        :instrumental  #\"[\u044c\u0438]?[\u043e\u0435\u0451]\\u0301?\u043c$\"\n                        :prepositional #\"[\u044c\u0438]?[\u0435\u0438]\\u0301?$\"\n                        :locative      #\"[\u044c\u0438]?[\u0443\u044e]\\u0301?$\"\n                        :partitive     #\"[\u044c\u0438]?[\u0443\u044e]\\u0301?$\"\n                        nil)\n            :plural   (case padezh\n                        :nominative    (if (pol-words word) #\"\u044b\\u0301?$\"\n                                         (case gender\n                                           :masculine  #\"(?:[\u044c\u0438]?[\u044b\u0438\u0430\u044f]\\u0301?)$\"\n                                           :neuter     #\"[\u044c\u0438]?[\u0430\u044f\u0438]\\u0301?$\"\n                                           nil))\n                        :genitive      (cond\n                                         (re-find #\"[\u044c\u0438]\u0435$\" word) #\"\u0438\u0439$\"\n                                         (re-find #\"\u043e\u0432\u043e$\" word) #\"\u043e\u0432\u043e\u0432$\" ; cf. \"\u0441\u043b\u043e\u0432\u043e\" intentionally nonexistent pattern\n                                         (re-find #\"\u0451$\" word) #\"(?:[\u044c\u0438][\u0435\u0451]\u0432|\u0435\\u0301?\u0439|\u0438\u0439)$\"\n                                         :else #\"(?:[\u044c\u0438]?[\u043e\u0435\u0451]\\u0301?\u0432|\u0435\\u0301?\u0439)$\")\n                        nil))\n\n        3 (case chislo\n            :singular (cond\n                        (#{:nominative :accusative}\n                          padezh)      (case gender\n                                         :feminine   #\"\u044c$\"\n                                         :masculine  #\"\u044c$\"\n                                         nil)\n                        (#{:genitive :prepositional :dative}\n                          padezh)      (case gender\n                                         :feminine   #\"\u0438\\u0301?$\"\n                                         :masculine  #\"\u0438\\u0301?$\"\n                                         nil)\n                        :else\n                        (case padezh\n                          :instrumental  (case gender\n                                          :feminine   #\"\u044c\u044e\\u0301?$\"\n                                          :masculine  #\"\u0451\u043c$\"\n                                           nil)\n                          :locative      (when (= gender :feminine)\n                                           #\"\u0438\\u0301?$\")\n                          nil))\n            :plural   (case padezh\n                        :nominative    (case gender\n                                         :feminine   #\"\u0438\\u0301?$\"\n                                         :masculine  #\"\u0438\\u0301?$\"\n                                         nil)\n                        :genitive      (case gender\n                                         :feminine   #\"\u0435\\u0301?\u0439$\"\n                                         :masculine  #\"\u0435\\u0301?\u0439$\"\n                                         nil)\n                        nil))\n        4 (case padezh ; Made-up category for plural-only nouns\n            :nominative #\"[\u0438\u044b\u0430]\\u0301?$\"\n            :genitive #\"[\u0435\u043e]\\u0301?[\u0432\u0439]$\"\n            nil)\n        nil))))\n\n(defn adj-ending\n  [_ gender _ _ chislo]\n  (if (= chislo :plural) #\"[\u044b\u0438]\\u0301?[\u0435\u043c\u0445]?\u0438?$\"\n    (case gender\n      :masculine #\"(?:[\u044b\u043e\u0438]\\u0301?\u0439|[\u043e\u0435]\\u0301?\u0433\u043e|[\u043e\u0435]\\u0301?\u043c\u0443|[\u044b\u0438\u043e\u0435\u0451]\\u0301?\u043c)$\"\n      :feminine  #\"(?:[\u0430\u044f]\\u0301?\u044f|[\u0443\u044e]\\u0301?\u044e|[\u043e\u0435]\\u0301?\u0439)$\"\n      :neuter    #\"(?:[\u043e\u0435]\\u0301?\u0435|[\u043e\u0435]\\u0301?\u0433\u043e|[\u043e\u0435]\\u0301?\u043c\u0443|[\u044b\u0438\u043e\u0435\u0451]\\u0301?\u043c)$\"\n      nil)))\n"]}